<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Krypton.Navigator</name>
    </assembly>
    <members>
        <member name="T:Krypton.Navigator.ButtonSpecNavClose">
            <summary>
            Implementation for the fixed close button for navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavClose.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ButtonSpecNavClose class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavClose.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavClose.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavClose.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavContext">
            <summary>
            Implementation for the fixed context button for navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavContext.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ButtonSpecNavContext class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavContext.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavContext.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavContext.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavFixed">
            <summary>
            Implementation for the fixed navigator buttons.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavFixed.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Initialize a new instance of the ButtonSpecNavFixed class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="fixedStyle">Fixed style to use.</param>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavFixed.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavFixed.AllowComponent">
            <summary>
            Gets a value indicating if the component is allowed to be selected at design time.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavFixed.HeaderLocation">
            <summary>
            Gets and sets if the button header location.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavFixed.ResetHeaderLocation">
            <summary>
            Resets the HeaderLocation property to its default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavFixed.GetLocation(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button location value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button location.</returns>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavFixed.Navigator">
            <summary>
            Gets access to the owning navigator control.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavFixedConverter">
            <summary>
            Add conversion to a string for display in properties window at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavFixedConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavFixedConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavigator">
            <summary>
            ButtonSpecNavigator specific implementation of a button specification.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavigator.#ctor">
            <summary>
            Initialize a new instance of the ButtonSpecNavigator class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavigator.Type">
            <summary>
            Gets and sets the button type.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavigator.TypeRestricted">
            <summary>
            Gets and sets the button type.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavigator.ResetTypeRestricted">
            <summary>
            Resets the TypeRestricted property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavManagerLayoutBar">
            <summary>
            Manage a collection of button specs for use with a ViewLayoutDocker style bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.#ctor(System.Windows.Forms.Control,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ViewLayoutDocker[],Krypton.Toolkit.IPaletteMetric[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricPadding[],Krypton.Toolkit.GetToolStripRenderer,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecNavManagerLayoutBar class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.#ctor(System.Windows.Forms.Control,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ViewLayoutDocker[],Krypton.Toolkit.IPaletteMetric[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricPadding[],Krypton.Toolkit.GetToolStripRenderer,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecNavManagerLayoutBar class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.RemapTarget">
            <summary>
            Required target for the remapping.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.SetRemapTarget(Krypton.Toolkit.TabStyle)">
            <summary>
            Update the remap target to match the tab style.
            </summary>
            <param name="style">Tab style to match.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.SetRemapTarget(Krypton.Toolkit.ButtonStyle)">
            <summary>
            Update the remap target to match the button style.
            </summary>
            <param name="style">Button style to match.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.CreateButtonSpecRemap(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create a palette redirector for remapping button spec colors.
            </summary>
            <param name="redirector">Base palette class.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>Palette redirector for the button spec instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.UseInsideSpacers">
            <summary>
            Gets a value indicating if inside edge spacers are required.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutBar.ButtonSpecCreated(Krypton.Toolkit.ButtonSpec,Krypton.Toolkit.ButtonSpecView,System.Int32)">
            <summary>
            Perform final steps now that the button spec has been created.
            </summary>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <param name="buttonView">Associated ButtonSpecView instance.</param>
            <param name="viewDockerIndex">Index of view docker button is placed onto.</param>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar">
            <summary>
            Manage a collection of button specs for use with a ViewLayoutDocker style bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar.#ctor(System.Windows.Forms.Control,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ViewLayoutDocker[],Krypton.Toolkit.IPaletteMetric[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricPadding[],Krypton.Toolkit.GetToolStripRenderer,Krypton.Toolkit.NeedPaintHandler,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the ButtonSpecNavManagerLayoutHeaderBar class.
            </summary>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricIntOutside">Array of target metrics for outside spacer size.</param>
            <param name="viewMetricIntInside">Array of target metrics for inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="paletteContent">Palette source for color remapping.</param>
            <param name="paletteState">Palette state for color remapping.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar.UpdateRemapping(Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.PaletteState)">
            <summary>
            Update cached remapping values and update active views.
            </summary>
            <param name="paletteContent">Palette used to recover remapping colors.</param>
            <param name="paletteState">Palette state to use for remapping.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar.CreateButtonSpecRemap(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create a palette redirector for remapping button spec colors.
            </summary>
            <param name="redirector">Base palette class.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>Palette redirector for the button spec instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar.UseInsideSpacers">
            <summary>
            Gets a value indicating if inside edge spacers are required.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavManagerLayoutHeaderBar.ButtonSpecCreated(Krypton.Toolkit.ButtonSpec,Krypton.Toolkit.ButtonSpecView,System.Int32)">
            <summary>
            Perform final steps now that the button spec has been created.
            </summary>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <param name="buttonView">Associated ButtonSpecView instance.</param>
            <param name="viewDockerIndex">Index of view docker button is placed onto.</param>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavNext">
            <summary>
            Implementation for the fixed next button for navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavNext.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ButtonSpecNavNext class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavNext.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavNext.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavNext.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavPrevious">
            <summary>
            Implementation for the fixed previous button for navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavPrevious.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ButtonSpecNavPrevious class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavPrevious.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavPrevious.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavPrevious.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavRemap">
            <summary>
            Redirect requests for image/text colors to remap.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget">
            <summary>
            Specifies the target for remapping the source color onto.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.LabelControl">
            <summary>Specifies remapping to the label control text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.LabelPanel">
            <summary>Specifies remapping to the label panel text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonStandalone">
            <summary>Specifies remapping to the button standalone text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonAlternate">
            <summary>Specifies remapping to the button alternate text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonBreadCrumb">
            <summary>Specifies remapping to the button bread crumb text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonButtonSpec">
            <summary>Specifies remapping to the button spec text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCalendarDay">
            <summary>Specifies remapping to the button calendar day text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCluster">
            <summary>Specifies remapping to the button cluster text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCustom1">
            <summary>Specifies remapping to the button custom1 text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCustom2">
            <summary>Specifies remapping to the button custom2 text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCustom3">
            <summary>Specifies remapping to the button custom3 text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonForm">
            <summary>Specifies remapping to the button form text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonFormClose">
            <summary>Specifies remapping to the button form close text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonGallery">
            <summary>Specifies remapping to the button gallery text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonInputControl">
            <summary>Specifies remapping to the button input control text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonListItem">
            <summary>Specifies remapping to the button list item text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonLowProfile">
            <summary>Specifies remapping to the button low profile text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonNavigatorMini">
            <summary>Specifies remapping to the button navigator mini text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonNavigatorOverflow">
            <summary>Specifies remapping to the button navigator overflow text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonNavigatorStack">
            <summary>Specifies remapping to the button navigator stack text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.ButtonCommand">
            <summary>Specifies remapping to the button command text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabHighProfile">
            <summary>Specifies remapping to the tab high profile text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabStandardProfile">
            <summary>Specifies remapping to the tab standard profile text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabLowProfile">
            <summary>Specifies remapping to the tab low profile text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabOneNote">
            <summary>Specifies remapping to the tab one note text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabDock">
            <summary>Specifies remapping to the tab dock text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabDockAutoHidden">
            <summary>Specifies remapping to the tab dock auto hidden text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabCustom1">
            <summary>Specifies remapping to the tab custom1 text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabCustom2">
            <summary>Specifies remapping to the tab custom2 text color.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget.TabCustom3">
            <summary>Specifies remapping to the tab custom3 text color.</summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavRemap.#ctor(Krypton.Toolkit.IPalette,Krypton.Toolkit.ButtonSpec,Krypton.Navigator.ButtonSpecNavRemap.ButtonSpecRemapTarget)">
            <summary>
            Initialize a new instance of the ButtonSpecNavRemapDisabled class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="buttonSpec">Reference to button specification.</param>
            <param name="remapTarget">Target for remapping the color onto.</param>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavRemap.GetContentImageColorMap(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavRemap.GetContentImageColorTo(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavRemap.GetContentShortTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ButtonSpecNavRemap.GetContentLongTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Navigator.DragViewController">
            <summary>
            Process mouse events for handling drag and drop operations.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.LeftMouseDown">
            <summary>
            Occurs when the left mouse button is pressed down.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.RightMouseDown">
            <summary>
            Occurs when the right mouse button is pressed down.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.LeftDoubleClick">
            <summary>
            Occurs when the left mouse double click.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.DragStart">
            <summary>
            Occurs when start of drag operation occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.DragMove">
            <summary>
            Occurs when drag moves.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.DragEnd">
            <summary>
            Occurs when drag ends.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.DragViewController.DragQuit">
            <summary>
            Occurs when drag quits.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.#ctor(Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the DragViewController class.
            </summary>
            <param name="target">Target for state changes.</param>
        </member>
        <member name="P:Krypton.Navigator.DragViewController.MousePoint">
            <summary>
            Gets the current tracking mouse point.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragViewController.AllowDragging">
            <summary>
            Gets and sets if dragging is allowed.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Navigator.DragViewController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:Krypton.Navigator.DragViewController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragViewController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnLeftMouseDown(System.EventArgs)">
            <summary>
            Raises the LeftMouseDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnRightMouseDown(System.EventArgs)">
            <summary>
            Raises the RightMouseDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnLeftDoubleClick(System.EventArgs)">
            <summary>
            Raises the LeftDoubleClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnDragStart(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>
            Raises the DragStart event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
            <param name="offset">Offset of mouse compared to element.</param>
            <param name="c">Control that starts the drag operation.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnDragMove(System.Drawing.Point)">
            <summary>
            Raises the DragMove event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnDragEnd(System.Drawing.Point)">
            <summary>
            Raises the DragEnd event.
            </summary>
            <param name="mousePt">Mouse point at time of event.</param>
        </member>
        <member name="M:Krypton.Navigator.DragViewController.OnDragQuit">
            <summary>
            Raises the DragQuit event.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.OutlookMiniController">
            <summary>
            Process mouse events for the outlook mini button.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.OutlookMiniController.Click">
            <summary>
            Occurs when a click portion is clicked.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.#ctor(Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the OutlookMiniController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.RemoveFixed">
            <summary>
            Remove the fixed tracking mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Navigator.OutlookMiniController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Navigator.OutlookMiniController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Navigator.OutlookMiniController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.OutlookMiniController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Navigator.PageButtonController">
            <summary>
            Handle a button by ensuring that contained button specs are not treated as part of the button itself.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageButtonController.#ctor(Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PageButtonController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PageButtonController.ViewIsPartOfButton(Krypton.Toolkit.ViewBase)">
            <summary>
            Discovers if the provided view is part of the button.
            </summary>
            <param name="next">View to investigate.</param>
            <returns>True is part of button; otherwise false.</returns>
        </member>
        <member name="T:Krypton.Navigator.KryptonNavigator">
            <summary>
            Navigator control allows a variety of methods for moving around a collection of pages.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.SelectedPageChanged">
            <summary>
            Occurs after the selected page changes.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.Selecting">
            <summary>
            Occurs before a page is selected.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.Selected">
            <summary>
            Occurs after a page is selected.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.Deselecting">
            <summary>
            Occurs before a page is deselected.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.Deselected">
            <summary>
            Occurs after a page is deselected.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.PreviousAction">
            <summary>
            Occurs when the previous action occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.NextAction">
            <summary>
            Occurs when the next action occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.ContextAction">
            <summary>
            Occurs when the context action occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.CloseAction">
            <summary>
            Occurs when the close action occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.OutlookDropDown">
            <summary>
            Occurs when the context action occurs.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.DisplayPopupPage">
            <summary>
            Occurs when a page is about to be shown as a popup.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.ShowContextMenu">
            <summary>
            Occurs when a page is about to be shown as a popup.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabCountChanged">
            <summary>
            Occurs after the number of pages has changed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabVisibleCountChanged">
            <summary>
            Occurs after the number of visible pages has changed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabClicked">
            <summary>
            Occurs when the mouse clicks a page tab.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabDoubleClicked">
            <summary>
            Occurs when the mouse double clicks a page tab.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.PrimaryHeaderLeftClicked">
            <summary>
            Occurs when the left mouse clicks the primary header.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.PrimaryHeaderRightClicked">
            <summary>
            Occurs when the right mouse clicks the primary header.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.PrimaryHeaderDoubleClicked">
            <summary>
            Occurs when the mouse double clicks the primary header.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.BeforePageReorder">
            <summary>
            Occurs just before a page is reordered.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.BeforePageDrag">
            <summary>
            Occurs just before a page drag operation is started.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.AfterPageDrag">
            <summary>
            Occurs after a page drag operation has finished/aborted.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.PageDrop">
            <summary>
            Occurs when a page is being dropped.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.CtrlTabStart">
            <summary>
            Occurs when control tabbing is starting.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.CtrlTabWrap">
            <summary>
            Occurs when control tabbing is about to wrap around pages.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabMouseHoverStart">
            <summary>
            Occurs when the mouse starts hovering over a tab.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabMouseHoverEnd">
            <summary>
            Occurs when mouse hovering over a tab ends.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonNavigator.TabMoved">
            <summary>
            Occurs when the user moves a tab to a new indexed position.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.#ctor">
            <summary>
            Initialize a new instance of the KryptonNavigator class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Name">
            <summary>
            Gets and sets the name of the control.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Pages">
            <summary>
            Gets the collection of pages in this navigator control.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Controls">
            <summary>
            Gets the collection of controls contained within the control.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.SelectedIndex">
            <summary>
            Gets or sets the index of the currently-selected page.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.SelectedPage">
            <summary>
            Gets or sets the currently-selected page.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Bar">
            <summary>
            Gets access to the bar specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Stack">
            <summary>
            Gets access to the stack specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Outlook">
            <summary>
            Gets access to the outlook mode specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Button">
            <summary>
            Gets access to button specifications and fixed button logic.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Group">
            <summary>
            Gets access to the group specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Header">
            <summary>
            Gets access to the header specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.Panel">
            <summary>
            Gets access to the panels specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.PopupPages">
            <summary>
            Gets access to the popup page specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.ToolTips">
            <summary>
            Gets access to the tooltip specific settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StateCommon">
            <summary>
            Gets access to the common navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StateDisabled">
            <summary>
            Gets access to the disabled navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StateNormal">
            <summary>
            Gets access to the normal navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StateTracking">
            <summary>
            Gets access to the tracking navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StatePressed">
            <summary>
            Gets access to the pressed navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.StateSelected">
            <summary>
            Gets access to the selected navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.OverrideFocus">
            <summary>
            Gets access to the focus navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.NavigatorMode">
            <summary>
            Gets and sets the display mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ResetNavigatorMode">
            <summary>
            Resets the Mode property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.PageBackStyle">
            <summary>
            Gets and sets the page background style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.AllowPageDrag">
            <summary>
            Gets or sets the default setting for allowing the page dragging from of the navigator.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.AllowPageReorder">
            <summary>
            Gets or sets the default setting for allowing the page reordering using the mouse.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.AllowTabFocus">
            <summary>
            Gets or sets if the tab headers are allowed to take the focus.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.AllowTabSelect">
            <summary>
            Gets or sets if the tab headers can be selected by the users.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics select pages and button specs.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.DragPageNotify">
            <summary>
            Gets and sets the interface for receiving page drag notifications.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.GenerateDragTargets(Krypton.Navigator.PageDragEndData)">
            <summary>
            Generate a list of drag targets that are relevant to the provided end data.
            </summary>
            <param name="dragEndData">Pages data being dragged.</param>
            <returns>List of drag targets.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.GenerateDragTargets(Krypton.Navigator.PageDragEndData,Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Generate a list of drag targets that are relevant to the provided end data.
            </summary>
            <param name="dragEndData">Pages data being dragged.</param>
            <param name="allowFlags">Only drop pages that have one of these flags set.</param>
            <returns>List of drag targets.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.DismissPopups">
            <summary>
            Dismiss any showing popup page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.HideAllPages">
            <summary>
            Set the visible state of all the pages in the navigator to hidden.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.HideAllPages(System.Type)">
            <summary>
            Set the visible state of all the pages in the navigator to hidden.
            </summary>
            <param name="excludeType">Ignore pages of the specific type.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ShowAllPages">
            <summary>
            Set the visible state of all the pages in the navigator to showing.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ShowAllPages(System.Type)">
            <summary>
            Set the visible state of all the pages in the navigator to showing.
            </summary>
            <param name="excludeType">Ignore pages of the specific type.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PageFromPoint(System.Drawing.Point)">
            <summary>
            Gets the KryptonPage associated with the provided point.
            This only works if the point intercepts a page header such as a tab header or check button.
            </summary>
            <param name="pt">Point in client co-ordinates.</param>
            <returns>KryptonPage or null.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.SelectNextPage(System.Boolean)">
            <summary>
            Select the next page to the currently selected one.
            </summary>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if a new page was selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.SelectNextPage(Krypton.Navigator.KryptonPage,System.Boolean)">
            <summary>
            Select the next page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if a new page was selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.SelectPreviousPage(System.Boolean)">
            <summary>
            Select the previous page to the currently selected one.
            </summary>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if a new page was selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.SelectPreviousPage(Krypton.Navigator.KryptonPage,System.Boolean)">
            <summary>
            Select the previous page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if a new page was selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformCloseAction">
            <summary>
            Generates a CloseAction event for a Navigator. 
            </summary>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformCloseAction(Krypton.Navigator.KryptonPage)">
            <summary>
            Generates a CloseAction event for a Navigator. 
            </summary>
            <param name="page">Page to perform close action on.</param>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformContextAction">
            <summary>
            Generates a ContextAction event for a Navigator. 
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformPreviousAction">
            <summary>
            Generates a PreviousAction event for a Navigator. 
            </summary>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformNextAction">
            <summary>
            Generates a NextAction event for a Navigator. 
            </summary>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.PerformNeedPagePaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event and also repaints the selected page.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.ChildPanel">
            <summary>
            Gets the child panel used for displaying actual pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Called by the designer to hit test a point.
            </summary>
            <param name="pt">Point to be tested.</param>
            <returns>True if a hit otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Called by the designer to get the component associated with the point.
            </summary>
            <param name="pt">Point to be tested.</param>
            <returns>Component associated with point or null.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.DesignerMouseLeave">
            <summary>
            Called by the designer to indicate that the mouse has left the control.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.DebugOutput">
            <summary>
            Output debug information about the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the control.
            </summary>
            <returns>A new instance of KryptonNavigatorControlCollection assigned to the control.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.EvalInvokePaint">
            <summary>
            Work out if this control needs to use Invoke to force a repaint.
            </summary>
            <returns>True to use Invoke; false to use Invalidate.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>
            Previews a keyboard message.
            </summary>
            <param name="m">A Message that represents the window message to process.</param>
            <returns>true if the message was processed by the control; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>true if the key was processed by the control; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A Message, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.UpdateGlobalEvents(System.Boolean)">
            <summary>
            Update global event attachments.
            </summary>
            <param name="attach">True if attaching; otherwise false.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnDeselecting(Krypton.Navigator.KryptonPageCancelEventArgs)">
            <summary>
            Raises the Deselecting event.
            </summary>
            <param name="e">A KryptonPageCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnSelecting(Krypton.Navigator.KryptonPageCancelEventArgs)">
            <summary>
            Raises the Selecting event.
            </summary>
            <param name="e">A KryptonPageCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnDeselected(Krypton.Navigator.KryptonPageEventArgs)">
            <summary>
            Raises the Deselected event.
            </summary>
            <param name="e">A KryptonPageEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnSelected(Krypton.Navigator.KryptonPageEventArgs)">
            <summary>
            Raises the Selected event.
            </summary>
            <param name="e">A KryptonPageEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnBeforePageReorder(Krypton.Navigator.PageReorderEventArgs)">
            <summary>
            Raises the BeforePageReorder event.
            </summary>
            <param name="de">A PageDragCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnBeforePageDrag(Krypton.Navigator.PageDragCancelEventArgs)">
            <summary>
            Raises the BeforePageDrag event.
            </summary>
            <param name="de">A PageDragCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnAfterPageDrag(Krypton.Navigator.PageDragEndEventArgs)">
            <summary>
            Raises the AfterPageDrag event.
            </summary>
            <param name="e">A EventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnPageDrop(Krypton.Navigator.PageDropEventArgs)">
            <summary>
            Raises the PageDrop event.
            </summary>
            <param name="e">A v containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnSelectedPageChanged(System.EventArgs)">
            <summary>
            Raises the SelectedPageChanged event.
            </summary>
            <param name="e">An EventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnPreviousAction">
            <summary>
            Raises and processes the PreviousAction event.
            </summary>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnNextAction">
            <summary>
            Raises and processes the NextAction event.
            </summary>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnContextAction">
            <summary>
            Raises and processes the ContextAction event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnCloseAction(Krypton.Navigator.CloseActionEventArgs)">
            <summary>
            Raises the CloseAction event.
            </summary>
            <param name="e">An CloseActionEventArgs containing the event args.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigator.LayoutOnInitialized">
            <summary>
            Should the OnInitialized call perform layout.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnCloseAction(Krypton.Navigator.KryptonPage)">
            <summary>
            Raises and processes the CloseAction event.
            </summary>
            <param name="page">Page that is requested to be closed.</param>
            <returns>Returns the action that was performed.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabCountChanged(System.EventArgs)">
            <summary>
            Raises the TabCountChanged event.
            </summary>
            <param name="e">An EventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabVisibleCountChanged(System.EventArgs)">
            <summary>
            Raises the TabVisibleCountChanged event.
            </summary>
            <param name="e">An EventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabClicked(Krypton.Navigator.KryptonPageEventArgs)">
            <summary>
            Raises the TabClicked event.
            </summary>
            <param name="e">An KryptonPageEventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabDoubleClicked(Krypton.Navigator.KryptonPageEventArgs)">
            <summary>
            Raises the TabDoubleClicked event.
            </summary>
            <param name="e">An KryptonPageEventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnPrimaryHeaderLeftClicked(System.EventArgs)">
            <summary>
            Raises the PrimaryHeaderLeftClicked event.
            </summary>
            <param name="e">An EventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnPrimaryHeaderRightClicked(System.EventArgs)">
            <summary>
            Raises the PrimaryHeaderRightClicked event.
            </summary>
            <param name="e">An EventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnPrimaryHeaderDoubleClicked(System.EventArgs)">
            <summary>
            Raises the PrimaryHeaderDoubleClicked event.
            </summary>
            <param name="e">An EventArgs containing the event args.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnOutlookDropDown(Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Raises the OutlookDropDown event.
            </summary>
            <param name="kcm">Context menu about to be Displayed.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnDisplayPopupPage(Krypton.Navigator.PopupPageEventArgs)">
            <summary>
            Raises the DisplayPopupPage event.
            </summary>
            <param name="e">A PopupPageEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnShowContextMenu(Krypton.Navigator.ShowContextMenuArgs)">
            <summary>
            Raises the ShowContextMenu event.
            </summary>
            <param name="e">A ShowContextMenuArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnCtrlTabStart(Krypton.Navigator.CtrlTabCancelEventArgs)">
            <summary>
            Raises the CtrlTabStart event.
            </summary>
            <param name="e">An CtrlTabCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnCtrlTabWrap(Krypton.Navigator.CtrlTabCancelEventArgs)">
            <summary>
            Raises the CtrlTabWrap event.
            </summary>
            <param name="e">An CtrlTabCancelEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabMouseHoverStart(Krypton.Navigator.KryptonPageEventArgs)">
            <summary>
            Raises the TabMouseHoverStart event.
            </summary>
            <param name="e">An KryptonPageEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabMouseHoverEnd(System.EventArgs)">
            <summary>
            Raises the TabMouseHoverEnd event.
            </summary>
            <param name="e">An EventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnTabMoved(Krypton.Navigator.TabMovedEventArgs)">
            <summary>
            Raises the TabMoved event.
            </summary>
            <param name="e">An TabMovedEventArgs containing event details.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnViewBuilderPropertyChanged(System.String)">
            <summary>
            Raises the ViewBuilderPropertyChanged event.
            </summary>
            <param name="propertyName">Name of the property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.ForceControlLayout">
            <summary>
            Force the layout logic to size and position the panels.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigator.OnNeedPagePaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required that involves the selected page.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:Krypton.Navigator.KryptonNavigatorControlCollection">
            <summary>
            Represents a collection of child controls for the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorControlCollection.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the KryptonNavigatorControlCollection class.
            </summary>
            <param name="owner">Control containing this collection.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorControlCollection.Add(System.Windows.Forms.Control)">
            <summary>
            Adds the specified control to the control collection.
            </summary>
            <param name="value">The KryptonPage to add to the control collection.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the VisualPopupPage class.
            </summary>
            <param name="navigator">Reference to owning navigator control.</param>
            <param name="page">Reference to page for display.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.ShowCalculatingSize(System.Drawing.Rectangle)">
            <summary>
            Show the group popup relative to the parent group instance.
            </summary>
            <param name="parentScreenRect">Screen rectangle of the parent.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.VisualPopupPage.ProcessTabKey(System.Boolean)">
            <summary>
            Selects the next available control and makes it active.
            </summary>
            <param name="forward">true to cycle forward; otherwise false.</param>
            <returns>true if a control selected; otherwise false.</returns>
        </member>
        <member name="T:Krypton.Navigator.BarItemSizingConverter">
            <summary>
            Custom type converter so that BarItemSizing values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.BarItemSizingConverter.#ctor">
            <summary>
            Initialize a new instance of the BarItemSizingConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.BarItemSizingConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonDisplayConverter">
            <summary>
            Custom type converter so that ButtonDisplay values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonDisplayConverter.#ctor">
            <summary>
            Initialize a new instance of the ButtonDisplayConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonDisplayConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonDisplayLogicConverter">
            <summary>
            Custom type converter so that ButtonDisplayLogic values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ButtonDisplayLogicConverter.#ctor">
            <summary>
            Initialize a new instance of the ButtonDisplayLogicConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ButtonDisplayLogicConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.CloseButtonActionConverter">
            <summary>
            Custom type converter so that CloseButtonAction values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.CloseButtonActionConverter.#ctor">
            <summary>
            Initialize a new instance of the CloseButtonActionConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.CloseButtonActionConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ContextButtonActionConverter">
            <summary>
            Custom type converter so that ContextButtonAction values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ContextButtonActionConverter.#ctor">
            <summary>
            Initialize a new instance of the ContextButtonActionConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ContextButtonActionConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DirectionButtonActionConverter">
            <summary>
            Custom type converter so that DirectionButtonAction values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DirectionButtonActionConverter.#ctor">
            <summary>
            Initialize a new instance of the DirectionButtonActionConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DirectionButtonActionConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.MapKryptonPageImageConverter">
            <summary>
            Custom type converter so that MapKryptonPageImage values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.MapKryptonPageImageConverter.#ctor">
            <summary>
            Initialize a new instance of the MapKryptonPageImageConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.MapKryptonPageImageConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.MapKryptonPageTextConverter">
            <summary>
            Custom type converter so that MapKryptonPageText values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.MapKryptonPageTextConverter.#ctor">
            <summary>
            Initialize a new instance of the MapKryptonPageTextConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.MapKryptonPageTextConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorModeConverter">
            <summary>
            Custom type converter so that NavigatorMode values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorModeConverter.#ctor">
            <summary>
            Initialize a new instance of the NavigatorMode class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorModeConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavButtonSpecStyleConverter">
            <summary>
            Custom type converter so that PaletteNavButtonSpecStyle values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavButtonSpecStyleConverter.#ctor">
            <summary>
            Initialize a new instance of the PaletteNavButtonSpecStyleConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavButtonSpecStyleConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPageAllowConverter">
            <summary>
            Custom type converter so that PopupPageAllow values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PopupPageAllowConverter.#ctor">
            <summary>
            Initialize a new instance of the PopupPagePositionConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PopupPageAllowConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPagePositionConverter">
            <summary>
            Custom type converter so that PopupPagePosition values appear as neat text at design time.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PopupPagePositionConverter.#ctor">
            <summary>
            Initialize a new instance of the PopupPagePositionConverter class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PopupPagePositionConverter.Pairs">
            <summary>
            Gets an array of lookup pairs.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DragFeedback">
            <summary>
            Base class for drag feedback implementations.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Finalize">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Dispose">
            <summary>
            Release managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:Krypton.Navigator.DragFeedback.IsDisposed">
            <summary>
            Gets a value indicating if the view has been disposed.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Start(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,Krypton.Navigator.PageDragEndData,Krypton.Navigator.DragTargetList)">
            <summary>
            Called to initialize the implementation when dragging starts.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="pageDragEndData">Drag data associated with drag operation.</param>
            <param name="dragTargets">List of all drag targets.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Feedback(System.Drawing.Point,Krypton.Navigator.DragTarget)">
            <summary>
            Called to request feedback be shown for the specified target.
            </summary>
            <param name="screenPt">Current screen point of mouse.</param>
            <param name="target">Target that needs feedback.</param>
            <returns>Updated drag target.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragFeedback.Quit">
            <summary>
            Called to cleanup when dragging has finished.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedback.PaletteDragDrop">
            <summary>
            Gets access to the cached drawing palette.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedback.Renderer">
            <summary>
            Gets access to the cached drawing renderer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedback.PageDragEndData">
            <summary>
            Gets access to the cached drag data.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedback.DragTargets">
            <summary>
            Gets access to the cached drag target list.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DragFeedbackDocking">
            <summary>
            Provides drag feedback as a set of docking indicators.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.DockCluster.#ctor(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,Krypton.Navigator.DragTarget)">
            <summary>
            Initialize a new instance of the DockCluster class.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="target">Initial target for the cluster.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.DockCluster.Dispose">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedbackDocking.DockCluster.ScreenRect">
            <summary>
            Gets the screen rectangle this cluster works for.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedbackDocking.DockCluster.DrawRect">
            <summary>
            Gets the drawing rectangle this cluster works for.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragFeedbackDocking.DockCluster.ExcludeCluster">
            <summary>
            Gets a value indicating if the cluster is exclusive to the current contents.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.DockCluster.Add(Krypton.Navigator.DragTarget)">
            <summary>
            Add the new target to the cluster.
            </summary>
            <param name="target">Target to add into cluster.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.DockCluster.Feedback(System.Drawing.Point,Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Update visual feedback based on the current screen position of the mouse.
            </summary>
            <param name="screenPt">Latest mouse screen position.</param>
            <param name="dragFeedback">Type of drag feedback required.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.#ctor(Krypton.Toolkit.PaletteDragFeedback)">
            <summary>
            Initialize a new instance of the DockCluster class.
            </summary>
            <param name="dragFeedback">Type of drag feedback required.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.Start(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,Krypton.Navigator.PageDragEndData,Krypton.Navigator.DragTargetList)">
            <summary>
            Called to initialize the implementation when dragging starts.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="pageDragEndData">Drag data associated with drag operation.</param>
            <param name="dragTargets">List of all drag targets.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.Feedback(System.Drawing.Point,Krypton.Navigator.DragTarget)">
            <summary>
            Called to request feedback be shown for the specified target.
            </summary>
            <param name="screenPt">Current screen point of mouse.</param>
            <param name="target">Target that needs feedback.</param>
            <returns>Updated drag target.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackDocking.Quit">
            <summary>
            Called to cleanup when dragging has finished.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DragFeedbackSolid">
            <summary>
            Provides drag feedback as solid windows overlaying hot areas.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackSolid.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackSolid.Start(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,Krypton.Navigator.PageDragEndData,Krypton.Navigator.DragTargetList)">
            <summary>
            Called to initialize the implementation when dragging starts.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="pageDragEndData">Drag data associated with drag operation.</param>
            <param name="dragTargets">List of all drag targets.</param>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackSolid.Feedback(System.Drawing.Point,Krypton.Navigator.DragTarget)">
            <summary>
            Called to request feedback be shown for the specified target.
            </summary>
            <param name="screenPt">Current screen point of mouse.</param>
            <param name="target">Target that needs feedback.</param>
            <returns>Updated drag target.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackSolid.Quit">
            <summary>
            Called to cleanup when dragging has finished.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragFeedbackSolid.FindTarget(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Find the target the first matches the provided screen point.
            </summary>
            <param name="screenPt">Point in screen coordinates.</param>
            <param name="dragEndData">Data to be dropped at destination.</param>
            <returns>First target that matches; otherwise null.</returns>
        </member>
        <member name="T:Krypton.Navigator.DragTargetProviderCollection">
            <summary>
            Specialise the generic collection with type specific rules for item accessor.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DragManager">
            <summary>
            Manage a dragging operation.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.#cctor">
            <summary>
            Initializes a static fields of the TargetManager class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.#ctor">
            <summary>
            Initialize a new instance of the DragManager class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.Finalize">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.Dispose">
            <summary>
            Release managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:Krypton.Navigator.DragManager.IsDisposed">
            <summary>
            Gets a value indicating if the view has been disposed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.StateCommon">
            <summary>
            Gets access to the common navigator appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.DragTargetProviders">
            <summary>
            Gets access to the collection of target providers.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.IsDragging">
            <summary>
            Gets a value indicating if dragging is currently occuring.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragManager.DocumentCursor">
            <summary>
            Gets and sets a value indicating if document cursors should be used during dragging.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.DragStart(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Occurs when dragging starts.
            </summary>
            <param name="screenPt">Mouse screen point at start of drag.</param>
            <param name="dragEndData">Data to be dropped at destination.</param>
            <returns>True if dragging waas started; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragManager.DragMove(System.Drawing.Point)">
            <summary>
            Occurs on dragging movement.
            </summary>
            <param name="screenPt">Latest screen point during dragging.</param>
        </member>
        <member name="M:Krypton.Navigator.DragManager.DragEnd(System.Drawing.Point)">
            <summary>
            Occurs when dragging ends because of dropping.
            </summary>
            <param name="screenPt">Ending screen point when dropping.</param>
            <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragManager.DragQuit">
            <summary>
            Occurs when dragging quits.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.PageDragStart(System.Object,Krypton.Navigator.KryptonNavigator,Krypton.Navigator.PageDragCancelEventArgs)">
            <summary>
            Occurs when a page drag is about to begin and allows it to be cancelled.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
            <param name="navigator">Navigator instance associated with source; can be null.</param>
            <param name="e">Event arguments indicating list of pages being dragged.</param>
        </member>
        <member name="M:Krypton.Navigator.DragManager.PageDragMove(System.Object,Krypton.Toolkit.PointEventArgs)">
            <summary>
            Occurs when the mouse moves during the drag operation.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
            <param name="e">Event arguments containing the new screen point of the mouse.</param>
        </member>
        <member name="M:Krypton.Navigator.DragManager.PageDragEnd(System.Object,Krypton.Toolkit.PointEventArgs)">
            <summary>
            Occurs when drag operation completes with pages being dropped.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
            <param name="e">Event arguments containing the new screen point of the mouse.</param>
            <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragManager.PageDragQuit(System.Object)">
            <summary>
            Occurs when dragging pages has been cancelled.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
        </member>
        <member name="M:Krypton.Navigator.DragManager.CreateDropData(Krypton.Navigator.PageDragEndData)">
            <summary>
            Create the actual drop data based on the proposed data provided.
            </summary>
            <param name="dropData">Proposed drop data.</param>
            <returns>Actual drop data</returns>
        </member>
        <member name="M:Krypton.Navigator.DragManager.UpdateCursor">
            <summary>
            Update the Displayed cursor to reflect the current dragging state.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragManager.RestoreCursor">
            <summary>
            Restore the Displayed cursor back to null.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DragTargetList">
            <summary>
            Manage a list of drag targets.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTargetList.AddRange(Krypton.Navigator.IDragTargetProvider,Krypton.Navigator.PageDragEndData)">
            <summary>
            Add a list of drag targets from the provided interface.
            </summary>
            <param name="provider">Interface reference.</param>
            <param name="dragEndData">Pages data being dragged.</param>
        </member>
        <member name="T:Krypton.Navigator.DragTarget">
            <summary>
            Base class for dragging target implementations.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,Krypton.Navigator.DragTargetHint,Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Initialize a new instance of the DragTarget class.
            </summary>
            <param name="screenRect">Rectangle representing targets screen area.</param>
            <param name="hotRect">Rectangle representing targets hot area.</param>
            <param name="drawRect">Rectangle representing targets drawing area.</param>
            <param name="hint">Hint about the targets operation.</param>
            <param name="allowFlags">Only drop pages that have one of these flags defined.</param>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.Finalize">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.Dispose">
            <summary>
            Release managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.IsDisposed">
            <summary>
            Gets a value indicating if the view has been disposed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.ScreenRect">
            <summary>
            Gets the rectangle representing the targets screen area.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.HotRect">
            <summary>
            Gets the rectangle representing the targets hot area.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.DrawRect">
            <summary>
            Gets the rectangle representing the targets drawing area.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.Hint">
            <summary>
            Gets the hint used to help the drag feedback.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DragTarget.AllowFlags">
            <summary>
            Gets the flags of the pages allowed to be dropped.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.IsMatch(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Is this target a match for the provided screen position.
            </summary>
            <param name="screenPt">Position in screen coordinates.</param>
            <param name="dragEndData">Data to be dropped at destination.</param>
            <returns>True if a match; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.PerformDrop(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Perform the drop action associated with the target.
            </summary>
            <param name="screenPt">Position in screen coordinates.</param>
            <param name="dragEndData">Data to be dropped at destination.</param>
            <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragTarget.ProcessDragEndData(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.PageDragEndData)">
            <summary>
            Process the drag pages in the context of a target navigator.
            </summary>
            <param name="target">Target navigator instance.</param>
            <param name="data">Dragged page data.</param>
            <returns>Last page to be transferred.</returns>
        </member>
        <member name="T:Krypton.Navigator.DragTargetNavigatorTransfer">
            <summary>
            Target the entire navigator client area.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DragTargetNavigatorTransfer.#ctor(System.Drawing.Rectangle,Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Initialize a new instance of the DragTargetNavigatorTransfer class.
            </summary>
            <param name="rect">Rectangle for hot and draw areas.</param>
            <param name="navigator">Control instance for drop.</param>
            <param name="allowFlags">Only drop pages that have one of these flags defined.</param>
        </member>
        <member name="M:Krypton.Navigator.DragTargetNavigatorTransfer.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:Krypton.Navigator.DragTargetNavigatorTransfer.IsMatch(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Is this target a match for the provided screen position.
            </summary>
            <param name="screenPt">Position in screen coordinates.</param>
            <param name="dragEndData">Data to be dropped at destination.</param>
            <returns>True if a match; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.DragTargetNavigatorTransfer.PerformDrop(System.Drawing.Point,Krypton.Navigator.PageDragEndData)">
            <summary>
            Perform the drop action associated with the target.
            </summary>
            <param name="screenPt">Position in screen coordinates.</param>
            <param name="data">Data to pass to the target to process drop.</param>
            <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
        </member>
        <member name="T:Krypton.Navigator.DropDockingIndicatorsRounded">
            <summary>
            Draws a window containing rounded docking indicators.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.#ctor(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the DropDockingIndicatorsRounded class.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="showLeft">Show left hot area.</param>
            <param name="showRight">Show right hot area.</param>
            <param name="showTop">Show top hot area.</param>
            <param name="showBottom">Show bottom hot area.</param>
            <param name="showMiddle">Show middle hot area.</param>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.Dispose">
            <summary>
            Make sure the resources are disposed of gracefully.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.ShowRelative(System.Drawing.Rectangle)">
            <summary>
            Show the window relative to provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.Hide">
            <summary>
            Hide the window from display.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.ScreenMouseMove(System.Drawing.Point)">
            <summary>
            Perform mouse hit testing against a screen point.
            </summary>
            <param name="screenPoint">Screen point.</param>
            <returns>Area that is active.</returns>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsRounded.MouseReset">
            <summary>
            Ensure the state is updated to reflect the mouse not being over the control.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DropDockingIndicatorsSquare">
            <summary>
            Draws a window containing square docking indicators.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsSquare.#ctor(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance of the DropDockingIndicatorsSquare class.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
            <param name="showLeft">Show left hot area.</param>
            <param name="showRight">Show right hot area.</param>
            <param name="showTop">Show top hot area.</param>
            <param name="showBottom">Show bottom hot area.</param>
            <param name="showMiddle">Show middle hot area.</param>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsSquare.ShowRelative(System.Drawing.Rectangle)">
            <summary>
            Show the window relative to provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsSquare.ScreenMouseMove(System.Drawing.Point)">
            <summary>
            Perform mouse hit testing against a screen point.
            </summary>
            <param name="screenPoint">Screen point.</param>
            <returns>Area that is active.</returns>
        </member>
        <member name="M:Krypton.Navigator.DropDockingIndicatorsSquare.MouseReset">
            <summary>
            Ensure the state is updated to reflect the mouse not being over the control.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DropSolidWindow">
            <summary>
            Draws a semi-transparent window to indicate a drop rectangle.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropSolidWindow.#ctor(Krypton.Toolkit.IPaletteDragDrop,Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the DropSolidWindow class.
            </summary>
            <param name="paletteDragDrop">Drawing palette.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:Krypton.Navigator.DropSolidWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropSolidWindow.ShowWithoutActivate">
            <summary>
            Show the window without taking activation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.DropSolidWindow.SolidRect">
            <summary>
            Gets and sets the new solid rectangle area.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DropSolidWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs with event data.</param>
        </member>
        <member name="M:Krypton.Navigator.DropSolidWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process. </param>
        </member>
        <member name="T:Krypton.Navigator.PageDragEndData">
            <summary>
            Details for an event that provides pages and cell associated with a page dragging event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageDragEndData.#ctor(System.Object,Krypton.Navigator.KryptonPageCollection)">
            <summary>
            Initialize a new instance of the PageDragEndData class.
            </summary>
            <param name="source">Source object for the drag data..</param>
            <param name="pages">Collection of pages.</param>
        </member>
        <member name="M:Krypton.Navigator.PageDragEndData.#ctor(System.Object,Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPageCollection)">
            <summary>
            Initialize a new instance of the PageDragEndData class.
            </summary>
            <param name="source">Source object for the drag data..</param>
            <param name="navigator">Navigator associated with pages.</param>
            <param name="pages">Collection of pages.</param>
        </member>
        <member name="P:Krypton.Navigator.PageDragEndData.Source">
            <summary>
            Gets access to the source of the drag data.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragEndData.Navigator">
            <summary>
            Gets access to any associated KryptonNavigator instance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragEndData.Pages">
            <summary>
            Gets access to the collection of pages.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.CloseActionEventArgs">
            <summary>
            Details for a close button action event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.CloseActionEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32,Krypton.Navigator.CloseButtonAction)">
            <summary>
            Initialize a new instance of the CloseActionEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
            <param name="action">Close action to take.</param>
        </member>
        <member name="P:Krypton.Navigator.CloseActionEventArgs.Action">
            <summary>
            Gets and sets the close action to take.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ContextActionEventArgs">
            <summary>
            Details for a context button action event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ContextActionEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32,Krypton.Navigator.ContextButtonAction,Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the ContextActionEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
            <param name="action">Close action to take.</param>
            <param name="contextMenu">Prepopulated context menu ready for display.</param>
        </member>
        <member name="P:Krypton.Navigator.ContextActionEventArgs.Action">
            <summary>
            Gets and sets the close action to take.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.CtrlTabCancelEventArgs">
            <summary>
            Details for control tabbing events.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.CtrlTabCancelEventArgs.#ctor(System.Boolean)">
            <summary>
            Initialize a new instance of the CtrlTabCancelEventArgs class.
            </summary>
            <param name="forward">Tabbing in forward or backwards direction.</param>
        </member>
        <member name="P:Krypton.Navigator.CtrlTabCancelEventArgs.Forward">
            <summary>
            Gets a value indicating if control tabbing forward.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.DirectionActionEventArgs">
            <summary>
            Details for a direction button (next/previous) action event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.DirectionActionEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32,Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Initialize a new instance of the DirectionActionEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
            <param name="action">Previous/Next action to take.</param>
        </member>
        <member name="P:Krypton.Navigator.DirectionActionEventArgs.Action">
            <summary>
            Gets and sets the next/previous action to take.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.KryptonContextMenuEventArgs">
            <summary>
            Details providing a KryptonContextMenu instance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonContextMenuEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32,Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the KryptonContextMenuEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
            <param name="contextMenu">Prepopulated context menu ready for display.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonContextMenuEventArgs.KryptonContextMenu">
            <summary>
            Gets access to the KryptonContextMenu that is to be shown.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageCancelEventArgs">
            <summary>
            Details for page related events that can be cancelled.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageCancelEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32)">
            <summary>
            Initialize a new instance of the KryptonCancelPageEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageCancelEventArgs.Cancel">
            <summary>
            Gets the page associated with the event.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageFlagsEventArgs">
            <summary>
            Provide a KryptonPageFlags enumeration with event details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageFlagsEventArgs.#ctor(Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Initialize a new instance of the KryptonPageFlagsEventArgs class.
            </summary>
            <param name="flags">KryptonPageFlags enumeration.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageFlagsEventArgs.Flags">
            <summary>
            Gets the KryptonPageFlags enumeration value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageDragCancelEventArgs">
            <summary>
            Details for an cancellable event that provides pages associated with a page dragging event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageDragCancelEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control,Krypton.Navigator.KryptonPage[])">
            <summary>
            Initialize a new instance of the PageDragCancelEventArgs class.
            </summary>
            <param name="elementOffset">Offset from the top left of the element.</param>
            <param name="screenPoint">Screen point of the mouse.</param>
            <param name="c">Control that started the drag operation.</param>
            <param name="pages">Array of event associated pages.</param>
        </member>
        <member name="M:Krypton.Navigator.PageDragCancelEventArgs.#ctor(System.Drawing.Point,System.Drawing.Point,System.Windows.Forms.Control,Krypton.Navigator.KryptonPageCollection)">
            <summary>
            Initialize a new instance of the PageDragCancelEventArgs class.
            </summary>
            <param name="screenPoint">Screen point of the mouse.</param>
            <param name="elementOffset">Offset from the top left of the element.</param>
            <param name="c">Control that started the drag operation.</param>
            <param name="pages">Collection of event associated pages.</param>
        </member>
        <member name="P:Krypton.Navigator.PageDragCancelEventArgs.ScreenPoint">
            <summary>
            Gets access to the associated screen point.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragCancelEventArgs.ElementOffset">
            <summary>
            Gets access to the associated element offset.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragCancelEventArgs.Control">
            <summary>
            Gets access to the control that started the drag operation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragCancelEventArgs.Pages">
            <summary>
            Gets access to the collection of pages.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageDragEndEventArgs">
            <summary>
            Details for an event that provides pages associated with a page dragging event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageDragEndEventArgs.#ctor(System.Boolean,Krypton.Navigator.KryptonPage[])">
            <summary>
            Initialize a new instance of the PageDragEndEventArgs class.
            </summary>
            <param name="dropped">True if a drop was performed; otherwise false.</param>
            <param name="pages">Array of event associated pages.</param>
        </member>
        <member name="P:Krypton.Navigator.PageDragEndEventArgs.Dropped">
            <summary>
            Gets a value indicating if the drop was performed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragEndEventArgs.Pages">
            <summary>
            Gets access to the collection of pages.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageDragEventArgs">
            <summary>
            Details for an event that provides pages associated with a page dragging event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageDragEventArgs.#ctor(System.Drawing.Point,Krypton.Navigator.KryptonPage[])">
            <summary>
            Initialize a new instance of the KryptonPageDragEventArgs class.
            </summary>
            <param name="screenPoint">Screen point of the mouse.</param>
            <param name="pages">Array of event associated pages.</param>
        </member>
        <member name="M:Krypton.Navigator.PageDragEventArgs.#ctor(System.Drawing.Point,Krypton.Navigator.KryptonPageCollection)">
            <summary>
            Initialize a new instance of the KryptonPageDragEventArgs class.
            </summary>
            <param name="screenPoint">Screen point of the mouse.</param>
            <param name="pages">Collection of event associated pages.</param>
        </member>
        <member name="P:Krypton.Navigator.PageDragEventArgs.ScreenPoint">
            <summary>
            Gets access to the associated screen point.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageDragEventArgs.Pages">
            <summary>
            Gets access to the collection of pages.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageDropEventArgs">
            <summary>
            Details for an event that indicates a page is being dropped.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageDropEventArgs.#ctor(Krypton.Navigator.KryptonPage)">
            <summary>
            Initialize a new instance of the PageDropEventArgs class.
            </summary>
            <param name="page">Page that is being dropped.</param>
        </member>
        <member name="P:Krypton.Navigator.PageDropEventArgs.Page">
            <summary>
            Gets and sets the page to be dropped.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.TabMovedEventArgs">
            <summary>
            Details for an event that provides a new index position for a specified page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.TabMovedEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32)">
            <summary>
            Initialize a new instance of the TabMovedEventArgs class.
            </summary>
            <param name="page">Reference to page that has been moved.</param>
            <param name="index">New index of the page within the page collection.</param>
        </member>
        <member name="P:Krypton.Navigator.TabMovedEventArgs.Page">
            <summary>
            Gets a reference to the page that has been moved.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.TabMovedEventArgs.Index">
            <summary>
            Gets the new index of the page within the page collection.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageReorderEventArgs">
            <summary>
            Details of an event that is fired just before a page is reordered.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageReorderEventArgs.#ctor(Krypton.Navigator.KryptonPage,Krypton.Navigator.KryptonPage,System.Boolean)">
            <summary>
            Initialize a new instance of the PageReorderEventArgs class.
            </summary>
            <param name="pageMoving">Reference to page being moved.</param>
            <param name="pageTarget">Reference to target paged.</param>
            <param name="movingBefore">True if moving page is to be positioned before the target; otherwise after the target.</param>
        </member>
        <member name="P:Krypton.Navigator.PageReorderEventArgs.PageMoving">
            <summary>
            Gets the page that is being moved.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageReorderEventArgs.PageTarget">
            <summary>
            Gets the page that is the target for the move.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PageReorderEventArgs.MovingBefore">
            <summary>
            Gets a value indicating if the page being moved is to be placed before the target page.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPageEventArgs">
            <summary>
            Details for a popup page event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PopupPageEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Initialize a new instance of the PopupPageEventArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
            <param name="screenRect">Screen rectangle for showing the popup.</param>
        </member>
        <member name="P:Krypton.Navigator.PopupPageEventArgs.ScreenRect">
            <summary>
            Gets and sets the screen rectangle for showing the popup page.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ShowContextMenuArgs">
            <summary>
            Details for a close button action event.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ShowContextMenuArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32)">
            <summary>
            Initialize a new instance of the ShowContextMenuArgs class.
            </summary>
            <param name="page">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
        </member>
        <member name="P:Krypton.Navigator.ShowContextMenuArgs.ContextMenuStrip">
            <summary>
            Gets and sets the context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ShowContextMenuArgs.KryptonContextMenu">
            <summary>
            Gets and sets the context menu strip.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PageButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAny instances for a KryptonPage.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageButtonSpecCollection.#ctor(Krypton.Navigator.KryptonPage)">
            <summary>
            Initialize a new instance of the PageButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:Krypton.Navigator.NavigatorButtonSpecCollection">
            <summary>
            Collection for managing NavigatorButtonSpec instances for a KryptonNavigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButtonSpecCollection.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the NavigatorButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:Krypton.Navigator.NavFixedButtonSpecCollection">
            <summary>
            Collection for managing NavigatorButtonSpec instances.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavFixedButtonSpecCollection.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the NavFixedButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageFlags">
            <summary>
            Specifies flags that can be applied to a KryptonPage
            </summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.PageInOverflowBarForOutlookMode">
            <summary>Specifies that in the Outlook mode the page is shown on the overflow bar.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.AllowConfigSave">
            <summary>Specifies that the page is allowed to be saved to configuration.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowClose">
            <summary>Specifies that the user is allowed to close a docking page.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowDropDown">
            <summary>Specifies that the user is allowed to select from a drop down button.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowAutoHidden">
            <summary>Specifies that the user is allowed to make a page auto hidden.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowDocked">
            <summary>Specifies that the user is allowed to make a page docked.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowFloating">
            <summary>Specifies that the user is allowed to make a page floating.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowWorkspace">
            <summary>Specifies that the user is allowed to make a page tabbed in a workspace.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.DockingAllowNavigator">
            <summary>Specifies that the user is allowed to make a page tabbed in a navigator.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.AllowPageReorder">
            <summary>Specifies that the page is allowed to be drag reordered.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.AllowPageDrag">
            <summary>Specifies that the page is allowed to be dragged from the navigator.</summary>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFlags.All">
            <summary>Specifies that all flags are set.</summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorMode">
            <summary>
            Specifies the display mode of the Navigator control.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarTabGroup">
            <summary>Specifies that tabs are placed on a bar outside a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarTabOnly">
            <summary>Specifies that tabs are placed on a bar without showing pages.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarRibbonTabGroup">
            <summary>Specifies that ribbons tabs are placed on a bar outside a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarRibbonTabOnly">
            <summary>Specifies that ribbon tabs are placed on a bar without showing pages.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarCheckButtonGroupOutside">
            <summary>Specifies that check buttons are placed on a bar outside a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarCheckButtonGroupInside">
            <summary>Specifies that check buttons are placed on a bar inside a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarCheckButtonGroupOnly">
            <summary>Specifies that check buttons are placed on a bar inside a group without showing pages.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.BarCheckButtonOnly">
            <summary>Specifies that check buttons are placed on a bar without showing pages.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.HeaderBarCheckButtonGroup">
            <summary>Specifies that check buttons are placed on a bar inside a header in a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.HeaderBarCheckButtonHeaderGroup">
            <summary>Specifies that check buttons are placed on a bar inside a header in a header group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.HeaderBarCheckButtonOnly">
            <summary>Specifies that check buttons are placed on a bar inside a header without showing pages.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.StackCheckButtonGroup">
            <summary>Specifies that check buttons are stacked inside a group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.StackCheckButtonHeaderGroup">
            <summary>Specifies that check buttons are stacked inside a header group.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.OutlookFull">
            <summary>Specifies a navigation mode similar to the expanded Microsoft Outlook Navigator.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.OutlookMini">
            <summary>Specifies a navigation mode similar to the collapsed Microsoft Outlook Navigator.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.HeaderGroup">
            <summary>Specifies a KryptonHeaderGroup style of appearance.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.HeaderGroupTab">
            <summary>Specifies a KryptonHeaderGroup style of appearance combined with a set of tabs.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.Group">
            <summary>Specifies a KryptonGroup style of appearance.</summary>
        </member>
        <member name="F:Krypton.Navigator.NavigatorMode.Panel">
            <summary>Specifies a KryptonPanel style of appearance.</summary>
        </member>
        <member name="T:Krypton.Navigator.MapKryptonPageText">
            <summary>
            Specifies the mapping from KryptonPage text property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.None">
            <summary>
            Specifies no mapping take place.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.Text">
            <summary>
            Specifies use of the KryptonPage.Text property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.TextTitle">
            <summary>
            Specifies using the text property in preference in the title property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.TextTitleDescription">
            <summary>
            Specifies use of the text/title and description properties in that order of preference.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.TextDescription">
            <summary>
            Specifies using the text property in preference in the description property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.Title">
            <summary>
            Specifies use of the KryptonPage.TextTitle property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.TitleText">
            <summary>
            Specifies using the title property in preference in the text property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.TitleDescription">
            <summary>
            Specifies using the title property in preference in the description property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.Description">
            <summary>
            Specifies use of the KryptonPage.TextDescription property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.DescriptionText">
            <summary>
            Specifies using the description property in preference in the text property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.DescriptionTitle">
            <summary>
            Specifies using the description property in preference in the title property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.DescriptionTitleText">
            <summary>
            Specifies use of the description/title and text properties in that order of preference.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.ToolTipTitle">
            <summary>
            Specifies use of the KryptonPage.ToolTipTitle property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageText.ToolTipBody">
            <summary>
            Specifies use of the KryptonPage.ToolTipBody property.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.MapKryptonPageImage">
            <summary>
            Specifies the mapping from KryptonPage image property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.None">
            <summary>
            Specifies no mapping take place.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.Small">
            <summary>
            Specifies use of the KryptonPage.ImageSmall property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.SmallMedium">
            <summary>
            Specifies use of small and medium in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.SmallMediumLarge">
            <summary>
            Specifies use of small/medium and large in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.Medium">
            <summary>
            Specifies use of the KryptonPage.ImageMedium property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.MediumSmall">
            <summary>
            Specifies use of medium and small in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.MediumLarge">
            <summary>
            Specifies use of medium and large in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.Large">
            <summary>
            Specifies use of the KryptonPage.ImageLarge property.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.LargeMedium">
            <summary>
            Specifies use of large and medium in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.LargeMediumSmall">
            <summary>
            Specifies use of large/medium and small in that preference order.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.MapKryptonPageImage.ToolTip">
            <summary>
            Specifies use of the KryptonPage.ToolTipImage property.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonDisplay">
            <summary>
            Specifies the display logic for the a button on the navigator.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplay.Hide">
            <summary>Specifies the button is never shown.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplay.ShowDisabled">
            <summary>Specifies the button is always shown but always disabled.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplay.ShowEnabled">
            <summary>Specifies the button is always shown but always enabled.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplay.Logic">
            <summary>Specifies the button is is enabled and shown depending on state logic.</summary>
        </member>
        <member name="T:Krypton.Navigator.ButtonDisplayLogic">
            <summary>
            Specifies how buttons using logic should be presented.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplayLogic.None">
            <summary>Specifies that no selection actions are presented.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplayLogic.NextPrevious">
            <summary>Specifies that next and previous buttons are presented.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplayLogic.Context">
            <summary>Specifies that the context button is presented.</summary>
        </member>
        <member name="F:Krypton.Navigator.ButtonDisplayLogic.ContextNextPrevious">
            <summary>Specifies that context, next and previous buttons are presented.</summary>
        </member>
        <member name="T:Krypton.Navigator.DirectionButtonAction">
            <summary>
            Specifies the action to take when previous or next button is fired.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.DirectionButtonAction.None">
            <summary>Specifies no action be taken.</summary>
        </member>
        <member name="F:Krypton.Navigator.DirectionButtonAction.SelectPage">
            <summary>Specifies a page is selected.</summary>
        </member>
        <member name="F:Krypton.Navigator.DirectionButtonAction.MoveBar">
            <summary>Specifies the item bar be moved to show more items.</summary>
        </member>
        <member name="F:Krypton.Navigator.DirectionButtonAction.ModeAppropriateAction">
            <summary>Specifies the appropriate action for the mode be applied.</summary>
        </member>
        <member name="T:Krypton.Navigator.ContextButtonAction">
            <summary>
            Specifies the action to take when context button is fired.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.ContextButtonAction.None">
            <summary>Specifies no action be taken.</summary>
        </member>
        <member name="F:Krypton.Navigator.ContextButtonAction.SelectPage">
            <summary>Specifies a page is selected.</summary>
        </member>
        <member name="T:Krypton.Navigator.CloseButtonAction">
            <summary>
            Specifies the action to take when close button is fired.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.CloseButtonAction.None">
            <summary>Specifies no action be taken.</summary>
        </member>
        <member name="F:Krypton.Navigator.CloseButtonAction.RemovePage">
            <summary>Specifies the current page be removed from the pages collection.</summary>
        </member>
        <member name="F:Krypton.Navigator.CloseButtonAction.RemovePageAndDispose">
            <summary>Specifies the current page be removed from the pages collection and then disposed.</summary>
        </member>
        <member name="F:Krypton.Navigator.CloseButtonAction.HidePage">
            <summary>Specifies the current page be hidden.</summary>
        </member>
        <member name="T:Krypton.Navigator.BarItemSizing">
            <summary>
            Specifies the how the size of each bar item is calculated.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.BarItemSizing.Individual">
            <summary>Specifies each item has its own calculated size.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarItemSizing.SameHeight">
            <summary>Specifies all items have the same height but individual width.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarItemSizing.SameWidth">
            <summary>Specifies all items have the same width but individual height.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarItemSizing.SameWidthAndHeight">
            <summary>Specifies all items have the same with and height.</summary>
        </member>
        <member name="T:Krypton.Navigator.BarMultiline">
            <summary>
            Specifies how items are placed within lines for display in bar.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.BarMultiline.Singleline">
            <summary>Specifies items are placed on single line but may not all be visible.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarMultiline.Multiline">
            <summary>Specifies items are split over number of lines required to fully show all items.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarMultiline.Exactline">
            <summary>Specifies items are placed on single line and shrunk/expanded to fit the line exactly.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarMultiline.Shrinkline">
            <summary>Specifies items are placed on single line and shrunk to try and make all visible.</summary>
        </member>
        <member name="F:Krypton.Navigator.BarMultiline.Expandline">
            <summary>Specifies items are placed on single line and expanded to try and fill the entire line.</summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavButtonSpecStyle">
            <summary>
            Specifies the style of button spec for the Navigator.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.Generic">
            <summary>
            Specifies a general purpose button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.ArrowLeft">
            <summary>
            Specifies a left pointing arrow button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.ArrowRight">
            <summary>
            Specifies a right pointing arrow button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.ArrowUp">
            <summary>
            Specifies an upwards pointing arrow button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.ArrowDown">
            <summary>
            Specifies a downwards pointing arrow button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.DropDown">
            <summary>
            Specifies a drop down button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.PinVertical">
            <summary>
            Specifies a vertical pin specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.PinHorizontal">
            <summary>
            Specifies a horizontal pin specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.FormClose">
            <summary>
            Specifies a form "Close" button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.FormMin">
            <summary>
            Specifies a form "Minimize" button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.FormMax">
            <summary>
            Specifies a form "Maximize" button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.FormRestore">
            <summary>
            Specifies a form "Restore" button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.FormHelp">
            <summary>
            Specifies a form "Help" button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.PendantClose">
            <summary>
            Specifies a pendant close button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.PendantMin">
            <summary>
            Specifies a pendant minimize button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.PendantRestore">
            <summary>
            Specifies a pendant restore button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.WorkspaceMaximize">
            <summary>
            Specifies a workspace maximize button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.WorkspaceRestore">
            <summary>
            Specifies a workspace maximize button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.RibbonMinimize">
            <summary>
            Specifies a ribbon minimize button specification.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PaletteNavButtonSpecStyle.RibbonExpand">
            <summary>
            Specifies a ribbon expand button specification.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPageAllow">
            <summary>
            Specifies whe popup pages are allowed to be used.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPageAllow.Never">
            <summary>Specifies that popup pages are never used.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPageAllow.OnlyCompatibleModes">
            <summary>Specifies that popup pages are used in compatible modes.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPageAllow.OnlyOutlookMiniMode">
            <summary>Specifies that popup pages are used in Outlook Mini mode only.</summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPageElement">
            <summary>
            Specifies the relative element to use when deciding on screen size and position.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPageElement.Item">
            <summary>Specifies the popup is relative to the page item.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPageElement.Navigator">
            <summary>Specifies the popup is relative to the entire navigator.</summary>
        </member>
        <member name="T:Krypton.Navigator.PopupPagePosition">
            <summary>
            Specifies how to auto calculate the popup page position.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.ModeAppropriate">
            <summary>Specifies the popup is positioned appropriately for the mode and mode settings.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.AboveNear">
            <summary>Specifies the popup is above the relative item and aligned to near edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.AboveFar">
            <summary>Specifies the popup is above the relative item and aligned to far edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.AboveMatch">
            <summary>Specifies the popup is above the relative item and same width as the relative item.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.BelowNear">
            <summary>Specifies the popup is below the relative item and aligned to near edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.BelowFar">
            <summary>Specifies the popup is below the relative item and aligned to far edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.BelowMatch">
            <summary>Specifies the popup is below the relative item and same width as the relative item.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.FarTop">
            <summary>Specifies the popup is to the far side of the relative item and aligned to the top edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.FarBottom">
            <summary>Specifies the popup is to the far side of the relative item and aligned to the bottom edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.FarMatch">
            <summary>Specifies the popup is to the far side of the relative item and same height as the relative item.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.NearTop">
            <summary>Specifies the popup is to the near side of the relative item and aligned to the top edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.NearBottom">
            <summary>Specifies the popup is to the near side of the relative item and aligned to the bottom edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.PopupPagePosition.NearMatch">
            <summary>Specifies the popup is to the near side of the relative item and same height as the relative item.</summary>
        </member>
        <member name="T:Krypton.Navigator.DragTargetHint">
            <summary>
            Specifies a hint about the action that occurs on drop.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.None">
            <summary>Specifies the target has no hint information.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.EdgeLeft">
            <summary>Specifies the target will position drop at the left edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.EdgeRight">
            <summary>Specifies the target will position drop at the right edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.EdgeTop">
            <summary>Specifies the target will position drop at the top edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.EdgeBottom">
            <summary>Specifies the target will position drop at the bottom edge.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.Transfer">
            <summary>Specifies the target will transfer content into the target.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.ExcludeFlags">
            <summary>Specifies the target will transfer content into the target.</summary>
        </member>
        <member name="F:Krypton.Navigator.DragTargetHint.ExcludeCluster">
            <summary>Specifies the target does not allow itself to be combined with others for cluster docking.</summary>
        </member>
        <member name="T:Krypton.Navigator.IDragTargetProvider">
            <summary>
            Interface for providing drag targets.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.IDragTargetProvider.GenerateDragTargets(Krypton.Navigator.PageDragEndData)">
            <summary>
            Generate a list of drag targets that are relevant to the provided end data.
            </summary>
            <param name="dragEndData">Pages data being dragged.</param>
            <returns>List of drag targets.</returns>
        </member>
        <member name="T:Krypton.Navigator.IDropDockingIndicator">
            <summary>
            Interface for allowing generic access to drop docking indicator implementations.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.IDropDockingIndicator.ShowRelative(System.Drawing.Rectangle)">
            <summary>
            Show the window relative to provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="M:Krypton.Navigator.IDropDockingIndicator.ScreenMouseMove(System.Drawing.Point)">
            <summary>
            Perform mouse hit testing against a screen point.
            </summary>
            <param name="screenPoint">Screen point.</param>
            <returns>Area that is active.</returns>
        </member>
        <member name="M:Krypton.Navigator.IDropDockingIndicator.MouseReset">
            <summary>
            Ensure the state is updated to reflect the mouse not being over the control.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.IDropDockingIndicator.Hide">
            <summary>
            Hide the window from display.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.IDragPageNotify">
            <summary>
            Interface for receiving page notifications.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.IDragPageNotify.PageDragStart(System.Object,Krypton.Navigator.KryptonNavigator,Krypton.Navigator.PageDragCancelEventArgs)">
            <summary>
            Occurs when a page drag is about to begin and allows it to be cancelled.
            </summary>
            <param name="sender">Source of the page drag; should never be null.</param>
            <param name="navigator">Navigator instance associated with source; can be null.</param>
            <param name="e">Event arguments indicating list of pages being dragged.</param>
        </member>
        <member name="M:Krypton.Navigator.IDragPageNotify.PageDragMove(System.Object,Krypton.Toolkit.PointEventArgs)">
            <summary>
            Occurs when the mouse moves during the drag operation.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
            <param name="e">Event arguments containing the new screen point of the mouse.</param>
        </member>
        <member name="M:Krypton.Navigator.IDragPageNotify.PageDragEnd(System.Object,Krypton.Toolkit.PointEventArgs)">
            <summary>
            Occurs when drag operation completes with pages being dropped.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
            <param name="e">Event arguments containing the new screen point of the mouse.</param>
            <returns>Drop was performed and the source can perform any removal of pages as required.</returns>
        </member>
        <member name="M:Krypton.Navigator.IDragPageNotify.PageDragQuit(System.Object)">
            <summary>
            Occurs when dragging pages has been cancelled.
            </summary>
            <param name="sender">Source of the page drag; can be null.</param>
        </member>
        <member name="T:Krypton.Navigator.INavCheckItem">
            <summary>
            Interface for an individual bar check item.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.INavCheckItem.ButtonDragRectangle">
            <summary>
            Occurs when the dragging start rectangle is needed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.INavCheckItem.ButtonDragOffset">
            <summary>
            Occurs when the dragging offset has changed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.View">
            <summary>
            Gets the view associated with the check item.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.Page">
            <summary>
            Gets the page this check item represents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.Navigator">
            <summary>
            Gets the navigator this check item is inside.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.Checked">
            <summary>
            Gets and sets the checked state of the check item.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.HasFocus">
            <summary>
            Gets and sets if the check item has the focus.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.INavCheckItem.NeedPaint">
            <summary>
            Gets and sets the paint delegate to use for refresh requests.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.INavCheckItem.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided item.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.INavCheckItem.PerformClick">
            <summary>
            Raises the Click event for the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.INavCheckItem.SetOrientation(Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Set the orientation of the background/border and content.
            </summary>
            <param name="borderBackOrient">Orientation of the button border and background..</param>
            <param name="contentOrient">Orientation of the button contents.</param>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageFlagsEventHandler">
            <summary>
            Signature of method that provides a KryptonPageFlags enumeration value.
            </summary>
            <param name="sender">Source of the call.</param>
            <param name="e">A KryptonPageFlagsEventArgs containing event information.</param>
        </member>
        <member name="T:Krypton.Navigator.PageToToolTipMapping">
            <summary>
            Map tooltip values from a source page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageToToolTipMapping.#ctor(Krypton.Navigator.KryptonPage,Krypton.Navigator.MapKryptonPageImage,Krypton.Navigator.MapKryptonPageText,Krypton.Navigator.MapKryptonPageText)">
            <summary>
            Initialize a new instance of the PageToToolTipMapping class.
            </summary>
            <param name="page">Page to source values from.</param>
            <param name="mapImage">How to map the image from the page to the tooltip.</param>
            <param name="mapText">How to map the text from the page to the tooltip.</param>
            <param name="mapExtraText">How to map the extra text from the page to the tooltip.</param>
        </member>
        <member name="P:Krypton.Navigator.PageToToolTipMapping.HasContent">
            <summary>
            Gets a value indicating if the mapping produces any content.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PageToToolTipMapping.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PageToToolTipMapping.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PageToToolTipMapping.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PageToToolTipMapping.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:Krypton.Navigator.KryptonNavigatorActionList">
            <summary>
            Designer time action list for the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorActionList.#ctor(Krypton.Navigator.KryptonNavigatorDesigner)">
            <summary>
            Initialize a new instance of the KryptonNavigatorActionList class.
            </summary>
            <param name="owner">Designer that owns this action list instance.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.NavigatorMode">
            <summary>
            Gets and sets the navigator mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.PageBackStyle">
            <summary>
            Gets and sets the bar orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.BarOrientation">
            <summary>
            Gets and sets the bar orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ItemOrientationBar">
            <summary>
            Gets and sets the bar item orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ItemOrientationStack">
            <summary>
            Gets and sets the stack item orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ItemOrientationOutlook">
            <summary>
            Gets and sets the stack item orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ItemAlignment">
            <summary>
            Gets and sets the alignment of items on the bar.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ItemSizing">
            <summary>
            Gets and sets the bar item sizing.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.TabBorderStyle">
            <summary>
            Gets and sets tab border style for the bar modes.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.TabStyle">
            <summary>
            Gets and sets tab style for the bar modes.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.CheckButtonStyleBar">
            <summary>
            Gets and sets checkbutton style for the bar modes.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.CheckButtonStyleStack">
            <summary>
            Gets and sets checkbutton style for the stack modes.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.CheckButtonStyleOutlook">
            <summary>
            Gets and sets checkbutton style for the outlook mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.ButtonDisplayLogic">
            <summary>
            Gets and sets the logic used to display buttons.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.CloseButtonDisplay">
            <summary>
            Gets and sets the display of the close button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.CloseButtonAction">
            <summary>
            Gets and sets the action of the close button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.GroupBackStyle">
            <summary>
            Gets and sets the group background style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.GroupBorderStyle">
            <summary>
            Gets and sets the group border style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.BarHeaderStyle">
            <summary>
            Gets and sets the bar header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.BarHeaderPosition">
            <summary>
            Gets and sets the bar header position.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.PrimaryHeaderStyle">
            <summary>
            Gets and sets the primary header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.PrimaryHeaderPosition">
            <summary>
            Gets and sets the primary header position.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.SecondaryHeaderStyle">
            <summary>
            Gets and sets the secondary header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.SecondaryHeaderPosition">
            <summary>
            Gets and sets the secondary header position.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.SecondaryHeaderOutlookVisible">
            <summary>
            Gets and sets the secondary header visibility for the outlook mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.OutlookOrientation">
            <summary>
            Gets and sets the orientation for the Outlook mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.PanelBackStyle">
            <summary>
            Gets and sets the panel background style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.StackOrientation">
            <summary>
            Gets and sets the stack orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorActionList.StackAlignment">
            <summary>
            Gets and sets the stack alignment.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list.
            </summary>
            <returns>A DesignerActionItem array that contains the items in this list.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorActionList.AddPage">
            <summary>
            Add a new page to the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorActionList.RemovePage">
            <summary>
            Remove the current page from the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorActionList.ClearPages">
            <summary>
            Remove all pages from the navigator.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.KryptonNavigatorDesigner">
            <summary>
            Designer for the navigator instance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.InitializeNewComponent(System.Collections.IDictionary)">
            <summary>
            Initializes a newly created component. 
            </summary>
            <param name="defaultValues">A name/value dictionary of default values to apply to properties.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Indicates whether the specified control can be a child of the control managed by a designer.
            </summary>
            <param name="control">The Control to test.</param>
            <returns>true if the specified control can be a child of the control managed by this designer; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.InternalControlDesigner(System.Int32)">
            <summary>
            Returns the internal control designer with the specified index in the ControlDesigner.
            </summary>
            <param name="internalControlIndex">A specified index to select the internal control designer. This index is zero-based.</param>
            <returns>A ControlDesigner at the specified index.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.NumberOfInternalControlDesigners">
            <summary>
            Returns the number of internal control designers in the ControlDesigner.
            </summary>
            <returns>The number of internal control designers in the ControlDesigner.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.AddPage">
            <summary>
            Add a new page to the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.RemovePage">
            <summary>
            Remove the current page from the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.ClearPages">
            <summary>
            Remove all pages from the navigator.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            Indicates whether a mouse click at the specified point should be handled by the control.
            </summary>
            <param name="point">A Point indicating the position at which the mouse was clicked, in screen coordinates.</param>
            <returns>true if a click at the specified point is to be handled by the control; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.OnMouseLeave">
            <summary>
            Receives a call when the mouse leaves the control. 
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop operation enters the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop object is dragged over the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop object is dropped onto the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonNavigatorDesigner.Navigator">
            <summary>
            Gets access to the associated navigator instance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonNavigatorDesigner.OnComponentRemoving(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Occurs when the component is being removed from the designer.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A ComponentEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageActionList.#ctor(Krypton.Navigator.KryptonPageDesigner)">
            <summary>
            Initialize a new instance of the KryptonPageActionList class.
            </summary>
            <param name="owner">Designer that owns this action list instance.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.TextShort">
            <summary>
            Gets and sets the page text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.TextTitle">
            <summary>
            Gets and sets the page title text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.TextDescription">
            <summary>
            Gets and sets the page description text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ToolTipTitle">
            <summary>
            Gets and sets the page tooltip title text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ToolTipBody">
            <summary>
            Gets and sets the page tooltip body text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ToolTipImage">
            <summary>
            Gets and sets the page tooltip image.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ImageSmall">
            <summary>
            Gets and sets the small page image.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ImageMedium">
            <summary>
            Gets and sets the medium page image.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.ImageLarge">
            <summary>
            Gets and sets the large page image.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageActionList.PageInOverflowBarForOutlookMode">
            <summary>
            Gets and sets the large page image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list.
            </summary>
            <returns>A DesignerActionItem array that contains the items in this list.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate with the designer.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
            <summary>
            Indicates if this designer's control can be parented by the control of the specified designer. 
            </summary>
            <param name="parentDesigner">The IDesigner that manages the control to check.</param>
            <returns>true if the control managed by the specified designer can parent the control managed by this designer; otherwise, false.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageDesigner.SelectionRules">
            <summary>
            Gets the selection rules that indicate the movement capabilities of a component.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageDesigner.CanPaint">
            <summary>
            Should painting be performed for the selection glyph.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageDesigner.SelectParentControl">
            <summary>
            Select the control that contains the group panel.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageDesigner.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by the KryptonSplitterPanelDesigner. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.
            </summary>
            <param name="pe">A PaintEventArgs the designer can use to draw on the control.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageFormEditFlags.#ctor">
            <summary>
            Initialize a new instance of the KryptonPageFormEditFlags class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageFormEditFlags.#ctor(Krypton.Navigator.KryptonPage)">
            <summary>
            Initialize a new instance of the KryptonPageFormEditFlags class.
            </summary>
            <param name="page">Reference to page to display flags for.</param>
        </member>
        <member name="F:Krypton.Navigator.KryptonPageFormEditFlags.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageFormEditFlags.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageFormEditFlags.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorPageCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the NavigatorPageCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorPageCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Navigator.NavigatorPageCollectionEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Sets the specified array as the items of the collection.
            </summary>
            <param name="editValue">The collection to edit.</param>
            <param name="value">An array of objects to set as the collection items.</param>
            <returns>The newly created collection object.</returns>
        </member>
        <member name="T:Krypton.Navigator.KryptonPage">
            <summary>
            Page class used inside visual containers.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.Load">
            <summary>
            Occurs when the control is loaded.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.AppearancePropertyChanged">
            <summary>
            Occurs when an appearance specific page property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.FlagsChanged">
            <summary>
            Occurs when the flags have changed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.AutoHiddenSlideSizeChanged">
            <summary>
            Occurs when the AutoHiddenSlideSize property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.DockChanged">
            <summary>
            Occurs when the value of the Dock property changes.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.LocationChanged">
            <summary>
            Occurs when the value of the Location property changes.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.TabIndexChanged">
            <summary>
            Occurs when the value of the TabIndex property changes.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.KryptonPage.TabStopChanged">
            <summary>
            Occurs when the value of the TabStop property changes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.#ctor">
            <summary>
            Initialize a new instance of the KryptonPage class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.#ctor(System.String)">
            <summary>
            Initialize a new instance of the KryptonPage class.
            </summary>
            <param name="text">Initial text.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.#ctor(System.String,System.String)">
            <summary>
            Initialize a new instance of the KryptonPage class.
            </summary>
            <param name="text">Initial text.</param>
            <param name="uniqueName">Initial unique name.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.#ctor(System.String,System.Drawing.Bitmap,System.String)">
            <summary>
            Initialize a new instance of the KryptonPage class.
            </summary>
            <param name="text">Initial text.</param>
            <param name="imageSmall">Initial small image.</param>
            <param name="uniqueName">Initial unique name.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.PaletteMode">
            <summary>
            Gets or sets the palette to be applied.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Palette">
            <summary>
            Gets and sets the custom palette implementation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StateCommon">
            <summary>
            Gets access to the common page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StateDisabled">
            <summary>
            Gets access to the disabled page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StateNormal">
            <summary>
            Gets access to the normal page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StateTracking">
            <summary>
            Gets access to the tracking page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StatePressed">
            <summary>
            Gets access to the pressed page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.StateSelected">
            <summary>
            Gets access to the selected page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.OverrideFocus">
            <summary>
            Gets access to the focus page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Text">
            <summary>
            Gets and sets the page text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.TextTitle">
            <summary>
            Gets and sets the title text for the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetTextTitle">
            <summary>
            Resets the TextTitle property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.TextDescription">
            <summary>
            Gets and sets the description text for the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetTextDescription">
            <summary>
            Resets the TextDescription property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ImageSmall">
            <summary>
            Gets and sets the small image for the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetImageSmall">
            <summary>
            Resets the ImageSmall property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ImageMedium">
            <summary>
            Gets and sets the medium image for the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetImageMedium">
            <summary>
            Resets the ImageMedium property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ImageLarge">
            <summary>
            Gets and sets the large image for the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetImageLarge">
            <summary>
            Resets the ImageLarge property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ToolTipImage">
            <summary>
            Gets and sets the page tooltip image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetToolTipImage">
            <summary>
            Resets the ToolTipImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ToolTipImageTransparentColor">
            <summary>
            Gets and sets the tooltip image transparent color.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetToolTipImageTransparentColor">
            <summary>
            Resets the ToolTipImageTransparentColor property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ToolTipTitle">
            <summary>
            Gets and sets the page tooltip title text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetToolTipTitle">
            <summary>
            Resets the ToolTipTitle property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ToolTipBody">
            <summary>
            Gets and sets the page tooltip body text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetToolTipBody">
            <summary>
            Resets the ToolTipBody property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.ToolTipStyle">
            <summary>
            Gets and sets the tooltip label style.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetToolTipStyle">
            <summary>
            Resets the ToolTipStyle property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.UniqueName">
            <summary>
            Gets and sets the unique name of the page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetUniqueName">
            <summary>
            Resets the UniqueName property to its default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.SetFixedState(Krypton.Toolkit.PaletteState)">
            <summary>
            Fix the control to a particular palette state.
            </summary>
            <param name="state">Palette state to fix.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.AutoHiddenSlideSize">
            <summary>
            Gets and sets the preferred size for the page when inside an auto hidden slide panel.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.SetInherit(System.Windows.Forms.Control,Krypton.Navigator.PaletteNavigatorRedirect,Krypton.Navigator.PaletteNavigator,Krypton.Navigator.PaletteNavigator,Krypton.Navigator.PaletteNavigatorOtherEx,Krypton.Navigator.PaletteNavigatorOtherEx,Krypton.Navigator.PaletteNavigatorOther,Krypton.Navigator.PaletteNavigatorOtherRedirect)">
            <summary>
            Define the state to use when inheriting state values.
            </summary>
            <param name="alignControl">Control to use when aligning rectangles.</param>
            <param name="common">State palette for inheriting common values.</param>
            <param name="disabled">State palette for inheriting disabled values.</param>
            <param name="normal">State palette for inheriting normal values.</param>
            <param name="tracking">State palette for inheriting tracking values.</param>
            <param name="pressed">State palette for inheriting pressed values.</param>
            <param name="selected">State palette for inheriting selected values.</param>
            <param name="focus">State palette for inheriting focus values.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ResetInherit(System.Windows.Forms.Control)">
            <summary>
            Reset the state palettes so they no longer inherit from external source.
            </summary>
            <param name="alignControl">Only if inherited values are still the same as when the aligned control was set are they reset.</param>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Anchor">
            <summary>
            Gets or sets which edges of the control are anchored to the edges of its container.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Size">
            <summary>
            Gets or sets the size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.AutoSizeMode">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Dock">
            <summary>
            Gets or sets which edge of the parent container a control is docked to.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.TabIndex">
            <summary>
            Gets or sets the tab order of the control within its container.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.GetTextMapping(Krypton.Navigator.MapKryptonPageText)">
            <summary>
            Gets the string that matches the mapping request.
            </summary>
            <param name="mapping">Text mapping.</param>
            <returns>Matching string.</returns>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.GetImageMapping(Krypton.Navigator.MapKryptonPageImage)">
            <summary>
            Gets the image that matches the mapping request.
            </summary>
            <param name="mapping">Image mapping.</param>
            <returns>Image reference.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.KryptonParentContainer">
            <summary>
            Gets the Krypton control that is acting as the parent.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.Flags">
            <summary>
            Gets and sets the set of page flags.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.SetFlags(Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Set all the provided flags to true.
            </summary>
            <param name="flags">Flags to set.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.ClearFlags(Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Sets all the provided flags to false.
            </summary>
            <param name="flags">Flags to set.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.AreFlagsSet(Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Are all the provided flags set to true.
            </summary>
            <param name="flags">Flags to test.</param>
            <returns>True if all provided flags are defined as true; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonPage.LastVisibleSet">
            <summary>
            Gets the last value set to the Visible property.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnCreateControl">
            <summary>
            The OnCreateControl method is called when the control is first created.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.SetVisibleCore(System.Boolean)">
            <summary>
            Sets the control to the specified visible state. 
            </summary>
            <param name="value">true to make the control visible; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnDockChanged(System.EventArgs)">
            <summary>
            Raises the DockChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnLocationChanged(System.EventArgs)">
            <summary>
            Raises the LocationChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnTabIndexChanged(System.EventArgs)">
            <summary>
            Raises the TabIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnTabStopChanged(System.EventArgs)">
            <summary>
            Raises the TabStopChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnAppearancePropertyChanged(System.String)">
            <summary>
            Raises the AppearancePropertyChanged event.
            </summary>
            <param name="propertyName">Name of the appearance property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnFlagsChanged(Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Raises the FlagsChanged event.
            </summary>
            <param name="changed">Set of flags that have changed.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnAutoHiddenSlideSizeChanged(System.EventArgs)">
            <summary>
            Raises the AutoHiddenSlideSizeChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnNeedDisabledPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes the need for a repaint for the disabled palette values.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.KryptonPage.OnNeedNormalPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes the need for a repaint for the enabled palette values.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:Krypton.Navigator.UniqueNameToPage">
            <summary>
            Dictionary lookup from unique name to the KryptonPage.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageEventArgs">
            <summary>
            Specialise the generic collection event args with specific type.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.KryptonPageEventArgs.#ctor(Krypton.Navigator.KryptonPage,System.Int32)">
            <summary>
            Initialize a new instance of the KryptonPageEventArgs class.
            </summary>
            <param name="item">Page effected by event.</param>
            <param name="index">Index of page in the owning collection.</param>
        </member>
        <member name="T:Krypton.Navigator.KryptonPageCollection">
            <summary>
            Specialise the generic collection with type specific rules for item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon tab instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="P:Krypton.Navigator.KryptonPageCollection.VisibleCount">
            <summary>
            Gets the number of visible pages in the collection.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.HeaderGroupMappingBase">
            <summary>
            Base class for storage and mapping of navigator header values.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderGroupMappingBase class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetImageDefault">
            <summary>
            Gets the default image value.
            </summary>
            <returns>Image reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetMapImageDefault">
            <summary>
            Gets the default image mapping value.
            </summary>
            <returns>Image mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetMapHeadingDefault">
            <summary>
            Gets the default heading mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetMapDescriptionDefault">
            <summary>
            Gets the default description mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingBase.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">State for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingBase.MapImage">
            <summary>
            Gets and sets the mapping used for the Image property.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.ResetMapImage">
            <summary>
            Resets the MapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingBase.MapHeading">
            <summary>
            Gets and sets the mapping used for the Heading property.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.ResetMapHeading">
            <summary>
            Resets the MapHeading property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingBase.MapDescription">
            <summary>
            Gets and sets the mapping used for the Description property.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingBase.ResetMapDescription">
            <summary>
            Resets the MapDescription property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.HeaderGroupMappingPrimary">
            <summary>
            Storage and mapping for primary header.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderGroupMappingPrimary class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.GetMapImageDefault">
            <summary>
            Gets the default image mapping value.
            </summary>
            <returns>Image mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.GetMapHeadingDefault">
            <summary>
            Gets the default heading mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingPrimary.GetMapDescriptionDefault">
            <summary>
            Gets the default description mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingPrimary.MapImage">
            <summary>
            Gets and sets the mapping used for the Image property.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingPrimary.MapHeading">
            <summary>
            Gets and sets the mapping used for the Heading property.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingPrimary.MapDescription">
            <summary>
            Gets and sets the mapping used for the Description property.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.HeaderGroupMappingSecondary">
            <summary>
            Storage and mapping for secondary header.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the HeaderGroupMappingSecondary class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetImageDefault">
            <summary>
            Gets the default image value.
            </summary>
            <returns>Image reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetHeadingDefault">
            <summary>
            Gets the default heading value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetDescriptionDefault">
            <summary>
            Gets the default description value.
            </summary>
            <returns>String reference.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetMapImageDefault">
            <summary>
            Gets the default image mapping value.
            </summary>
            <returns>Image mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetMapHeadingDefault">
            <summary>
            Gets the default heading mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="M:Krypton.Navigator.HeaderGroupMappingSecondary.GetMapDescriptionDefault">
            <summary>
            Gets the default description mapping value.
            </summary>
            <returns>Text mapping enumeration.</returns>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingSecondary.MapImage">
            <summary>
            Gets and sets the mapping used for the Image property.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingSecondary.MapHeading">
            <summary>
            Gets and sets the mapping used for the Heading property.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.HeaderGroupMappingSecondary.MapDescription">
            <summary>
            Gets and sets the mapping used for the Description property.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorBar">
            <summary>
            Storage for bar related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorBar class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarAnimation">
            <summary>
            Gets and sets if animation should be used on the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarAnimation">
            <summary>
            Resets the BarAnimation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarOrientation">
            <summary>
            Gets and sets the orientation for positioning the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarOrientation">
            <summary>
            Resets the BarOrientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarFirstItemInset">
            <summary>
            Gets and sets the distance to inset the first bar item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarFirstItemInset">
            <summary>
            Resets the BarFirstItemInset property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarLastItemInset">
            <summary>
            Gets and sets the distance to inset the last bar item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarLastItemInset">
            <summary>
            Resets the BarLastItemInset property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarMinimumHeight">
            <summary>
            Gets and sets the minimum height of the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarMinimumHeight">
            <summary>
            Resets the BarMinimumHeight property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarMultiline">
            <summary>
            Gets and sets the showing of multilines of items in the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarMultiline">
            <summary>
            Resets the BarMultiline property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.CheckButtonStyle">
            <summary>
            Gets and sets the check button style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.TabStyle">
            <summary>
            Gets and sets the tab style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.TabBorderStyle">
            <summary>
            Gets and sets the tab border style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.ItemAlignment">
            <summary>
            Gets and sets the alignment of items within the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetItemAlignment">
            <summary>
            Resets the ItemAlignment property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.ItemMinimumSize">
            <summary>
            Gets the sets the minimum size of each bar item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetItemMinimumSize">
            <summary>
            Reset the ItemMinimumSize to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.ItemMaximumSize">
            <summary>
            Gets the sets the minimum size of each bar item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetItemMaximumSize">
            <summary>
            Reset the ItemMaximumSize to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.ItemOrientation">
            <summary>
            Gets and sets the orientation for positioning items on the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetItemOrientation">
            <summary>
            Resets the ItemOrientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.ItemSizing">
            <summary>
            Gets the sets how to calculate the size of each bar item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetItemSizing">
            <summary>
            Reset the ItemSizing to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarMapImage">
            <summary>
            Gets and sets the mapping used for the bar item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarMapImage">
            <summary>
            Resets the BarMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarMapText">
            <summary>
            Gets and sets the mapping used for the bar item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarMapText">
            <summary>
            Resets the BarMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorBar.BarMapExtraText">
            <summary>
            Gets and sets the mapping used for the bar item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorBar.ResetBarMapExtraText">
            <summary>
            Resets the BarMapExtraText property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorButton">
            <summary>
            Storage for button related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorButton class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.PreviousButton">
            <summary>
            Gets access to the previous button specification.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.PreviousButtonAction">
            <summary>
            Gets and sets the action to take when the previous button is clicked.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.PreviousButtonDisplay">
            <summary>
            Gets and set the logic used to decide how to show the previous button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.PreviousButtonShortcut">
            <summary>
            Gets access to the shortcut for invoking the previous action.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.ResetPreviousButtonShortcut">
            <summary>
            Resets the PreviousButtonShortcut property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.NextButton">
            <summary>
            Gets access to the next button specification.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.NextButtonAction">
            <summary>
            Gets and sets the action to take when the next button is clicked.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.NextButtonDisplay">
            <summary>
            Gets and set the logic used to decide how to show the next button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.NextButtonShortcut">
            <summary>
            Gets access to the shortcut for invoking the next action.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.ResetNextButtonShortcut">
            <summary>
            Resets the NextButtonShortcut property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextButton">
            <summary>
            Gets access to the context button specification.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextButtonAction">
            <summary>
            Gets and sets the action to take when the context button is clicked.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextButtonDisplay">
            <summary>
            Gets and set the logic used to decide how to show the context button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextButtonShortcut">
            <summary>
            Gets access to the shortcut for invoking the context action.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.ResetContextButtonShortcut">
            <summary>
            Resets the ContextButtonShortcut property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextMenuMapText">
            <summary>
            Gets and set the mapping used to generate context menu item image.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ContextMenuMapImage">
            <summary>
            Gets and set the mapping used to generate context menu item text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.CloseButton">
            <summary>
            Gets access to the close button specification.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.CloseButtonAction">
            <summary>
            Gets and sets the action to take when the close button is clicked.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.CloseButtonDisplay">
            <summary>
            Gets and set the logic used to decide how to show the close button.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.CloseButtonShortcut">
            <summary>
            Gets access to the shortcut for invoking the close action.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.ResetCloseButtonShortcut">
            <summary>
            Resets the CloseButtonShortcut property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorButton.ButtonDisplayLogic">
            <summary>
            Gets and sets the logic used to control button display.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorButton.ResetButtonDisplayLogic">
            <summary>
            Resets the ButtonDisplayLogic property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorGroup">
            <summary>
            Storage for group related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorGroup.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorGroup class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorGroup.GroupBackStyle">
            <summary>
            Gets and sets the group back style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorGroup.GroupBorderStyle">
            <summary>
            Gets and sets the group border style.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorHeader">
            <summary>
            Storage for header related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorHeader.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorHeader class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderStylePrimary">
            <summary>
            Gets and sets the primary header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderStyleSecondary">
            <summary>
            Gets and sets the secondary header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderStyleBar">
            <summary>
            Gets and sets the bar header style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderPositionPrimary">
            <summary>
            Gets and sets the position of the primary header.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderPositionSecondary">
            <summary>
            Gets and sets the position of the secondary header.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderPositionBar">
            <summary>
            Gets and sets the position of the bar header.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderVisiblePrimary">
            <summary>
            Gets and sets the primary header visibility.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderVisibleSecondary">
            <summary>
            Gets and sets the secondary header visibility.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderVisibleBar">
            <summary>
            Gets and sets the bar header visibility.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderValuesPrimary">
            <summary>
            Gets access to the primary header content.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorHeader.HeaderValuesSecondary">
            <summary>
            Gets access to the secondary header content.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorOutlook">
            <summary>
            Storage for outlook mode related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorOutlook class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.Full">
            <summary>
            Gets and sets settings appropriate for the Outlook - Full mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.Mini">
            <summary>
            Gets and sets settings appropriate for the Outlook - Mini mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.CheckButtonStyle">
            <summary>
            Gets and sets the check button style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.OverflowButtonStyle">
            <summary>
            Gets and sets the outlook overflow button style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.BorderEdgeStyle">
            <summary>
            Gets and sets the border edge style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.Orientation">
            <summary>
            Gets and sets the orientation for positioning stack and overflow items.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetOrientation">
            <summary>
            Resets the Orientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.ItemOrientation">
            <summary>
            Gets and sets the orientation for positioning items in the stack.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetItemOrientation">
            <summary>
            Resets the ItemOrientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.HeaderSecondaryVisible">
            <summary>
            Gets and sets the secondary header visiblity when in Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetHeaderSecondaryVisible">
            <summary>
            Resets the HeaderSecondaryVisible property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.TextMoreButtons">
            <summary>
            Gets and sets the text to use when asking if more buttons should be shown in Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetTextMoreButtons">
            <summary>
            Resets the TextMoreButtons property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.TextFewerButtons">
            <summary>
            Gets and sets the text to use when asking if fewer buttons should be shown in Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetTextFewerButtons">
            <summary>
            Resets the TextFewerButtons property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.TextAddRemoveButtons">
            <summary>
            Gets and sets the text to use when asking if buttons should be shown/hidden in Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetTextAddRemoveButtons">
            <summary>
            Resets the TextAddRemoveButtons property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlook.ShowDropDownButton">
            <summary>
            Gets and sets the visibility of the drop down button on the Outlook overflow bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlook.ResetShowDropDownButton">
            <summary>
            Resets the ShowDropDownButton property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorOutlookFull">
            <summary>
            Storage for outlook full mode related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorOutlookFull class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.OverflowMapImage">
            <summary>
            Gets and sets the mapping used for the overflow item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetOverflowMapImage">
            <summary>
            Resets the OverflowMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.OverflowMapText">
            <summary>
            Gets and sets the mapping used for the overflow item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetOverflowMapText">
            <summary>
            Resets the OverflowMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.OverflowMapExtraText">
            <summary>
            Gets and sets the mapping used for the overflow item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetOverflowMapExtraText">
            <summary>
            Resets the OverflowMapExtraText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.StackMapImage">
            <summary>
            Gets and sets the mapping used for the stack item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetStackMapImage">
            <summary>
            Resets the StackMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.StackMapText">
            <summary>
            Gets and sets the mapping used for the stack item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetStackMapText">
            <summary>
            Resets the StackMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookFull.StackMapExtraText">
            <summary>
            Gets and sets the mapping used for the stack item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookFull.ResetStackMapExtraText">
            <summary>
            Resets the StackMapExtraText property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorOutlookMini">
            <summary>
            Storage for outlook mini mode related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorOutlookMini class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.MiniButtonStyle">
            <summary>
            Gets and sets the mini button style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.MiniMapImage">
            <summary>
            Gets and sets the mapping used for the mini button item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetMiniMapImage">
            <summary>
            Resets the MiniMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.MiniMapText">
            <summary>
            Gets and sets the mapping used for the mini button item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetMiniMapText">
            <summary>
            Resets the MiniMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.MiniMapExtraText">
            <summary>
            Gets and sets the mapping used for the mini button item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetMiniMapExtraText">
            <summary>
            Resets the MiniMapExtraText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.StackMapImage">
            <summary>
            Gets and sets the mapping used for the stack item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetStackMapImage">
            <summary>
            Resets the StackMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.StackMapText">
            <summary>
            Gets and sets the mapping used for the stack item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetStackMapText">
            <summary>
            Resets the StackMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorOutlookMini.StackMapExtraText">
            <summary>
            Gets and sets the mapping used for the stack item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorOutlookMini.ResetStackMapExtraText">
            <summary>
            Resets the StackMapExtraText property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorPanel">
            <summary>
            Storage for panel related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorPanel.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorPanel class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPanel.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPanel.PanelBackStyle">
            <summary>
            Gets and sets the panel back style.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorPopupPages">
            <summary>
            Storage for popup page related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorPopupPages.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorPopupPage class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.AllowPopupPages">
            <summary>
            Gets and sets if popup pages are Displayed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.Border">
            <summary>
            Gets and sets the border pixel width around the popup page.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.Element">
            <summary>
            Gets and sets the relative element to use when calculating size and position of the popup page.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.Gap">
            <summary>
            Gets and sets the pixel gap between the source element and the popup page.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorPopupPages.Position">
            <summary>
            Gets and sets how to calculate the size and position of the popup page relative to element.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorStack">
            <summary>
            Storage for stack related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorStack class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.CheckButtonStyle">
            <summary>
            Gets and sets the check button style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.BorderEdgeStyle">
            <summary>
            Gets and sets the border edge style.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackAnimation">
            <summary>
            Gets and sets if animation should be used on the stack.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackAnimation">
            <summary>
            Resets the StackAnimation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackOrientation">
            <summary>
            Gets and sets the orientation for positioning stack items.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackOrientation">
            <summary>
            Resets the StackOrientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackAlignment">
            <summary>
            Gets and sets the alignment of the stack relative to the Displayed page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackAlignment">
            <summary>
            Resets the StackAlignment property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.ItemOrientation">
            <summary>
            Gets and sets the orientation for positioning items in the stack.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetItemOrientation">
            <summary>
            Resets the ItemOrientation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackMapImage">
            <summary>
            Gets and sets the mapping used for the stack item image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackMapImage">
            <summary>
            Resets the StackMapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackMapText">
            <summary>
            Gets and sets the mapping used for the stack item text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackMapText">
            <summary>
            Resets the StackMapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorStack.StackMapExtraText">
            <summary>
            Gets and sets the mapping used for the stack item description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorStack.ResetStackMapExtraText">
            <summary>
            Resets the StackMapExtraText property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.NavigatorToolTips">
            <summary>
            Storage for tooltip related properties.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorToolTips.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the NavigatorPopupPage class.
            </summary>
            <param name="navigator">Reference to owning navigator instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.AllowPageToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for page headers.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.MapImage">
            <summary>
            Gets and sets the mapping used for the tooltip image.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorToolTips.ResetMapImage">
            <summary>
            Resets the MapImage property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.MapText">
            <summary>
            Gets and sets the mapping used for the tooltip text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorToolTips.ResetMapText">
            <summary>
            Resets the MapText property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.NavigatorToolTips.MapExtraText">
            <summary>
            Gets and sets the mapping used for the tooltip description.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.NavigatorToolTips.ResetMapExtraText">
            <summary>
            Resets the MapExtraText property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteBarRedirect">
            <summary>
            Implement redirected storage for button bar appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteBarRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.BarPaddingTabs">
            <summary>
            Gets and sets the padding used around the bar when displaying tabs.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetBarPaddingTabs">
            <summary>
            Reset the BarPaddingTabs to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.BarPaddingInside">
            <summary>
            Gets and sets the padding used around the bar when placed inside the group.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetBarPaddingInside">
            <summary>
            Reset the BarPaddingInside to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.BarPaddingOutside">
            <summary>
            Gets and sets the padding used around the bar when placed outside the group.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetBarPaddingOutside">
            <summary>
            Reset the BarPaddingOutside to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.BarPaddingOnly">
            <summary>
            Gets and sets the padding used around the bar when placed on its own.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetBarPaddingOnly">
            <summary>
            Reset the BarPaddingOnly to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.ButtonPadding">
            <summary>
            Gets and sets the padding used around each button on the button bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetButtonPadding">
            <summary>
            Reset the ButtonPadding to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.ButtonEdgeOutside">
            <summary>
            Gets the sets how far to inset buttons from the control edge.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetButtonEdgeOutside">
            <summary>
            Reset the ButtonEdgeOutside to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.ButtonEdgeInside">
            <summary>
            Gets the sets how far to inset buttons from the button bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetButtonEdgeInside">
            <summary>
            Reset the ButtonEdgeInside to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.CheckButtonGap">
            <summary>
            Gets the sets the spacing gap between each check button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetCheckButtonGap">
            <summary>
            Reset the CheckButtonGap to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteBarRedirect.RibbonTabGap">
            <summary>
            Gets the sets the spacing gap between each ribbon tab.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.ResetRibbonTabGap">
            <summary>
            Reset the RibbonTabGap to the default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.GetMetricInt(Krypton.Toolkit.PaletteState,Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.GetMetricBool(Krypton.Toolkit.PaletteState,Krypton.Toolkit.PaletteMetricBool)">
            <summary>
            Gets a boolean metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteBarRedirect.GetMetricPadding(Krypton.Toolkit.PaletteState,Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:Krypton.Navigator.PaletteMetrics">
            <summary>
            Storage for metrics that can be overriden by the developer.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteMetrics.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteMetrics class.
            </summary>
            <param name="navigator">Reference to owning navigator.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteMetrics.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteMetrics.PageButtonSpecInset">
            <summary>
            Gets and sets the pixel inset of button specs from the edge of the page header.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteMetrics.ResetPageButtonSpecInset">
            <summary>
            Resets the PageButtonSpecInset property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteMetrics.PageButtonSpecPadding">
            <summary>
            Gets and sets the pixel padding around the button specs on a page header.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteMetrics.ResetPageButtonSpecPadding">
            <summary>
            Resets the PageButtonSpecPadding property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavContent">
            <summary>
            Implement storage for palette content details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.InternalStorage.#ctor">
            <summary>
            Initialize a new instance of the InternalStorage structure.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.InternalStorage.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.#ctor(Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavContent class.
            </summary>
            <param name="inherit">Source for inheriting defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.SetInherit(Krypton.Toolkit.IPaletteContent)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">Palette state to use when populating.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.Draw">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.DrawFocus">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentDrawFocus(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content draw with focus value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.Image">
            <summary>
            Gets access to the image palette details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentImageH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentImageV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content image vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentImageEffect(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual image drawing effect value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentImageColorMap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentImageColorTo(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.ShortText">
            <summary>
            Gets access to the short text palette details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text font value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content short text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.LongText">
            <summary>
            Gets access to the long text palette details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text font value.
            </summary>
            <returns>Font value.</returns>
            <param name="state">Palette value should be applicable to this state.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text rendering hint for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual text trimming for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text vertical alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual content long text horizontal multiline alignment value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets an image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.Padding">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.ResetPadding">
            <summary>
            Reset the Padding to the default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContent.AdjacentGap">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.ResetAdjacentGap">
            <summary>
            Reset the AdjacentGap to the default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentAdjacentGap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavContentText">
            <summary>
            Implement storage for palette content text details.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavContentText.#ctor(Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavContentText class.
            </summary>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.Font">
            <summary>
            Gets the font for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.Hint">
            <summary>
            Gets the text rendering hint for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.Color1">
            <summary>
            Gets and sets the first color for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.Color2">
            <summary>
            Gets and sets the second color for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.ColorStyle">
            <summary>
            Gets and sets the color drawing style for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.ColorAlign">
            <summary>
            Gets and set the color alignment for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.ColorAngle">
            <summary>
            Gets and sets the color angle for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.Image">
            <summary>
            Gets and sets the image for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.ImageStyle">
            <summary>
            Gets and sets the image style for the text.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavContentText.ImageAlign">
            <summary>
            Gets and set the image alignment for the text.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigator">
            <summary>
            Implement storage for normal and disable navigator appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigator.#ctor(Krypton.Navigator.PaletteNavigatorRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorNormabled class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigator.SetInherit(Krypton.Navigator.PaletteNavigator)">
            <summary>
            Sets the inheritance parent.
            </summary>
            <param name="inheritNavigator">Source for inheriting.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Panel">
            <summary>
            Gets access to the panel palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.CheckButton">
            <summary>
            Gets access to the check button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.OverflowButton">
            <summary>
            Gets access to the outlook overflow button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.MiniButton">
            <summary>
            Gets access to the outlook mini button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.HeaderGroup">
            <summary>
            Gets access to the header group appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Page">
            <summary>
            Gets access to the page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.BorderEdge">
            <summary>
            Gets access to the border edge appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Separator">
            <summary>
            Get access to the overrides for defining separator appearance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.Tab">
            <summary>
            Gets access to the tab appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigator.RibbonTab">
            <summary>
            Gets access to the ribbon tab appearance entries.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorHeaderGroup">
            <summary>
            Implement storage for Navigator HeaderGroup states.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorHeaderGroup.#ctor(Krypton.Toolkit.PaletteHeaderGroupRedirect,Krypton.Toolkit.PaletteHeaderPaddingRedirect,Krypton.Toolkit.PaletteHeaderPaddingRedirect,Krypton.Toolkit.PaletteHeaderPaddingRedirect,Krypton.Toolkit.PaletteHeaderPaddingRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorHeaderGroup class.
            </summary>
            <param name="inheritHeaderGroup">Source for inheriting palette defaulted values.</param>
            <param name="inheritHeaderPrimary">Source for inheriting primary header defaulted values.</param>
            <param name="inheritHeaderSecondary">Source for inheriting secondary header defaulted values.</param>
            <param name="inheritHeaderBar">Source for inheriting bar header defaulted values.</param>
            <param name="inheritHeaderOverflow">Source for inheriting overflow header defaulted values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorHeaderGroup.SetInherit(Krypton.Navigator.PaletteNavigatorHeaderGroup)">
            <summary>
            Sets the inheritance parent.
            </summary>
            <param name="inheritHeaderGroup">Source for inheriting.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroup.HeaderBar">
            <summary>
            Gets access to the bar header appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroup.HeaderOverflow">
            <summary>
            Gets access to the overflow header appearance entries.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect">
            <summary>
            Redirect storage for Navigator HeaderGroup states.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorHeaderGroupRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorHeaderGroupRedirect class.
            </summary>
            <param name="redirectHeaderGroup">inheritance redirection for header group.</param>
            <param name="redirectHeaderPrimary">inheritance redirection for primary header.</param>
            <param name="redirectHeaderSecondary">inheritance redirection for secondary header.</param>
            <param name="redirectHeaderBar">inheritance redirection for bar header.</param>
            <param name="redirectHeaderOverflow">inheritance redirection for overflow header.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect.HeaderBar">
            <summary>
            Gets access to the bar header appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorHeaderGroupRedirect.HeaderOverflow">
            <summary>
            Gets access to the overlow header appearance entries.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorOther">
            <summary>
            Implement storage for other navigator appearance states.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorOther.#ctor(Krypton.Navigator.PaletteNavigatorRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorOther class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorOther.SetInherit(Krypton.Navigator.PaletteNavigator)">
            <summary>
            Sets the inheritance parent.
            </summary>
            <param name="inheritNavigator">Source for inheriting.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.CheckButton">
            <summary>
            Gets access to the check button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.OverflowButton">
            <summary>
            Gets access to the outlook overflow button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.MiniButton">
            <summary>
            Gets access to the outlook mini button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.Tab">
            <summary>
            Gets access to the tab appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOther.RibbonTab">
            <summary>
            Gets access to the ribbon tab appearance entries.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorOtherEx">
            <summary>
            Implement storage for other navigator appearance states.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorOtherEx.#ctor(Krypton.Navigator.PaletteNavigatorRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorOtherEx class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherEx.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorOtherEx.SetInherit(Krypton.Navigator.PaletteNavigator)">
            <summary>
            Sets the inheritance parent.
            </summary>
            <param name="inheritNavigator">Source for inheriting.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherEx.Separator">
            <summary>
            Get access to the overrides for defining separator appearance.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorOtherRedirect">
            <summary>
            Implement redirected storage for other navigator appearance states.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorOtherRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorOtherRedirect class.
            </summary>
            <param name="redirectCheckButton">inheritance redirection instance for the check button.</param>
            <param name="redirectOverflowButton">inheritance redirection instance for the outlook overflow button.</param>
            <param name="redirectMiniButton">inheritance redirection instance for the outlook mini button.</param>
            <param name="redirectTab">inheritance redirection instance for the tab.</param>
            <param name="redirectRibbonTab">inheritance redirection instance for the ribbon tab.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.CheckButton">
            <summary>
            Gets access to the check button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.OverflowButton">
            <summary>
            Gets access to the outlook overflow button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.MiniButton">
            <summary>
            Gets access to the outlook mini button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.Tab">
            <summary>
            Gets access to the tab appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorOtherRedirect.RibbonTab">
            <summary>
            Gets access to the ribbon tab appearance entries.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteNavigatorRedirect">
            <summary>
            Implement redirected storage for common navigator appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorRedirect.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorNormabled class.
            </summary>
            <param name="navigator">Reference to owning navigator.</param>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorRedirect.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteNavigatorNormabled class.
            </summary>
            <param name="navigator">Reference to owning navigator.</param>
            <param name="redirectNavigator">inheritance redirection for navigator level.</param>
            <param name="redirectNavigatorPage">inheritance redirection for page level.</param>
            <param name="redirectNavigatorHeaderGroup">inheritance redirection for header groups level.</param>
            <param name="redirectNavigatorHeaderPrimary">inheritance redirection for primary header.</param>
            <param name="redirectNavigatorHeaderSecondary">inheritance redirection for secondary header.</param>
            <param name="redirectNavigatorHeaderBar">inheritance redirection for bar header.</param>
            <param name="redirectNavigatorHeaderOverflow">inheritance redirection for bar header.</param>
            <param name="redirectNavigatorCheckButton">inheritance redirection for check button.</param>
            <param name="redirectNavigatorOverflowButton">inheritance redirection for overflow button.</param>
            <param name="redirectNavigatorMiniButton">inheritance redirection for check button.</param>
            <param name="redirectNavigatorBar">inheritance redirection for bar.</param>
            <param name="redirectNavigatorBorderEdge">inheritance redirection for border edge.</param>
            <param name="redirectNavigatorSeparator">inheritance redirection for separator.</param>
            <param name="redirectNavigatorTab">inheritance redirection for tab.</param>
            <param name="redirectNavigatorRibbonTab">inheritance redirection for ribbon tab.</param>
            <param name="redirectNavigatorRibbonGeneral">inheritance redirection for ribbon general.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.RedirectBorderEdge">
            <summary>
            Update the redirector for the border edge.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.RedirectRibbonGeneral">
            <summary>
            Update the redirector for the ribbon general.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Bar">
            <summary>
            Gets access to the bar appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Back">
            <summary>
            Gets access to the background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.PaletteBack">
            <summary>
            Gets the background palette.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Panel">
            <summary>
            Gets access to the panel palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.CheckButton">
            <summary>
            Gets access to the check button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.OverflowButton">
            <summary>
            Gets access to the outlook overflow button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.MiniButton">
            <summary>
            Gets access to the outlook mini button appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.HeaderGroup">
            <summary>
            Gets access to the header group appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Page">
            <summary>
            Gets access to the page appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.BorderEdge">
            <summary>
            Gets access to the border edge appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Metrics">
            <summary>
            Gets access to the metrics entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Separator">
            <summary>
            Get access to the overrides for defining separator appearance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.Tab">
            <summary>
            Gets access to the tab appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.RibbonTab">
            <summary>
            Gets access to the ribbon tab appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteNavigatorRedirect.RibbonGeneral">
            <summary>
            Gets access to the ribbon general appearance entries.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorRedirect.GetMetricInt(Krypton.Toolkit.PaletteState,Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Gets an integer metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteNavigatorRedirect.GetMetricPadding(Krypton.Toolkit.PaletteState,Krypton.Toolkit.PaletteMetricPadding)">
            <summary>
            Gets a padding metric value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="metric">Requested metric.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="T:Krypton.Navigator.PalettePage">
            <summary>
            Implement storage for page appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PalettePage.#ctor(Krypton.Toolkit.IPaletteDouble,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PalettePage class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PalettePage.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PalettePage.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PalettePageRedirect">
            <summary>
            Implement redirected storage for page appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PalettePageRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PalettePageRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PalettePageRedirect.Border">
            <summary>
            Gets access to the border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PalettePageRedirect.PaletteBorder">
            <summary>
            Gets the border palette.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteRedirectRibbonTabContent">
            <summary>
            Redirect ribbon tab values based on the incoming state of the request.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.#ctor(Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.#ctor(Krypton.Toolkit.IPalette,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonDouble class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
            <param name="disabledBack">Redirection for back disabled state requests.</param>
            <param name="normalBack">Redirection for back normal state requests.</param>
            <param name="pressedBack">Redirection for back pressed state requests.</param>
            <param name="trackingBack">Redirection for back tracking state requests.</param>
            <param name="selectedBack">Redirection for selected states requests.</param>
            <param name="focusOverrideBack">Redirection for back focus override state requests.</param>
            <param name="disabledText">Redirection for text disabled state requests.</param>
            <param name="normalText">Redirection for text normal state requests.</param>
            <param name="pressedText">Redirection for text pressed state requests.</param>
            <param name="trackingText">Redirection for text tracking state requests.</param>
            <param name="selectedText">Redirection for text selected states requests.</param>
            <param name="focusOverrideText">Redirection for text focus override state requests.</param>
            <param name="disabledContent">Redirection for content disabled state requests.</param>
            <param name="normalContent">Redirection for content normal state requests.</param>
            <param name="pressedContent">Redirection for content pressed state requests.</param>
            <param name="trackingContent">Redirection for content tracking state requests.</param>
            <param name="selectedContent">Redirection for content selected states requests.</param>
            <param name="focusOverrideContent">Redirection for content focus override state requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.SetRedirectStates(Krypton.Navigator.PaletteRibbonTabContent,Krypton.Navigator.PaletteRibbonTabContent,Krypton.Navigator.PaletteRibbonTabContent,Krypton.Navigator.PaletteRibbonTabContent,Krypton.Navigator.PaletteRibbonTabContent,Krypton.Navigator.PaletteRibbonTabContentRedirect)">
            <summary>
            Set the redirection states.
            </summary>
            <param name="disabled">Redirection for disabled state requests.</param>
            <param name="normal">Redirection for normal state requests.</param>
            <param name="pressed">Redirection for pressed state requests.</param>
            <param name="tracking">Redirection for tracking state requests.</param>
            <param name="selected">Redirection for selected states requests.</param>
            <param name="focusOverride">Redirection for focus override state requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.ResetRedirectStates">
            <summary>
            Reset the redirection states to null.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon back style requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColor1(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColor2(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColor3(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColor4(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonBackColor5(Krypton.Toolkit.PaletteRibbonBackStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetRibbonTextColor(Krypton.Toolkit.PaletteRibbonTextStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <param name="style">Style of the ribbon color requested.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentDraw(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentDrawFocus(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentImageH(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentImageV(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentImageEffect(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextFont(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextHint(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextH(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextV(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextImage(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextFont(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextHint(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextPrefix(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextH(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextV(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextImage(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentPadding(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRedirectRibbonTabContent.GetContentAdjacentGap(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="T:Krypton.Navigator.PaletteRibbonGeneralNavRedirect">
            <summary>
            Storage for general ribbon values.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonGeneralNavRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.SetRedirector(Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonContextTextAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text alignment for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonContextTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonContextTextColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon context text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonDisabledDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the dark disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonDisabledLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the light disabled color used for ribbon glyphs.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonDropArrowLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonDropArrowDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the drop arrow dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonGroupDialogDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonGroupDialogLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonGroupSeparatorDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonGroupSeparatorLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the dialog launcher light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonMinimizeBarDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon minimize bar dark.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonMinimizeBarLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the ribbon minimize bar light.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonShape">
            <summary>
            Gets the ribbon shape.
            </summary>
            <returns>Ribbon shape value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonTabSeparatorColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonTabSeparatorContextColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the tab context separator.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.TextFont">
            <summary>
            Gets and sets the font for the ribbon text.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.ResetTextFont">
            <summary>
            Reset the TextFont to the default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the ribbon text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.TextHint">
            <summary>
            Gets and sets the rendering hint for the text font.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.ResetTextHint">
            <summary>
            Reset the TextHint to the default value.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the ribbon font.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonQATButtonDark(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button dark content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonGeneralNavRedirect.GetRibbonQATButtonLight(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color for the extra QAT button light content color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Navigator.PaletteRibbonTabContent">
            <summary>
            Implement storage for ribbon tab and content.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContent.#ctor(Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonTabContent class.
            </summary>
            <param name="paletteBack">Source for inheriting palette ribbon background.</param>
            <param name="paletteText">Source for inheriting palette ribbon text.</param>
            <param name="paletteContent">Source for inheriting palette content.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContent.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContent.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContent.SetInherit(Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContent.TabDraw">
            <summary>
            Gets access to the tab drawing appearance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContent.Content">
            <summary>
            Gets access to the tab content appearance.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.PaletteRibbonTabContentInheritOverride">
            <summary>
            Inherit properties from primary source in preference to the backup source.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.#ctor(Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IPaletteRibbonBack,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.PaletteState)">
            <summary>
            Initialize a new instance of the PaletteRibbonTabContentInheritOverride class.
            </summary>
            <param name="primaryBack">First choice inheritance background.</param>
            <param name="primaryText">First choice inheritance text.</param>
            <param name="primaryContent">First choice inheritance content.</param>
            <param name="backupBack">Backup inheritance background.</param>
            <param name="backupText">Backup inheritance text.</param>
            <param name="backupContent">Backup inheritance content.</param>
            <param name="state">Palette state to override.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.Apply">
            <summary>
            Gets and sets a value indicating if override should be applied.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.Override">
            <summary>
            Gets and sets a value indicating if override state should be applied.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.OverrideState">
            <summary>
            Gets and sets the override palette state to use.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the method used to draw the background of a ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteRibbonBackStyle value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColor3(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColor4(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonBackColor5(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetRibbonTextColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentDrawFocus(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentImageH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentImageV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentImageEffect(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentImageColorMap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentImageColorTo(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentAdjacentGap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentInheritOverride.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:Krypton.Navigator.PaletteRibbonTabContentRedirect">
            <summary>
            Storage for general ribbon values.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonTabContentRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.PaletteRibbonTabContentRedirect.SetRedirector(Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentRedirect.TabDraw">
            <summary>
            Gets access to the tab drawing appearance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.PaletteRibbonTabContentRedirect.Content">
            <summary>
            Gets access to the tab content appearance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.#ctor(Krypton.Toolkit.IPaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the RibbonTabToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonTabText">Source for ribbon tab settings.</param>
            <param name="content">Source for content settings.</param>
        </member>
        <member name="P:Krypton.Navigator.RibbonTabToContent.PaletteRibbonText">
            <summary>
            Gets and sets the ribbon tab text palette to use.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.RibbonTabToContent.PaletteContent">
            <summary>
            Gets and sets the ribbon tab content palette to use.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentDrawFocus(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentImageH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentImageV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentImageEffect(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentImageColorMap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentImageColorTo(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentAdjacentGap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Navigator.RibbonTabToContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:Krypton.Navigator.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.BlueDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.BlueUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.CF_Logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.check2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.delete2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.DocumentInvalid">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.DocumentValid">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.help2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.PageLarge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.PageMedium">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.Properties.Resources.PageSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside">
            <summary>
            Implements the NavigatorMode.BarCheckButtonGroupInside mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupInside.CreateButtonSpecManager">
            <summary>
            Create a manager for handling the button specifications.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly">
            <summary>
            Implements the NavigatorMode.BarCheckButtonGroupOnly mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOnly.CreateButtonSpecManager">
            <summary>
            Create a manager for handling the button specifications.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside">
            <summary>
            Implements the NavigatorMode.BarCheckButtonGroupOutside mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonGroupOutside.DestructCheckItemView">
            <summary>
            Destruct the view hierarchy for this mode.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarCheckButtonOnly">
            <summary>
            Implements the NavigatorMode.BarCheckButtonOnly mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonOnly.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarCheckButtonOnly.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonOnly.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonOnly.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarCheckButtonOnly.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarItemBase">
            <summary>
            Base class for implementation of 'Bar' modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarItemBase.GetPopupPagePosition">
            <summary>
            Gets the appropriate popup page position for the current mode.
            </summary>
            <returns>Calculated PopupPagePosition</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarItemBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarItemBase.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarItemBase.UpdateFirstItemInset">
            <summary>
            Update the separator used to inset the first item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarItemBase.UpdateLastItemInset">
            <summary>
            Update the separator used to inset the last item.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarRibbonTabBase">
            <summary>
            Base class for implementation of 'Bar - RibbonTab' modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabBase.CreateCheckItem(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Create a new check item with initial settings.
            </summary>
            <param name="page">Page for which the check button is to be created.</param>
            <param name="orientation">Initial orientation of the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabBase.ConvertButtonBorderBackOrientation">
            <summary>
            Gets the visual orientation of the check buttton.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabBase.ConvertButtonContentOrientation">
            <summary>
            Gets the visual orientation of the check buttons content.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarRibbonTabGroup">
            <summary>
            Implements the NavigatorMode.BarRibbonTabGroup mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarRibbonTabGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabGroup.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabGroup.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarRibbonTabOnly">
            <summary>
            Implements the NavigatorMode.BarRibbonTabOnly mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarRibbonTabOnly.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabOnly.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarRibbonTabOnly.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarTabBase">
            <summary>
            Base class for implementation of 'Bar - Tab' modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.CreateCheckItem(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Create a new check item with initial settings.
            </summary>
            <param name="page">Page for which the check button is to be created.</param>
            <param name="orientation">Initial orientation of the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.ConvertButtonBorderBackOrientation">
            <summary>
            Gets the visual orientation of the check buttton.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.ConvertButtonContentOrientation">
            <summary>
            Gets the visual orientation of the check buttons content.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabBase.UpdateTabStyle">
            <summary>
            Update the state objects with the latest tab style.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarTabGroup">
            <summary>
            Implements the NavigatorMode.BarTabGroup mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarTabGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabGroup.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabGroup.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBarTabOnly">
            <summary>
            Implements the NavigatorMode.BarTabOnly mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBarTabOnly.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabOnly.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBarTabOnly.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderBase">
            <summary>
            Base class for view builder implementations.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.#ctor">
            <summary>
            Initialize a new instance of the ViewBuilderBase class.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.Navigator">
            <summary>
            Gets access to the navigator instance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.ViewManager">
            <summary>
            Gets access to the view manager instance.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.Redirector">
            <summary>
            Gets the palette redirector.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageAppearanceChanged(Krypton.Navigator.KryptonPage,System.String)">
            <summary>
            Notification that a krypton page appearance property has changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="property">Name of property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageFlagsChanged(Krypton.Navigator.KryptonPage,Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Notification that krypton page flags have changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="changed">Set of flags that have changed value.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided point over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.GetFixedButtonLocation(Krypton.Navigator.ButtonSpecNavFixed)">
            <summary>
            Gets the appropriate display location for the button.
            </summary>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PreLayout">
            <summary>
            Perform pre layout operations.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PostLayout">
            <summary>
            Perform post layout operations.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.CanFocus">
            <summary>
            Gets a value indicating if the view can accept the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.GotFocus">
            <summary>
            Occurs when the navigator takes the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.LostFocus">
            <summary>
            Occurs when the navigator loses the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.GiveNavigatorFocus(Krypton.Toolkit.ViewBase)">
            <summary>
            Should this element cause the navigator to gain the focus.
            </summary>
            <param name="element">Element that is being activated.</param>
            <returns>True to give navigator the focus; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.GetPopupPagePosition">
            <summary>
            Gets the appropriate popup page position for the current mode.
            </summary>
            <returns>Calculated PopupPagePosition</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.CheckActionShortcuts(System.Windows.Forms.Keys)">
            <summary>
            Check the key data for a matching action button shortcut.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>If if match found and key should be eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.SelectNextPage(System.Boolean)">
            <summary>
            Select the next page to the currently selected one.
            </summary>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.SelectNextPage(Krypton.Navigator.KryptonPage,System.Boolean,System.Boolean)">
            <summary>
            Select the next page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <param name="ctrlTab">Associated with a Ctrl+Tab action.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.SelectPreviousPage(System.Boolean)">
            <summary>
            Select the previous page to the currently selected one.
            </summary>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.SelectPreviousPage(Krypton.Navigator.KryptonPage,System.Boolean,System.Boolean)">
            <summary>
            Select the previous page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <param name="ctrlTab">Associated with a Ctrl+Tab action.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderBase.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PerformNeedPaint(System.Boolean)">
            <summary>
            Requests a need paint be performed on the navigator.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.PerformNeedPagePaint(System.Boolean)">
            <summary>
            Requests a need page paint be performed on the navigator.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.OnNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Perform a need paint on the navigator.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.OnNeedPagePaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Perform a need page paint on the navigator.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderBase.CreateViewBuilder(Krypton.Navigator.NavigatorMode)">
            <summary>
            Create a new view builder appropriate for the provided mode.
            </summary>
            <param name="mode">Navigator mode of operation.</param>
            <returns>ViewBuild appropriate for mode.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderGroup">
            <summary>
            Implements the NavigatorMode.Group view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderGroup.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase">
            <summary>
            Base class for implementation of 'HeaderBar - CheckButton' modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.CreateButtonSpecManager">
            <summary>
            Create a manager for handling the button specifications.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.PostCreate">
            <summary>
            Allow operations to occur after main construct actions.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.ConvertButtonBorderBackOrientation">
            <summary>
            Gets the visual orientation of the check buttton.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonBase.ConvertButtonContentOrientation">
            <summary>
            Gets the visual orientation of the check buttons content.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonGroup">
            <summary>
            Implements the NavigatorMode.HeaderBarCheckButtonGroup mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonGroup.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonGroup.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup">
            <summary>
            Implements the NavigatorMode.HeaderBarCheckButtonHeaderGroup mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PostCreate">
            <summary>
            Perform post create tasks.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.DestructCheckItemView">
            <summary>
            Destruct the view hierarchy for this mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.CreateButtonSpecManager">
            <summary>
            Create a manager for handling the button specifications.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonHeaderGroup.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly">
            <summary>
            Implements the NavigatorMode.HeaderBarCheckButtonOnly mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly.KeyPressedPageView">
            <summary>
            User has used the keyboard to select the currently selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly.DestructCheckItemView">
            <summary>
            Destruct the view hierarchy for this mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarCheckButtonOnly.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderBarTabGroup">
            <summary>
            Implements the NavigatorMode.HeaderGroupTab view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.UpdateButtons">
            <summary>
            Recreate the buttons to reflect a change in selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.PostCreate">
            <summary>
            Perform post create tasks.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderBarTabGroup.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderHeaderGroup">
            <summary>
            Implements the NavigatorMode.HeaderGroup view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderHeaderGroup.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PageAppearanceChanged(Krypton.Navigator.KryptonPage,System.String)">
            <summary>
            Notification that a krypton page appearance property has changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="property">Name of property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderHeaderGroup.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderItemBase">
            <summary>
            Base class for implementation of various check button modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PageAppearanceChanged(Krypton.Navigator.KryptonPage,System.String)">
            <summary>
            Notification that a krypton page appearance property has changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="property">Name of property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.GetFixedButtonLocation(Krypton.Navigator.ButtonSpecNavFixed)">
            <summary>
            Gets the appropriate display location for the button.
            </summary>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>HeaderLocation value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PostLayout">
            <summary>
            Perform post layout operations.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderItemBase.CanFocus">
            <summary>
            Gets a value indicating if the view can accept the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.GotFocus">
            <summary>
            Occurs when the navigator takes the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.LostFocus">
            <summary>
            Occurs when the navigator loses the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.GiveNavigatorFocus(Krypton.Toolkit.ViewBase)">
            <summary>
            Should this element cause the navigator to gain the focus.
            </summary>
            <param name="element">Element that is being activated.</param>
            <returns>True to give navigator the focus; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.CreateCheckItemView">
            <summary>
            Create the view hierarchy for this view mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.CreateButtonSpecManager">
            <summary>
            Create a manager for handling the button specifications.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.PostCreate">
            <summary>
            Perform post create tasks.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.DestructButtonSpecManager">
            <summary>
            Destruct the button manager instance.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.DestructCheckItemView">
            <summary>
            Destruct the view hierarchy for this mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.CreateCheckItem(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Create a new check item with initial settings.
            </summary>
            <param name="page">Page for which the check button is to be created.</param>
            <param name="orientation">Initial orientation of the check button.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderItemBase.PageLookup">
            <summary>
            Gets access to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.UpdateOrientation">
            <summary>
            Update the bar orientation.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.UpdateItemOrientation">
            <summary>
            Update the orientation of the individual items.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.ConvertButtonBorderBackOrientation">
            <summary>
            Gets the visual orientation of the check buttons border and background.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.ConvertButtonContentOrientation">
            <summary>
            Gets the visual orientation of the check buttons content.
            </summary>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.ResolveButtonContentOrientation(Krypton.Toolkit.VisualOrientation)">
            <summary>
            Convert the item orientation using the requested parent orientation.
            </summary>
            <param name="orientation"></param>
            <returns>Visual orientation.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderItemBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderOutlookBase">
            <summary>
            Implements base functionality for NavigatorMode.Outlook modes.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderOutlookBase.OutlookButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecMdiChildFixed instances.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.OutlookButtonSpecCollection.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the OutlookButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="F:Krypton.Navigator.ViewBuilderOutlookBase._pageStackLookup">
            <summary>Lookup between pages and stack buttons.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewBuilderOutlookBase._viewLayout">
            <summary>Layout element for the client area.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewBuilderOutlookBase._viewOverflowLayout">
            <summary>Layout element for the overflow area.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewBuilderOutlookBase._pageOverflowLookup">
            <summary>Lookup between pages and check buttons that represent the page.</summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorOrientation">
            <summary>
            Gets the orientation of the separator.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorCanMove">
            <summary>
            Can the separator be moved by the user.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorIncrements">
            <summary>
            Gets the amount the splitter can be incremented.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorMoving(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator is moving.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
            <returns>True if movement should be cancelled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorMoved(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Indicates the separator has moved.
            </summary>
            <param name="mouse">Current mouse position in client area.</param>
            <param name="splitter">Current position of the splitter.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SeparatorNotMoved">
            <summary>
            Indicates the separator has not been moved.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageAppearanceChanged(Krypton.Navigator.KryptonPage,System.String)">
            <summary>
            Notification that a krypton page appearance property has changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="property">Name of property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PageFlagsChanged(Krypton.Navigator.KryptonPage,Krypton.Navigator.KryptonPageFlags)">
            <summary>
            Notification that krypton page flags have changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="changed">Set of flags that have changed value.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.HasFocus">
            <summary>
            Gets value indicating if the control has the focus.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookBase.CanFocus">
            <summary>
            Gets a value indicating if the view can accept the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.GotFocus">
            <summary>
            Occurs when the navigator takes the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.LostFocus">
            <summary>
            Occurs when the navigator loses the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.GiveNavigatorFocus(Krypton.Toolkit.ViewBase)">
            <summary>
            Should this element cause the navigator to gain the focus.
            </summary>
            <param name="element">Element that is being activated.</param>
            <returns>True to give navigator the focus; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SelectNextPage(Krypton.Navigator.KryptonPage,System.Boolean,System.Boolean)">
            <summary>
            Select the next page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <param name="ctrlTab">Associated with a Ctrl+Tab action.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SelectPreviousPage(Krypton.Navigator.KryptonPage,System.Boolean,System.Boolean)">
            <summary>
            Select the previous page to the one provided.
            </summary>
            <param name="page">Starting page for search.</param>
            <param name="wrap">Wrap around end of collection to the start.</param>
            <param name="ctrlTab">Associated with a Ctrl+Tab action.</param>
            <returns>True if new page selected; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.GetOverflowButtonStates">
            <summary>
            Get a string that represents the visible state of the overflow buttons.
            </summary>
            <returns>State string.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.UnshrinkAppropriatePages">
            <summary>
            Remove any shrinkage that has caused stacking items to be hidden from view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.ShrinkVertical(System.Int32)">
            <summary>
            Request the stacking items be removed to allow the vertical scrollbar to be removed.
            </summary>
            <param name="shrinkage">Pixels that need freeing up to remove the vertical scrollbar.</param>
            <returns>True if a change was made; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.CreateView">
            <summary>
            Create the mode specific view hierarchy.
            </summary>
            <returns>View element to use as base of hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.CreateMainLayout">
            <summary>
            Creates and returns the view element that laysout the main client area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.SetLayoutFiller(Krypton.Toolkit.ViewLayoutDocker)">
            <summary>
            Gets the view element to use as the layout filler.
            </summary>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.CreateOverflowItem(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Create an overflow check button.
            </summary>
            <param name="page">Page to associate the check button with.</param>
            <param name="checkButtonOrient">Orientation of the check button.</param>
            <param name="dockFar">Docking position of the check button.</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.ReorderCheckButtonsOverflow(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,System.Int32@)">
            <summary>
            Add the check buttons for pages that should be on the overflow area.
            </summary>
            <param name="page">Reference to owning page.</param>
            <param name="checkOverflowOrient">Docking edge to dock against.</param>
            <param name="overflowInsertIndex">Index for inserting the new entry.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.AreMoreButtons">
            <summary>
            Discover if there are more buttons that can be moved from the overflow to the stack areas.
            </summary>
            <returns>True if more are available; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.GetMoreOverflow">
            <summary>
            Gets the next overflow button to be moved to the stack area.
            </summary>
            <returns>Reference to button; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PostConstruct">
            <summary>
            Allow operations to occur after main construct actions.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.BringPageIntoView(Krypton.Navigator.KryptonPage)">
            <summary>
            Bring the specified page into view within the viewport.
            </summary>
            <param name="page">Page to bring into view.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.UpdateSelectedPageFocus">
            <summary>
            Updates the item that has the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.FirstOutlookActionPage">
            <summary>
            Gets the first page that can be selected.
            </summary>
            <returns>Page for selection; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.LastOutlookActionPage">
            <summary>
            Gets the last page that can be selected.
            </summary>
            <returns>Page for selection; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.NextOutlookActionPage(Krypton.Navigator.KryptonPage)">
            <summary>
            Find the next outlook action page based on a provided current page.
            </summary>
            <param name="page">Current page to work from.</param>
            <returns>New page that should be selected.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookBase.PreviousOutlookActionPage(Krypton.Navigator.KryptonPage)">
            <summary>
            Find the previous outlook action page based on a provided current page.
            </summary>
            <param name="page">Current page to work from.</param>
            <returns>New page that should be selected.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderOutlookFull">
            <summary>
            Implements the NavigatorMode.OutlookFull mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookFull.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookFull.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookFull.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.CreateMainLayout">
            <summary>
            Creates and returns the view element that laysout the main client area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.CreateOverflowItem(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.ViewDockStyle)">
            <summary>
            Create an overflow check button.
            </summary>
            <param name="page">Page to associate the check button with.</param>
            <param name="checkButtonOrient">Orientation of the check button.</param>
            <param name="dockFar">Docking position of the check button.</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.PostConstruct">
            <summary>
            Allow operations to occur after main construct actions.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.BringPageIntoView(Krypton.Navigator.KryptonPage)">
            <summary>
            Bring the specified page into view within the viewport.
            </summary>
            <param name="page">Page to bring into view.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookFull.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderOutlookMini">
            <summary>
            Implements the NavigatorMode.OutlookMini mode.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookMini.SeparatorControl">
            <summary>
            Gets the top level control of the source.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookMini.SeparatorMoveBox">
            <summary>
            Gets the box representing the minimum and maximum allowed splitter movement.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderOutlookMini.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.GetPopupPagePosition">
            <summary>
            Gets the appropriate popup page position for the current mode.
            </summary>
            <returns>Calculated PopupPagePosition</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.CreateView">
            <summary>
            Create the mode specific view hierarchy.
            </summary>
            <returns>View element to use as base of hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.CreateMainLayout">
            <summary>
            Creates and returns the view element that laysout the main client area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.SetLayoutFiller(Krypton.Toolkit.ViewLayoutDocker)">
            <summary>
            Gets the view element to use as the layout filler.
            </summary>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.ReorderCheckButtonsOverflow(Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,System.Int32@)">
            <summary>
            Add the check buttons for pages that should be on the overflow area.
            </summary>
            <param name="page">Reference to owning page.</param>
            <param name="checkOverflowOrient">Docking edge to dock against.</param>
            <param name="overflowInsertIndex">Index for inserting the new entry.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.AreMoreButtons">
            <summary>
            Discover if there are more buttons that can be moved from the overflow to the stack areas.
            </summary>
            <returns>True if more are available; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.GetMoreOverflow">
            <summary>
            Gets the next overflow button to be moved to the stack area.
            </summary>
            <returns>Reference to button; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.UpdateSelectedPageFocus">
            <summary>
            Updates the item that has the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderOutlookMini.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderPanel">
            <summary>
            Implements the NavigatorMode.Skeleton view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderPanel.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode">The mnemonic character entered.</param>
            <returns>true if the mnemonic was processed; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderPanel.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderStackCheckButtonBase">
            <summary>
            Base class for implementation of 'Stack - CheckButton' modes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.Construct(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.ViewManager,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="manager">Reference to current manager.</param>
            <param name="redirector">Palette redirector.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderStackCheckButtonBase.IsTabStripMode">
            <summary>
            Gets a value indicating if the mode is a tab strip style mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.PageFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the KryptonPage associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to KryptonPage; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.PageAppearanceChanged(Krypton.Navigator.KryptonPage,System.String)">
            <summary>
            Notification that a krypton page appearance property has changed.
            </summary>
            <param name="page">Page that has changed.</param>
            <param name="property">Name of property that has changed.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.Destruct">
            <summary>
            Destruct the previously created view.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewBuilderStackCheckButtonBase.CanFocus">
            <summary>
            Gets a value indicating if the view can accept the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.GotFocus">
            <summary>
            Occurs when the navigator takes the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.LostFocus">
            <summary>
            Occurs when the navigator loses the focus.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.GiveNavigatorFocus(Krypton.Toolkit.ViewBase)">
            <summary>
            Should this element cause the navigator to gain the focus.
            </summary>
            <param name="element">Element that is being activated.</param>
            <returns>True to give navigator the focus; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Process a dialog key in a manner appropriate for the view.
            </summary>
            <param name="keyData">Key data.</param>
            <returns>True if the key eaten; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.CreateStackCheckButtonView">
            <summary>
            Create the mode specific view hierarchy.
            </summary>
            <returns>View element to use as base of hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.DestructStackCheckButtonView">
            <summary>
            Destruct the mode specific view hierarchy.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.PostConstruct">
            <summary>
            Allow operations to occur after main construct actions.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonBase.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderStackCheckButtonGroup">
            <summary>
            Implements the NavigatorMode.StackCheckButtonGroup mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonGroup.CreateStackCheckButtonView">
            <summary>
            Create the mode specific view hierarchy.
            </summary>
            <returns>View element to use as base of hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonGroup.DestructStackCheckButtonView">
            <summary>
            Destruct the mode specific view hierarchy.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup">
            <summary>
            Implements the NavigatorMode.StackCheckButtonHeaderGroup mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.SelectedPageChanged">
            <summary>
            Process a change in the selected page
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PageCollectionChanged">
            <summary>
            Change has occurred to the collection of pages.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PageVisibleStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the visible state for a page.
            </summary>
            <param name="page">Page that has changed visible state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PageEnabledStateChanged(Krypton.Navigator.KryptonPage)">
            <summary>
            Process a change in the enabled state for a page.
            </summary>
            <param name="page">Page that has changed enabled state.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the next button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PerformNextAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the next button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Calculate the enabled state of the previous button based on the required action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Enabled state of the button.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PerformPreviousAction(Krypton.Navigator.DirectionButtonAction,Krypton.Navigator.KryptonPage)">
            <summary>
            Perform the previous button action requested.
            </summary>
            <param name="action">Requested action.</param>
            <param name="page">Selected page at time of action request.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.OnViewBuilderPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the view builder.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.CreateStackCheckButtonView">
            <summary>
            Create the mode specific view hierarchy.
            </summary>
            <returns>View element to use as base of hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.PostConstruct">
            <summary>
            Allow operations to occur after main construct actions.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewBuilderStackCheckButtonHeaderGroup.DestructStackCheckButtonView">
            <summary>
            Destruct the mode specific view hierarchy.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewletHeaderGroup">
            <summary>
            Provides HeaderGroup functionality.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewletHeaderGroup class.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="needPaintDelegate">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewletHeaderGroup.Navigator">
            <summary>
            Gets access to the navigator reference.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewletHeaderGroup.Redirector">
            <summary>
            Gets access to the palette redirector reference.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.Construct(Krypton.Toolkit.ViewBase)">
            <summary>
            Construct the view appropriate for this builder.
            </summary>
            <param name="filler">View element to fill in the header group.</param>
            <returns>The root of the header group hierarchy.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.PostCreate">
            <summary>
            Perform actions required after the create of hierarchy is completed
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.Destruct">
            <summary>
            Destruct and cleanup the view hierarchy of the header group.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided view element.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.UpdateButtons">
            <summary>
            Recreate the buttons to reflect a change in selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.UpdateStatePalettes">
            <summary>
            Ensure the correct state palettes are being used.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.GetContextShowPoint">
            <summary>
            Gets the screen coordinates for showing a context action menu.
            </summary>
            <returns>Point in screen coordinates.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Is the provided over a part of the view that wants the mouse.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>True if the view wants the mouse position; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.NextActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Get the appropriate action for the header group next action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Updated requested action.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.PreviousActionEnabled(Krypton.Navigator.DirectionButtonAction)">
            <summary>
            Get the appropriate action for the header group previous action.
            </summary>
            <param name="action">Requested action.</param>
            <returns>Updated requested action.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.ViewBuilderPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the viewlet.
            </summary>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.GetHeaderSecondaryVisible">
            <summary>
            Gets the visible state of the secondary header.
            </summary>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.GetPrimaryValues">
            <summary>
            Gets the source of the primary header values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroup.GetSecondaryValues">
            <summary>
            Gets the source of the secondary header values.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Krypton.Navigator.ViewletHeaderGroupOutlook">
            <summary>
            Provides HeaderGroup functionality modified to work in the Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroupOutlook.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewletHeaderGroupOutlook class.
            </summary>
            <param name="navigator">Reference to navigator instance.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="needPaintDelegate">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroupOutlook.ViewBuilderPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Process the change in a property that might effect the viewlet.
            </summary>
            <param name="e">Property changed details.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroupOutlook.GetHeaderSecondaryVisible">
            <summary>
            Gets the visible state of the secondary header.
            </summary>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroupOutlook.GetPrimaryValues">
            <summary>
            Gets the source of the primary header values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Navigator.ViewletHeaderGroupOutlook.GetSecondaryValues">
            <summary>
            Gets the source of the secondary header values.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavCheckButtonBar">
            <summary>
            Navigator view element for drawing a bar check button for a krypton page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonBar class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonBar class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
            <param name="stateDisabled">Source for disabled state values.</param>
            <param name="stateNormal">Source for normal state values.</param>
            <param name="stateTracking">Source for tracking state values.</param>
            <param name="statePressed">Source for pressed state values.</param>
            <param name="stateSelected">Source for selected state values.</param>
            <param name="stateFocused">Source for focused state values.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBar.View">
            <summary>
            Gets the view associated with the check item.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBar.OnClick(System.Object,System.EventArgs)">
            <summary>
            Processes the Click event from the button. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavCheckButtonBase">
            <summary>
            Navigator view base element for drawing a check button for a krypton page.
            </summary>
        </member>
        <member name="F:Krypton.Navigator.ViewDrawNavCheckButtonBase._overrideDisabled">
            <summary>Override for accessing the disable state.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewDrawNavCheckButtonBase._overrideNormal">
            <summary>Override for accessing the normal state.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewDrawNavCheckButtonBase._overrideTracking">
            <summary>Override for accessing the tracking state.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewDrawNavCheckButtonBase._overridePressed">
            <summary>Override for accessing the pressed state.</summary>
        </member>
        <member name="F:Krypton.Navigator.ViewDrawNavCheckButtonBase._overrideSelected">
            <summary>Override for accessing the selected state.</summary>
        </member>
        <member name="E:Krypton.Navigator.ViewDrawNavCheckButtonBase.ButtonDragRectangle">
            <summary>
            Occurs when the drag rectangle for the button is required.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.ViewDrawNavCheckButtonBase.ButtonDragOffset">
            <summary>
            Occurs when the drag offset for the button is changed.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonBase class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
            <param name="overflow">Button is used on the overflow bar.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonBase class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple,Krypton.Toolkit.IPaletteTriple)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonBase class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
            <param name="stateDisabled">Source for disabled state values.</param>
            <param name="stateNormal">Source for normal state values.</param>
            <param name="stateTracking">Source for tracking state values.</param>
            <param name="statePressed">Source for pressed state values.</param>
            <param name="stateSelected">Source for selected state values.</param>
            <param name="stateFocused">Source for focused state values.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.Dispose(System.Boolean)">
            <summary>
            Release unmanaged and optionally managed resources.
            </summary>
            <param name="disposing">Called from Dispose method.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.HasFocus">
            <summary>
            Gets and sets if the check button has the focus indication.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.Page">
            <summary>
            Gets the page this view represents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.Navigator">
            <summary>
            Gets the navigator that owns this view.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided item.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.AllowButtonSpecs">
            <summary>
            Gets a value indicating if button specs are allowed on the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.PerformClick">
            <summary>
            Raises the Click event for the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.ButtonClickOnDown">
            <summary>
            Should the item be selected on the mouse down.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonBase.ButtonSpecManager">
            <summary>
            Gets access to the button spec manager used for this button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.UpdateButtonSpecMapping">
            <summary>
            Update the button spec manager mapping to reflect current settings.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.CreateMouseController">
            <summary>
            Create a mouse controller appropriate for operating this button.
            </summary>
            <returns>Reference to IMouseController interface.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.OnNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.OnClick(System.Object,System.EventArgs)">
            <summary>
            Processes the Click event from the button. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonBase.OnRightClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the RightClick event from the button. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavCheckButtonStack">
            <summary>
            Navigator view element for drawing a stack check button for a krypton page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonStack class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.UpdateButtonSpecMapping">
            <summary>
            Update the button spec manager mapping to reflect current settings.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonStack.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavCheckButtonTab">
            <summary>
            Navigator view element for drawing a tab check button for a krypton page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonTab.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonTab class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonTab.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavCheckButtonTab.UpdateButtonSpecMapping">
            <summary>
            Update the button spec manager mapping to reflect current settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavCheckButtonTab.ButtonClickOnDown">
            <summary>
            Should the item be selected on the mouse down.
            </summary>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavOutlookMini">
            <summary>
            Navigator view element for drawing a selected check button for the Outlook mini mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavOutlookSelected class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavOutlookMini.Page">
            <summary>
            Gets the page this view represents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavOutlookMini.AllowButtonSpecs">
            <summary>
            Gets a value indicating if button specs are allowed on the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookMini.CreateMouseController">
            <summary>
            Create a mouse controller appropriate for operating this button.
            </summary>
            <returns>Reference to IMouseController interface.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavOutlookOverflow">
            <summary>
            Navigator view element for drawing an overflow item for the Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookOverflow.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavCheckButtonOutlook class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookOverflow.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavOutlookOverflow.AllowButtonSpecs">
            <summary>
            Gets a value indicating if button specs are allowed on the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookOverflow.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookOverflow.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookOverflow.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewDrawNavOutlookStack">
            <summary>
            Navigator view element for drawing a stack check button for the Outlook mode.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawNavOutlookStack class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this check button represents.</param>
            <param name="orientation">Orientation for the check button.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.UpdateButtonSpecMapping">
            <summary>
            Update the button spec manager mapping to reflect current settings.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavOutlookStack.AllowButtonSpecs">
            <summary>
            Gets a value indicating if button specs are allowed on the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavOutlookStack.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="E:Krypton.Navigator.ViewDrawNavRibbonTab.ButtonDragRectangle">
            <summary>
            Occurs when the drag rectangle for the button is required.
            </summary>
        </member>
        <member name="E:Krypton.Navigator.ViewDrawNavRibbonTab.ButtonDragOffset">
            <summary>
            Occurs when the drag button offset changes.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage)">
            <summary>
            Initialize a new instance of the ViewDrawNavRibbonTab class.
            </summary>
            <param name="navigator">Owning navigator instance.</param>
            <param name="page">Page this ribbon tab represents.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.View">
            <summary>
            Gets the view associated with the ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.Page">
            <summary>
            Gets the page this ribbon tab represents.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.Navigator">
            <summary>
            Gets the navigator this check item is inside.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.Checked">
            <summary>
            Gets and sets the checked state of the ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.HasFocus">
            <summary>
            Gets and sets if the ribbon tab has the focus.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.ButtonSpecFromView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the ButtonSpec associated with the provided item.
            </summary>
            <param name="element">Element to search against.</param>
            <returns>Reference to ButtonSpec; otherwise null.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewDrawNavRibbonTab.ButtonSpecManager">
            <summary>
            Gets access to the button spec manager used for this button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.PerformClick">
            <summary>
            Raises the Click event for the button.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.SetOrientation(Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Set the orientation of the background/border and content.
            </summary>
            <param name="borderBackOrient">Orientation of the button border and background..</param>
            <param name="contentOrient">Orientation of the button contents.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.OnRightClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the RightClick event from the button. 
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewDrawNavRibbonTab.OnNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutBar">
            <summary>
            View element that can size and position each page entry on the bar.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.#ctor(Krypton.Navigator.BarItemSizing,Krypton.Toolkit.RelativePositionAlign,Krypton.Navigator.BarMultiline,System.Drawing.Size,System.Drawing.Size,System.Int32,Krypton.Toolkit.TabBorderStyle,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutBar class.
            </summary>
            <param name="itemSizing">Method used to calculate item size.</param>
            <param name="itemAlignment">Method used to align items within lines.</param>
            <param name="barMultiline">Multline showing of items.</param>
            <param name="itemMinimumSize">Maximum allowed item size.</param>
            <param name="itemMaximumSize">Minimum allowed item size.</param>
            <param name="barMinimumHeight">Minimum height of the bar.</param>
            <param name="tabBorderStyle">Tab border style.</param>
            <param name="reorderSelectedLine">Should line with selection be reordered.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.#ctor(Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricInt,Krypton.Navigator.BarItemSizing,Krypton.Toolkit.RelativePositionAlign,Krypton.Navigator.BarMultiline,System.Drawing.Size,System.Drawing.Size,System.Int32,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutBar class.
            </summary>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricGap">Metric for gap between each child item.</param>
            <param name="itemSizing">Method used to calculate item size.</param>
            <param name="itemAlignment">Method used to align items within lines.</param>
            <param name="barMultiline">Multline showing of items.</param>
            <param name="itemMinimumSize">Maximum allowed item size.</param>
            <param name="itemMaximumSize">Minimum allowed item size.</param>
            <param name="barMinimumHeight">Minimum height of the bar.</param>
            <param name="reorderSelectedLine">Should line with selection be reordered.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.#ctor(Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricInt,Krypton.Navigator.BarItemSizing,Krypton.Toolkit.RelativePositionAlign,Krypton.Navigator.BarMultiline,System.Drawing.Size,System.Drawing.Size,System.Int32,Krypton.Toolkit.TabBorderStyle,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutBar class.
            </summary>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricGap">Metric for gap between each child item.</param>
            <param name="itemSizing">Method used to calculate item size.</param>
            <param name="itemAlignment">Method used to align items within lines.</param>
            <param name="barMultiline">Multline showing of items.</param>
            <param name="itemMinimumSize">Maximum allowed item size.</param>
            <param name="itemMaximumSize">Minimum allowed item size.</param>
            <param name="barMinimumHeight">Minimum height of the bar.</param>
            <param name="tabBorderStyle">Tab border style.</param>
            <param name="reorderSelectedLine">Should line with selection be reordered.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.ReorderSelectedLine">
            <summary>
            Gets and sets the need to reorder the line with the selection.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.BarItemSizing">
            <summary>
            Gets and sets the method used to size bar items.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.BarMinimumHeight">
            <summary>
            Gets and sets the minimum height of the bar.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.ItemMinimumSize">
            <summary>
            Gets and sets the minimum size of item allowed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.ItemMaximumSize">
            <summary>
            Gets and sets the maximum size of item allowed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.Orientation">
            <summary>
            Gets and sets the bar orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.ItemOrientation">
            <summary>
            Gets and sets the item orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.ItemAlignment">
            <summary>
            Gets and sets the item alignment.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.BarMultiline">
            <summary>
            Gets and sets a value indicating if multiple lines are allowed.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBar.TabBorderStyle">
            <summary>
            Gets and sets the tab border style to use when calculating item gaps.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.SetMetrics(Krypton.Toolkit.IPaletteMetric)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Source for aquiring metrics.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.SetMetrics(Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricInt)">
            <summary>
            Updates the metrics source and metric to use.
            </summary>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricGap">Metric for gap between each child item.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBar.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutBarForTabs">
            <summary>
            Special version of the bar used for tabs, used to alter rendering order.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBarForTabs.#ctor(Krypton.Navigator.BarItemSizing,Krypton.Toolkit.RelativePositionAlign,Krypton.Navigator.BarMultiline,System.Drawing.Size,System.Drawing.Size,System.Int32,Krypton.Toolkit.TabBorderStyle,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutBarForTabs class.
            </summary>
            <param name="itemSizing">Method used to calculate item size.</param>
            <param name="itemAlignment">Method used to align items within lines.</param>
            <param name="barMultiline">Multline showing of items.</param>
            <param name="itemMinimumSize">Maximum allowed item size.</param>
            <param name="itemMaximumSize">Minimum allowed item size.</param>
            <param name="barMinimumHeight">Minimum height of the bar.</param>
            <param name="tabBorderStyle">Tab border style.</param>
            <param name="reorderSelectedLine">Should line with selection be reordered.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBarForTabs.#ctor(Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricInt,Krypton.Navigator.BarItemSizing,Krypton.Toolkit.RelativePositionAlign,Krypton.Navigator.BarMultiline,System.Drawing.Size,System.Drawing.Size,System.Int32,Krypton.Toolkit.TabBorderStyle,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutBarForTabs class.
            </summary>
            <param name="paletteMetric">Palette source for metric values.</param>
            <param name="metricGap">Metric for gap between each child item.</param>
            <param name="itemSizing">Method used to calculate item size.</param>
            <param name="itemAlignment">Method used to align items within lines.</param>
            <param name="barMultiline">Multline showing of items.</param>
            <param name="itemMinimumSize">Maximum allowed item size.</param>
            <param name="itemMaximumSize">Minimum allowed item size.</param>
            <param name="barMinimumHeight">Minimum height of the bar.</param>
            <param name="tabBorderStyle">Tab border style.</param>
            <param name="reorderSelectedLine">Should line with selection be reordered.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBarForTabs.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutBarForTabs.DrawChecked">
            <summary>
            Sets the value indicating if the checked tab should be drawn.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutBarForTabs.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutDockerOverlap">
            <summary>
            Override to draw tab items overlapping a group border and draw the selected tab item last.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutDockerOverlap.#ctor(Krypton.Toolkit.ViewDrawCanvas,Krypton.Navigator.ViewLayoutInsetOverlap,Krypton.Navigator.ViewLayoutBarForTabs)">
            <summary>
            Initialize a new instance of the ViewLayoutDockerOverlap class.
            </summary>
            <param name="drawCanvas">Canvas used to recover border width/rounding for overlapping.</param>
            <param name="layoutOverlap">Overlapping element.</param>
            <param name="layoutTabs">Tab item container element.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutDockerOverlap.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutDockerOverlap.BorderWidth">
            <summary>
            Gets the rounding value to apply on the edges.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutDockerOverlap.RenderAfter(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutDockerOverlap.UpdatePreferredSize(System.Drawing.Size)">
            <summary>
            Allow the preferred size calculated by GetPreferredSize to be modified before use.
            </summary>
            <param name="preferredSize">Original preferred size value.</param>
            <returns>Modified size.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutDockerOverlap.UpdateFillerRect(System.Drawing.Rectangle,System.Windows.Forms.Control)">
            <summary>
            Allow the filler rectangle calculated by Layout to be modified before use.
            </summary>
            <param name="fillerRect">Original filler rectangle.</param>
            <param name="control">Owning control instance.</param>
            <returns>Modified rectangle.</returns>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutInsetOverlap">
            <summary>
            View element that insets children by the border rounding value of a source.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutInsetOverlap.#ctor(Krypton.Toolkit.ViewDrawCanvas)">
            <summary>
            Initialize a new instance of the ViewLayoutInsetOverlap class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutInsetOverlap.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutInsetOverlap.Orientation">
            <summary>
            Gets and sets the bar orientation.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutInsetOverlap.Rounding">
            <summary>
            Gets the rounding value to apply on the edges.
            </summary>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutInsetOverlap.BorderWidth">
            <summary>
            Gets the rounding value to apply on the edges.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutInsetOverlap.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutInsetOverlap.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutOutlookFull">
            <summary>
            View element that knows how to hide and show stacked items depending on available space.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookFull.#ctor(Krypton.Navigator.ViewBuilderOutlookBase,Krypton.Toolkit.VisualControl,Krypton.Toolkit.ViewBase,Krypton.Toolkit.PaletteBorderEdge,Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricPadding,Krypton.Toolkit.PaletteMetricInt,Krypton.Toolkit.VisualOrientation,Krypton.Toolkit.RelativePositionAlign,System.Boolean,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutOutlookFull class.
            </summary>
            <param name="viewBuilder">View builder reference.</param>
            <param name="rootControl">Top level visual control.</param>
            <param name="viewportFiller">View element to place inside viewport.</param>
            <param name="paletteBorderEdge">Palette for use with the border edge.</param>
            <param name="paletteMetrics">Palette source for metrics.</param>
            <param name="metricPadding">Metric used to get view padding.</param>
            <param name="metricOvers">Metric used to get overposition.</param>
            <param name="orientation">Orientation for the viewport children.</param>
            <param name="alignment">Alignment of the children within the viewport.</param>
            <param name="animateChange">Animate changes in the viewport.</param>
            <param name="vertical">Is the viewport vertical.</param>
            <param name="needPaintDelegate">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookFull.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutOutlookFull.ViewBuilder">
            <summary>
            Gets access to the associated view builder.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookFull.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutOutlookMini">
            <summary>
            View element that knows how to enforce the visible state of the stacked items.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookMini.#ctor(Krypton.Navigator.ViewBuilderOutlookBase)">
            <summary>
            Initialize a new instance of the ViewLayoutOutlookMini class.
            </summary>
            <param name="viewBuilder">View builder reference.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookMini.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Navigator.ViewLayoutOutlookMini.ViewBuilder">
            <summary>
            Gets access to the associated view builder.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutOutlookMini.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutPageHide">
            <summary>
            View element that positions the selected page so it cannot be seen.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageHide.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ViewLayoutPageHide class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageHide.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageHide.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageHide.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutPageShow">
            <summary>
            View element that can track the size and position of the selected page.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageShow.#ctor(Krypton.Navigator.KryptonNavigator)">
            <summary>
            Initialize a new instance of the ViewLayoutPageShow class.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageShow.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageShow.SetMinimumAsPreferred(System.Boolean)">
            <summary>
            Sets if the minimum size should be used instead of preferred.
            </summary>
            <param name="minimum">Should minimum be used instead of preferred.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageShow.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPageShow.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Navigator.ViewLayoutPopupPage">
            <summary>
            View element that positions the provided page in the requested position.
            </summary>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPopupPage.#ctor(Krypton.Navigator.KryptonNavigator,Krypton.Navigator.KryptonPage)">
            <summary>
            Initialize a new instance of the ViewLayoutPopupPage class.
            </summary>
            <param name="navigator">Reference to owning navigator control.</param>
            <param name="page">Page to the positioned.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPopupPage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPopupPage.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Navigator.ViewLayoutPopupPage.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_TOPMOST">
            <summary>
                Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_NOTOPMOST">
            <summary>
                Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_TOP">
            <summary>
                Places the window at the top of the Z order.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_BOTTOM">
            <summary>
                Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SHADEBLENDCAPS">
            <summary>
            Shading and Blending caps
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VREFRESH">
            <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DESKTOPVERTRES">
            <summary>
            Vertical height of entire desktop in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DESKTOPHORZRES">
            <summary>
            Horizontal width of entire desktop in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.BLTALIGNMENT">
            <summary>
            Preferred blt alignment
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.BOOL">
            <summary>
             Blittable version of Windows BOOL type. It is convenient in situations where
             manual marshalling is required, or to avoid overhead of regular bool marshalling.
            </summary>
            <remarks>
             Some Windows APIs return arbitrary integer values although the return type is defined
             as BOOL. It is best to never compare BOOL to TRUE. Always use bResult != BOOL.FALSE
             or bResult == BOOL.FALSE .
            </remarks>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOSIZE">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOMOVE">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOZORDER">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOREDRAW">
            <summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
            the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
            window uncovered as a result of the window being moved. When this flag is set, the application must
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOACTIVATE">
            <summary>Does not activate the window. If this flag is not set, the window is activated and moved to the
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter
            parameter).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DRAWFRAME">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.FRAMECHANGED">
            <summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
            the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.SHOWWINDOW">
            <summary>Displays the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.HIDEWINDOW">
            <summary>Hides the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOCOPYBITS">
            <summary>Discards the entire contents of the client area. If this flag is not specified, the valid
            contents of the client area are saved and copied back into the client area after the window is sized or
            repositioned.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOOWNERZORDER">
            <summary>Does not change the owner window's position in the Z order.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOREPOSITION">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DONOTSENDCHANGINGEVENT">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DEFERERASE">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.ASYNCWINDOWPOS">
            <summary>If the calling thread and the thread that owns the window are attached to different input queues,
            the system posts the request to the thread that owns the window. This prevents the calling thread from
            blocking its execution while other threads process the request.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.SimpleBeep">
            <summary>
            A simple windows beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.OK">
            <summary>
            A standard windows OK beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Question">
            <summary>
            A standard windows Question beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Exclamation">
            <summary>
            A standard windows Exclamation beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Asterisk">
            <summary>
            A standard windows Asterisk beep
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.SM_">
            <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
              
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.ARRANGE">
            <summary>
            The flags that specify how the system arranged minimized windows. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CLEANBOOT">
            <summary>
            The value that specifies how the system is started: 
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CMONITORS">
            <summary>
            The number of display monitors on a desktop. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CMOUSEBUTTONS">
            <summary>
            The number of buttons on a mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXBORDER">
            <summary>
            The width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXCURSOR">
            <summary>
            The width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDLGFRAME">
            <summary>
            This value is the same as SM_CXFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDOUBLECLK">
            <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels. ,
            The second click must occur within the rectangle that is defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKWIDTH.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDRAG">
            <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXEDGE">
            <summary>
            The width of a 3-D border, in pixels. This metric is the 3-D counterpart of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CXDLGFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFOCUSBORDER">
            <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFRAME">
            <summary>
            This value is the same as SM_CXSIZEFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFULLSCREEN">
            <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars, 
            call the SystemParametersInfofunction with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXHSCROLL">
            <summary>
            The width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXHTHUMB">
            <summary>
            The width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXICON">
            <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions 
            that SM_CXICON and SM_CYICON specifies.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXICONSPACING">
            <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMAXIMIZED">
            <summary>
            The default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMAXTRACK">
            <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels. 
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMENUCHECK">
            <summary>
            The width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMENUSIZE">
            <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMIN">
            <summary>
            The minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINIMIZED">
            <summary>
            The width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINSPACING">
            <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINTRACK">
            <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXPADDEDBORDER">
            <summary>
            The amount of border padding for captioned windows, in pixels. Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSCREEN">
            <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSIZE">
            <summary>
            The width of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CXFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSMICON">
            <summary>
            The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSMSIZE">
            <summary>
            The width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXVIRTUALSCREEN">
            <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_XVIRTUALSCREEN metric is the coordinates for the left side of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXVSCROLL">
            <summary>
            The width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYBORDER">
            <summary>
            The height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYCAPTION">
            <summary>
            The height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYCURSOR">
            <summary>
            The height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDLGFRAME">
            <summary>
            This value is the same as SM_CYFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDOUBLECLK">
            <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider 
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click 
            rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKHEIGHT.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDRAG">
            <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYEDGE">
            <summary>
            The height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. 
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border. 
            This value is the same as SM_CYDLGFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFOCUSBORDER">
            <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFRAME">
            <summary>
            This value is the same as SM_CYSIZEFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFULLSCREEN">
            <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYHSCROLL">
            <summary>
            The height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYICON">
            <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYICONSPACING">
            <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMAXIMIZED">
            <summary>
            The default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMAXTRACK">
            <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. 
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing 
            the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENU">
            <summary>
            The height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENUCHECK">
            <summary>
            The height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENUSIZE">
            <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMIN">
            <summary>
            The minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINIMIZED">
            <summary>
            The height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINSPACING">
            <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINTRACK">
            <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSCREEN">
            <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSIZE">
            <summary>
            The height of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CYFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMCAPTION">
            <summary>
            The height of a small caption, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMICON">
            <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMSIZE">
            <summary>
            The height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVIRTUALSCREEN">
            <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_YVIRTUALSCREEN metric is the coordinates for the top of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVSCROLL">
            <summary>
            The height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVTHUMB">
            <summary>
            The height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DIGITIZER">
            <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input 
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device. 
            For more information, see Remarks. 
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.IMMENABLED">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0. 
            SM_IMMENABLED indicates whether the system is ready to use a Unicode-based IME on a Unicode application. 
            To ensure that a language-dependent IME works, check SM_DBCSENABLED and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MAXIMUMTOUCHES">
            <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. SM_MAXIMUMTOUCHES returns the aggregate maximum of the 
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers, 
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts 
            the hardware can provide. Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because 
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEHORIZONTALWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.NETWORK">
            <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.REMOTECONTROL">
            <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is 
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0. 
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to 
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session 
            and potentially interact with it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.REMOTESESSION">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services 
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session, 
            the return value is 0. 
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console. 
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SAMEDISPLAYFORMAT">
            <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth, 
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, 
            or those bits can be located in different places in a pixel color value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SECURE">
            <summary>
            This system metric should be ignored; it always returns 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SERVERR2">
            <summary>
            The build number if the system is Windows Server 2003 R2; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present 
            the information only in audible form; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SHUTTINGDOWN">
            <summary>
            Nonzero if the current session is shutting down; otherwise, 0. Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.STARTER">
            <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SWAPBUTTON">
            <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The SM_DIGITIZER setting indicates the type of digitizer 
            input supported by a device running Windows 7 or Windows Server 2008 R2. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.XVIRTUALSCREEN">
            <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CXVIRTUALSCREEN metric is the width of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.YVIRTUALSCREEN">
            <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CYVIRTUALSCREEN metric is the height of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_HIDE">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>      
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position. This value
            is similar to <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL"/>, except
            the window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_MINIMIZE">
            <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window. This value is similar to
            <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNA">
            <summary>
            Displays the window in its current size and position. This value is
            similar to <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_RESTORE">
            <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_FORCEMINIMIZE">
            <summary>
             <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WM_">
            <summary>
            I needed some "Generic" magic to get from an enum to an int for switch and boolean operands
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.CS_">
            <summary>
            CS_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDFIRST">
            <summary>
            The retrieved handle identifies the window of the same type that is highest in the Z order.
            <para/>
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDLAST">
            <summary>
            The retrieved handle identifies the window of the same type that is lowest in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDNEXT">
            <summary>
            The retrieved handle identifies the window below the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDPREV">
            <summary>
            The retrieved handle identifies the window above the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_OWNER">
            <summary>
            The retrieved handle identifies the specified window's owner window, if any.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_CHILD">
            <summary>
            The retrieved handle identifies the child window at the top of the Z order,
            if the specified window is a parent window; otherwise, the retrieved handle is NULL.
            The function examines only child windows of the specified window. It does not examine descendant windows.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_ENABLEDPOPUP">
            <summary>
            The retrieved handle identifies the enabled popup window owned by the specified window (the
            search uses the first such window found using GW_HWNDNEXT); otherwise, if there are no enabled
            popup windows, the retrieved handle is that of the specified window.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WS_">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            https://www.autohotkey.com/docs/misc/Styles.htm
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.BS_">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            https://www.autohotkey.com/docs/misc/Styles.htm
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WS_EX_">
            <summary>
            Window style extended values, WS_EX_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SC_.F_ISSECURE">
            <summary>
            SCF_ISSECURE
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.HT">
            <summary>
            Non-client hit test values, HT*
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.GWL_">
            <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HSHELL_REDRAW">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms644991(v=vs.85).aspx 
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.PI.IsKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Is the specified key currently pressed down.
            </summary>
            <param name="key">Key to test.</param>
            <returns>True if pressed; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Toolkit.PI.IsKeyToggled(System.Windows.Forms.Keys)">
            <summary>
            Is the specified key currently toggled.
            </summary>
            <param name="key">Key to test.</param>
            <returns>True if toggled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Toolkit.PI.GetWindow(System.IntPtr,Krypton.Toolkit.PI.GetWindowType)">
            <summary>
            Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
            </summary>
            <remarks>The EnumChildWindows function is more reliable than calling GetWindow in a loop. An application that
            calls GetWindow to perform this task risks being caught in an infinite loop or referencing a handle to a window
            that has been destroyed.</remarks>
            <param name="hWnd">A handle to a window. The window handle retrieved is relative to this window, based on the
            value of the uCmd parameter.</param>
            <param name="uCmd">The relationship between the specified window and the window whose handle is to be
            retrieved.</param>
            <returns>
            If the function succeeds, the return value is a window handle. If no window exists with the specified relationship
            to the specified window, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="T:Krypton.Toolkit.PI.BlurParams">
            <summary>
            Contains members that specify the nature of a Gaussian blur.
            </summary>
            <remarks>Cannot be pinned with GCHandle due to bool value.</remarks>
        </member>
        <member name="F:Krypton.Toolkit.PI.BlurParams.Radius">
            <summary>
            Real number that specifies the blur radius (the radius of the Gaussian convolution kernel) in
            pixels. The radius must be in the range 0 through 255. As the radius increases, the resulting
            bitmap becomes more blurry.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BlurParams.ExpandEdges">
            <summary>
            Boolean value that specifies whether the bitmap expands by an amount equal to the blur radius.
            If TRUE, the bitmap expands by an amount equal to the radius so that it can have soft edges.
            If FALSE, the bitmap remains the same size and the soft edges are clipped.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.PI.GetNativeImage(System.Drawing.Bitmap)">
            <summary>
            Get the nativeImage field from the bitmap
            </summary>
            <param name="bitmap"></param>
            <returns>IntPtr</returns>
        </member>
        <member name="T:Krypton.Toolkit.PI.MONITORINFO">
            <summary>
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
    </members>
</doc>
