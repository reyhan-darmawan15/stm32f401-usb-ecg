<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Krypton.Ribbon</name>
    </assembly>
    <members>
        <member name="T:Krypton.Ribbon.ButtonSpecAppMenu">
            <summary>
            Button specification appropriate for an application menu
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppMenu.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecExpandRibbon">
            <summary>
            Implementation for the expand ribbon button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ButtonSpecExpandRibbon class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecExpandRibbon.AllowComponent">
            <summary>
            Gets a value indicating if the component is allowed to be selected at design time.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecExpandRibbon.ButtonSpecType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.GetStyle(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button style.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecExpandRibbon.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecManagerLayoutAppButton">
            <summary>
            Manage a collection of button specs for placing within a collection of ViewLayoutDocker instances.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecManagerLayoutAppButton.#ctor(Krypton.Toolkit.ViewContextMenuManager,System.Windows.Forms.Control,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ViewLayoutDocker[],Krypton.Toolkit.IPaletteMetric[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricPadding[],Krypton.Toolkit.GetToolStripRenderer,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerLayoutAppButton class.
            </summary>
            <param name="viewManager">Reference to context menu view manager.</param>
            <param name="control">Control that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricInt">Array of target metrics for outside/inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecManagerLayoutAppButton.ViewManager">
            <summary>
            Gets access to the view manager associated with the button specs.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecManagerLayoutAppButton.CreateButtonSpecView(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricPadding,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create the button spec view appropriate for the button spec.
            </summary>
            <param name="redirector">Redirector for acquiring palette values.</param>
            <param name="viewPaletteMetric">Target metric providers.</param>
            <param name="viewMetricPadding">Target metric padding.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>ButtonSpecView derived class.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecManagerLayoutRibbon">
            <summary>
            Manage a collection of button specs for placing within a collection of ViewLayoutDocker instances.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecManagerLayoutRibbon.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ButtonSpecCollectionBase,Krypton.Toolkit.ViewLayoutDocker[],Krypton.Toolkit.IPaletteMetric[],Krypton.Toolkit.PaletteMetricInt[],Krypton.Toolkit.PaletteMetricPadding[],Krypton.Toolkit.GetToolStripRenderer,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecManagerLayoutRibbon class.
            </summary>
            <param name="ribbon">Ribbon that owns the button manager.</param>
            <param name="redirector">Palette redirector.</param>
            <param name="variableSpecs">Variable set of button specifications.</param>
            <param name="fixedSpecs">Fixed set of button specifications.</param>
            <param name="viewDockers">Array of target view dockers.</param>
            <param name="viewMetrics">Array of target metric providers.</param>
            <param name="viewMetricInt">Array of target metrics for outside/inside spacer size.</param>
            <param name="viewMetricPaddings">Array of target metrics for button padding.</param>
            <param name="getRenderer">Delegate for returning a tool strip renderer.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecManagerLayoutRibbon.CreateButtonSpecView(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricPadding,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Create the button spec view appropriate for the button spec.
            </summary>
            <param name="redirector">Redirector for acquiring palette values.</param>
            <param name="viewPaletteMetric">Target metric providers.</param>
            <param name="viewMetricPadding">Target metric padding.</param>
            <param name="buttonSpec">ButtonSpec instance.</param>
            <returns>ButtonSpecView derived class.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecMdiChildClose">
            <summary>
            Implementation for the close button for mdi child form.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildClose.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ButtonSpecMdiChildClose class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildClose.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibility.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildClose.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildClose.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildClose.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecMdiChildFixed">
            <summary>
            Implementation for the fixed mdi child pendant buttons.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildFixed.#ctor(Krypton.Toolkit.PaletteButtonSpecStyle)">
            <summary>
            Initialize a new instance of the ButtonSpecMdiChildFixed class.
            </summary>
            <param name="fixedStyle">Fixed style to use.</param>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecMdiChildFixed.AllowComponent">
            <summary>
            Gets a value indicating if the component is allowed to be selected at design time.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecMdiChildFixed.MdiChild">
            <summary>
            Gets access to the owning krypton form.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecMdiChildFixed.ButtonSpecType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildFixed.GetStyle(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button style.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button style.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecMdiChildMin">
            <summary>
            Implementation for the minimize button for mdi child form.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildMin.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ButtonSpecMdiChildMin class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildMin.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildMin.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildMin.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildMin.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecMdiChildRestore">
            <summary>
            Implementation for the restore button for mdi child form.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildRestore.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ButtonSpecMdiChildRestore class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildRestore.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildRestore.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildRestore.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMdiChildRestore.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecMinimizeRibbon">
            <summary>
            Implementation for the minimize ribbon button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ButtonSpecMinimizeRibbon class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecMinimizeRibbon.AllowComponent">
            <summary>
            Gets a value indicating if the component is allowed to be selected at design time.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecMinimizeRibbon.ButtonSpecType">
            <summary>
            Gets and sets the actual type of the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.GetVisible(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button visible value.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button visibiliy.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.GetEnabled(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button enabled state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button enabled state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.GetChecked(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button checked state.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button checked state.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.GetStyle(Krypton.Toolkit.IPalette)">
            <summary>
            Gets the button style.
            </summary>
            <param name="palette">Palette to use for inheriting values.</param>
            <returns>Button style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecMinimizeRibbon.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecViewAppButton">
            <summary>
            Create and manage the view for a application button specific ButtonSpec definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewAppButton.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricPadding,Krypton.Toolkit.ButtonSpecManagerBase,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecViewAppButton class.
            </summary>
            <param name="redirector">Palette redirector.</param>
            <param name="paletteMetric">Source for metric values.</param>
            <param name="metricPadding">Padding metric for border padding.</param>
            <param name="manager">Reference to owning manager.</param>
            <param name="buttonSpec">Access</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewAppButton.CreateController(Krypton.Toolkit.ViewDrawButton,Krypton.Toolkit.NeedPaintHandler,System.Windows.Forms.MouseEventHandler)">
            <summary>
            Create a button controller for the view.
            </summary>
            <param name="viewButton">View to be controlled.</param>
            <param name="needPaint">Paint delegate.</param>
            <param name="clickHandler">Reference to click handler.</param>
            <returns>Controller instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewAppButton.OnFinishDelegate(System.Object,System.EventArgs)">
            <summary>
            Processes the finish of the button being pressed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecViewRibbon">
            <summary>
            Create and manage the view for a ribbon specific ButtonSpec definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewRibbon.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.IPaletteMetric,Krypton.Toolkit.PaletteMetricPadding,Krypton.Toolkit.ButtonSpecManagerBase,Krypton.Toolkit.ButtonSpec)">
            <summary>
            Initialize a new instance of the ButtonSpecViewRibbon class.
            </summary>
            <param name="redirector">Palette redirector.</param>
            <param name="paletteMetric">Source for metric values.</param>
            <param name="metricPadding">Padding metric for border padding.</param>
            <param name="manager">Reference to owning manager.</param>
            <param name="buttonSpec">Access</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewRibbon.CreateController(Krypton.Toolkit.ViewDrawButton,Krypton.Toolkit.NeedPaintHandler,System.Windows.Forms.MouseEventHandler)">
            <summary>
            Create a button controller for the view.
            </summary>
            <param name="viewButton">View to be controlled.</param>
            <param name="needPaint">Paint delegate.</param>
            <param name="clickHandler">Reference to click handler.</param>
            <returns>Controller instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecViewRibbon.OnFinishDelegate(System.Object,System.EventArgs)">
            <summary>
            Processes the finish of the button being pressed.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.AppButtonController">
            <summary>
            Provide application button functionality.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonController.Click">
            <summary>
            Occurs when the button is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonController.MouseReleased">
            <summary>
            Occurs when the button is released.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonController.NeedPaint">
            <summary>
            Occurs when a change in button state requires a repaint.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the AppButtonController class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonController.Target1">
            <summary>
            Gets and sets the first target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonController.Target2">
            <summary>
            Gets and sets the second target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonController.Target3">
            <summary>
            Gets and sets the third target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonController.Keyboard">
            <summary>
            Gets a value indicating if the keyboard was used to request the menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.UpdateTargetState">
            <summary>
            Set the correct visual state of the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Client area to be invalidated.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonController.OnMouseReleased(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseReleased event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.AppTabController">
            <summary>
            Provide application button tab functionality.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppTabController.Click">
            <summary>
            Occurs when the button is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppTabController.MouseReleased">
            <summary>
            Occurs when the button is released.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppTabController.NeedPaint">
            <summary>
            Occurs when a change in button state requires a repaint.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the AppTabController class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppTabController.Target1">
            <summary>
            Gets and sets the first target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppTabController.Target2">
            <summary>
            Gets and sets the second target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppTabController.Target3">
            <summary>
            Gets and sets the third target element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppTabController.Keyboard">
            <summary>
            Gets a value indicating if the keyboard was used to request the menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.AppTabController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.UpdateTargetState">
            <summary>
            Set the correct visual state of the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Client area to be invalidated.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppTabController.OnMouseReleased(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseReleased event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecAppButtonController">
            <summary>
            Process mouse events for an application menu based button spec button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.#ctor(Krypton.Toolkit.ViewContextMenuManager,Krypton.Toolkit.ViewDrawButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecAppButtonController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecAppButtonController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ButtonSpecAppButtonController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecAppButtonController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ButtonSpecRibbonController">
            <summary>
            Process mouse events for a ribbon based button spec button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.#ctor(Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ButtonSpecRibbonController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ButtonSpecRibbonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="T:Krypton.Ribbon.CollapsedGroupController">
            <summary>
            Process mouse events for a collapsed group.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.CollapsedGroupController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewLayoutDocker,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the LeftDownController class.
            </summary>
            <param name="ribbon">Reference to owning control instance.</param>
            <param name="target">View element that owns this controller.</param>
            <param name="needPaint">Paint delegate for notifying visual changes.</param>
        </member>
        <member name="P:Krypton.Ribbon.CollapsedGroupController.HasFocus">
            <summary>
            Gets a value indicating if the controller has focus.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.CollapsedGroupController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Client area to be invalidated.</param>
        </member>
        <member name="M:Krypton.Ribbon.CollapsedGroupController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ComboBoxController">
            <summary>
            Process mouse events for a ribbon group combobox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupComboBox,Krypton.Ribbon.ViewDrawRibbonGroupComboBox)">
            <summary>
            Initialize a new instance of the ComboBoxController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="comboBox">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ComboBoxController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.ContextClickController">
            <summary>
            Process mouse events looking for a context click.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ContextClickController.ContextClick">
            <summary>
            Occurs when the mouse is used to right click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.#ctor">
            <summary>
            Initialize a new instance of the ContextClickController class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double clicl.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ContextClickController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextClickController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the ContextClick event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ContextTitleController">
            <summary>
            Provide context title click functionality.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ContextTitleController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.ContextTitleController.ContextTabSet">
            <summary>
            Gets and sets the associated context tab set.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextTitleController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ContextTitleController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.CustomControlController">
            <summary>
            Process mouse events for a ribbon group custom control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCustomControl,Krypton.Ribbon.ViewDrawRibbonGroupCustomControl)">
            <summary>
            Initialize a new instance of the CustomControlController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="customControl">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.CustomControlController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.DateTimePickerController">
            <summary>
            Process mouse events for a ribbon group date time picker.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupDateTimePicker,Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker)">
            <summary>
            Initialize a new instance of the DateTimePickerController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="dateTimePicker">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DateTimePickerController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.DialogLauncherButtonController">
            <summary>
            Provide button functionality for the group dialog launcher.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the DialogLauncherButtonController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DialogLauncherButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="T:Krypton.Ribbon.DomainUpDownController">
            <summary>
            Process mouse events for a ribbon group domain up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupDomainUpDown,Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown)">
            <summary>
            Initialize a new instance of the DomainUpDownController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="domainUpDown">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DomainUpDownController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.GalleryButtonController">
            <summary>
            Process mouse events for a gallery button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GalleryButtonController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.#ctor(Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the GalleryButtonController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="repeatTimer">Does the button repeat when pressed.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.ForceLeave">
            <summary>
            Force the leaving of the area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.GalleryButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GalleryButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GalleryButtonController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.GalleryController">
            <summary>
            Process mouse events for a ribbon group textbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupGallery,Krypton.Ribbon.ViewDrawRibbonGroupGallery)">
            <summary>
            Initialize a new instance of the GalleryController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="gallery">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GalleryController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.GalleryItemController">
            <summary>
            Process mouse events for a gallery item.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GalleryItemController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.#ctor(Krypton.Ribbon.ViewDrawRibbonGalleryItem,Krypton.Ribbon.ViewLayoutRibbonGalleryItems,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GalleryItemController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="layout">Reference to layout of the image items.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.GalleryItemController.MousePoint">
            <summary>
            Gets the current tracking mouse point.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.GalleryItemController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.GalleryItemController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GalleryItemController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Ribbon.GalleryItemController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GalleryItemController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.GroupButtonController">
            <summary>
            Process mouse events for a ribbon group button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupButtonController.Click">
            <summary>
            Occurs when a click portion is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupButtonController.ContextClick">
            <summary>
            Occurs when the user right clicks the view.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupButtonController.DropDown">
            <summary>
            Occurs when a drop down portion is clicked.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GroupButtonController class.
            </summary>
            <param name="ribbon">Source control instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.MouseInSplit">
            <summary>
            Gets a value indicating if the mouse is inside the split rectangle.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.SplitRectangle">
            <summary>
            Gets and sets the rectangle for the split area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.ButtonType">
            <summary>
            Gets and sets the type of button we are controlling.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupButtonController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.OnDropDown(System.EventArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.GroupCheckBoxController">
            <summary>
            Process mouse events for a ribbon group check box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupCheckBoxController.Click">
            <summary>
            Occurs when a click portion is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupCheckBoxController.ContextClick">
            <summary>
            Occurs when the user right clicks the view.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GroupCheckBoxController class.
            </summary>
            <param name="ribbon">Source control instance.</param>
            <param name="targetMain">Target for main element changes.</param>
            <param name="targetImage">Target for image state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupCheckBoxController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupCheckBoxController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupCheckBoxController.TargetMain">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupCheckBoxController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupCheckBoxController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.GroupRadioButtonController">
            <summary>
            Process mouse events for a ribbon group radio button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupRadioButtonController.Click">
            <summary>
            Occurs when a click portion is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.GroupRadioButtonController.ContextClick">
            <summary>
            Occurs when the user right clicks the view.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the GroupRadioButtonController class.
            </summary>
            <param name="ribbon">Source control instance.</param>
            <param name="targetMain">Target for main element changes.</param>
            <param name="targetImage">Target for image state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupRadioButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupRadioButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupRadioButtonController.TargetMain">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupRadioButtonController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.GroupRadioButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.LeftDownButtonController">
            <summary>
            Provide button pressed when mouse down functionality.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.LeftDownButtonController.Click">
            <summary>
            Occurs when the button is pressed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the LeftDownButtonController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
        </member>
        <member name="P:Krypton.Ribbon.LeftDownButtonController.Ribbon">
            <summary>
            Gets access to the owning ribbon instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftDownButtonController.Target">
            <summary>
            Gets access to the target view for this controller.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftDownButtonController.HasFocus">
            <summary>
            Gets and sets the focus flag.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftDownButtonController.IsFixed">
            <summary>
            Is the controller fixed in the pressed state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.SetFixed">
            <summary>
            Fix the display of the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.RemoveFixed">
            <summary>
            Remove the fixed pressed mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.LeftDownButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.UpdateTargetState">
            <summary>
            Set the correct visual state of the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Client area to be invalidated.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftDownButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.LeftUpButtonController">
            <summary>
            Provide button pressed when mouse released functionality.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.LeftUpButtonController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the LeftUpButtonController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.Ribbon">
            <summary>
            Gets access to the owning ribbon instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.Target">
            <summary>
            Gets access to the target view for this controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.IsOnlyPressedWhenOver">
            <summary>
            Gets a value indicating if the state is pressed only when over button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.LeftUpButtonController.Captured">
            <summary>
            Gets a value indicating if mouse input is being captured.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.LeftUpButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.MaskedTextBoxController">
            <summary>
            Process mouse events for a ribbon group masked textbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox,Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox)">
            <summary>
            Initialize a new instance of the MaskedTextBoxController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="maskedTextBox">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.MaskedTextBoxController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.NullController">
            <summary>
            Process mouse events by doing nothing.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.NullController.#ctor">
            <summary>
            Initialize a new instance of the NullController class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.NullController.Singleton">
            <summary>
            Gets access to the single instance of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.NullController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.NullController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.NullController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.NullController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.NullController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.NullController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.NullController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.NumericUpDownController">
            <summary>
            Process mouse events for a ribbon group numeric up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupNumericUpDown,Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown)">
            <summary>
            Initialize a new instance of the NumericUpDownController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="numericUpDown">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.NumericUpDownController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.QATButtonController">
            <summary>
            Provide quick access toolbar button controller functionality.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the QATButtonController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
        </member>
        <member name="P:Krypton.Ribbon.QATButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="T:Krypton.Ribbon.QATExtraButtonController">
            <summary>
            Provide quick access toolbar extra button controller functionality.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the QATExtraButtonController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.QATExtraButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATExtraButtonController.UpdateTargetState">
            <summary>
            Set the correct visual state of the target.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.RecentDocController">
            <summary>
            Generate click events when the recent document is pressed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.#ctor(Krypton.Toolkit.ViewContextMenuManager,Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the RecentDocController class.
            </summary>
            <param name="viewManager">Owning view manager instance.</param>
            <param name="menuItem">Target menu item view element.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.RecentDocController.HasSubMenu">
            <summary>
            Returns if the item shows a sub menu when selected.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.ShowTarget">
            <summary>
            This target should display as the active target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.ClearTarget">
            <summary>
            This target should clear any active display.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.ShowSubMenu">
            <summary>
            This target should show any appropriate sub menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.ClearSubMenu">
            <summary>
            This target should remove any showing sub menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MatchMnemonic(System.Char)">
            <summary>
            Determine if the keys value matches the mnemonic setting for this target.
            </summary>
            <param name="charCode">Key code to test against.</param>
            <returns>True if a match is found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MnemonicActivate">
            <summary>
            Activate the item because of a mnemonic key press.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.GetActiveView">
            <summary>
            Gets the view element that should be used when this target is active.
            </summary>
            <returns>View element to become active.</returns>
        </member>
        <member name="P:Krypton.Ribbon.RecentDocController.ClientRectangle">
            <summary>
            Get the client rectangle for the display of this target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.DoesStackedClientMouseDownBecomeCurrent(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause the currently stacked context menu to become current.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.RecentDocController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.RecentDocController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="layout">Does a layout need to occur.</param>
        </member>
        <member name="M:Krypton.Ribbon.RecentDocController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.RepeatButtonController">
            <summary>
            Generate click events whilst mouse pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.RepeatButtonController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the RepeatButtonController class.
            </summary>
            <param name="ribbon">Reference to owning control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="target">Target for state changes.</param>
        </member>
        <member name="P:Krypton.Ribbon.RepeatButtonController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.RepeatButtonController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.RepeatButtonController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.RibbonTabController">
            <summary>
            Process mouse events for a ribbon tab.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.RibbonTabController.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.RibbonTabController.ContextClick">
            <summary>
            Occurs when the mouse is used to right click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewDrawRibbonTab,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the RibbonTabController class.
            </summary>
            <param name="ribbon">Reference to owning control.</param>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonTabController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonTabController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.OnClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the ContextClick event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabController.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.RibbonTabsController">
            <summary>
            Process mouse events for the ribbon tabs area.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.RibbonTabsController.ContextClick">
            <summary>
            Occurs when the mouse is used to right click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the RibbonTabsController class.
            </summary>
            <param name="ribbon">Reference to owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonTabsController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabsController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the ContextClick event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.RichTextBoxController">
            <summary>
            Process mouse events for a ribbon group richtextbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupRichTextBox,Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox)">
            <summary>
            Initialize a new instance of the RichTextBoxController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="richTextBox">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RichTextBoxController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.TextBoxController">
            <summary>
            Process mouse events for a ribbon group textbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTextBox,Krypton.Ribbon.ViewDrawRibbonGroupTextBox)">
            <summary>
            Initialize a new instance of the TextBoxController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="textBox">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.TextBoxController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.TrackBarController">
            <summary>
            Process mouse events for a ribbon group track bar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTrackBar,Krypton.Ribbon.ViewDrawRibbonGroupTrackBar)">
            <summary>
            Initialize a new instance of the TrackBarController class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="trackBar">Source definition.</param>
            <param name="target">Target view element.</param>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.GotFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has got the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.KeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been pressed down.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.KeyPress(System.Windows.Forms.Control,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Key has been pressed.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.KeyUp(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Key has been released.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.TrackBarController.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewHightlightController">
            <summary>
            Process mouse events for a standard button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewHightlightController.Click">
            <summary>
            Occurs when the user left clicks the view.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewHightlightController.ContextClick">
            <summary>
            Occurs when the user right clicks the view.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.#ctor(Krypton.Toolkit.ViewBase,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewHightlightController class.
            </summary>
            <param name="target">Target for state changes.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.MouseEnter(System.Windows.Forms.Control)">
            <summary>
            Mouse has entered the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.MouseMove(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Mouse has moved inside the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.MouseDown(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been pressed in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button pressed down.</param>
            <returns>True if capturing input; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.MouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Mouse button has been released in the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="pt">Mouse position relative to control.</param>
            <param name="button">Mouse button released.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.MouseLeave(System.Windows.Forms.Control,Krypton.Toolkit.ViewBase)">
            <summary>
            Mouse has left the view.
            </summary>
            <param name="c">Reference to the source control instance.</param>
            <param name="next">Reference to view that is next to have the mouse.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.DoubleClick(System.Drawing.Point)">
            <summary>
            Left mouse button double click.
            </summary>
            <param name="pt">Mouse position relative to control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewHightlightController.IgnoreVisualFormLeftButtonDown">
            <summary>
            Should the left mouse down be ignored when present on a visual form border area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewHightlightController.NeedPaint">
            <summary>
            Gets and sets the need paint delegate for notifying paint requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewHightlightController.Target">
            <summary>
            Gets access to the associated target of the controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.PerformNeedPaint">
            <summary>
            Fires the NeedPaint event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.UpdateTargetState(System.Windows.Forms.Control)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="c">Owning control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.UpdateTargetState(System.Drawing.Point)">
            <summary>
            Set the correct visual state of the target.
            </summary>
            <param name="pt">Mouse point.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewHightlightController.OnContextClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">A MouseEventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonGallery">
            <summary>
            Provides a gallery for selecting from a group of possible images.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonGallery.ImageListChanged">
            <summary>
            Occurs when the value of the ImageList property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonGallery.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonGallery.TrackingImage">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonGallery.GalleryDropMenu">
            <summary>
            Occurs when the user invokes the drop down menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.#ctor">
            <summary>
            Initialize a new instance of the KryptonGallery class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.Text">
            <summary>
            Gets and sets the control text.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.Padding">
            <summary>
            Gets and sets the internal padding space.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.DropButtonRanges">
            <summary>
            Gets the collection of drop down ranges.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.PreferredItemSize">
            <summary>
            Gets and sets the preferred size based on the number of items per line and number of lines.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.DropMaxItemWidth">
            <summary>
            Gets and sets the maximum number of lines items for the drop down menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.DropMinItemWidth">
            <summary>
            Gets and sets the minimum number of lines items for the drop down menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.ButtonStyle">
            <summary>
            Gets and sets the button style used for each image item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.SmoothScrolling">
            <summary>
            Gets and sets if scrolling is animated or a jump straight to target..
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.AlwaysActive">
            <summary>
            Gets and sets Determines if the control is always active or only when the mouse is over the control or has focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.ImageList">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.SelectedIndex">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.Images">
            <summary>
            Gets access to the button image overrides.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.StateCommon">
            <summary>
            Gets access to the common gallery appearance that other states can override.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.StateDisabled">
            <summary>
            Gets access to the disabled gallery appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.StateNormal">
            <summary>
            Gets access to the normal gallery appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.StateActive">
            <summary>
            Gets access to the active gallery appearance entries.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.InRibbonDesignMode">
            <summary>
            Gets and sets if the control is in the ribbon design mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.BringIntoView">
            <summary>
            Bring the selected index into view.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.BringIntoView(System.Int32)">
            <summary>
            Bring the specified image index into view.
            </summary>
            <param name="index">Index to bring into view.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.SetFixedState(System.Boolean)">
            <summary>
            Sets the fixed state of the control.
            </summary>
            <param name="active">Should the control be fixed as active.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.IsActive">
            <summary>
            Gets a value indicating if the input control is active.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnImageListChanged(System.EventArgs)">
            <summary>
            Raises the ImageListChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnTrackingImage(Krypton.Toolkit.ImageSelectEventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An ImageSelectEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnGalleryDropMenu(Krypton.Ribbon.GalleryDropMenuEventArgs)">
            <summary>
            Raises the GalleryDropMenu event.
            </summary>
            <param name="e">An GalleryDropMenuEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.OnNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.EvalTransparentPaint">
            <summary>
            Work out if this control needs to paint transparent areas.
            </summary>
            <returns>True if paint required; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGallery.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGallery.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonGalleryRange">
            <summary>
            Represents a single gallery range.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonGalleryRange.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryRange.#ctor">
            <summary>
            Initialise a new instance of the KryptonGalleryRange class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryRange.Heading">
            <summary>
            Gets and sets the gallery range heading text.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryRange.ImageIndexStart">
            <summary>
            Gets and sets the index of first image in the gallery ImageList for display.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryRange.ImageIndexEnd">
            <summary>
            Gets and sets the index of last image in the gallery ImageList for display.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryRange.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonGalleryRangeCollection">
            <summary>
            Specialise the generic collection with type specific rules for gallery range item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryRangeCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="heading">Heading of the gallery range instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbon">
            <summary>
            Ribbon control presents a tabbed set of user options.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbon.RibbonButtonSpecAnyCollection">
            <summary>
            Collection for managing ButtonSpecAny instances.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.RibbonButtonSpecAnyCollection.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the RibbonButtonSpecAnyCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.SelectedTabChanged">
            <summary>
            Occurs when the selected tab changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.SelectedContextChanged">
            <summary>
            Occurs when the selected context changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.AppButtonMenuOpening">
            <summary>
            Occurs when the application button menu is opening.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.AppButtonMenuOpened">
            <summary>
            Occurs when the application button menu is opened.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.AppButtonMenuClosing">
            <summary>
            Occurs when the application button menu is about to close.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.AppButtonMenuClosed">
            <summary>
            Occurs when the application button menu has been closed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.ShowRibbonContextMenu">
            <summary>
            Occurs when the ribbon context menu is about to be shown.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.ShowQATCustomizeMenu">
            <summary>
            Occurs when the quick access toolbar customize menu is about to be shown.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.MinimizedModeChanged">
            <summary>
            Occurs when the MinimizedMode property has changed value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbon.DesignTimeAddTab">
            <summary>
            Occurs add design time when the user requests a tab be added.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbon class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Anchor">
            <summary>
            Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AutoSize">
            <summary>
            Gets and sets the automatic resize of the control to fit contents.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AutoSizeMode">
            <summary>
            Gets and sets the auto size mode.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.ContextMenuStrip">
            <summary>
            Gets and sets the context menu associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Dock">
            <summary>
            Gets and sets which control border to dock control against.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Margin">
            <summary>
            Gets or sets the space between controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that GetPreferredSize can specify.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that GetPreferredSize can specify.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Padding">
            <summary>
            Gets or sets padding within the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AllowFormIntegrate">
            <summary>
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetAllowFormIntegrate">
            <summary>
            Resets the AllowFormIntegrate property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AllowMinimizedChange">
            <summary>
            Gets or sets if the user is allowed to change the minimized mode.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateCommon">
            <summary>
            Gets access to the common ribbon appearance that other states can override.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateDisabled">
            <summary>
            Gets access to the disabled ribbon appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateNormal">
            <summary>
            Gets access to the normal ribbon appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateTracking">
            <summary>
            Gets access to the tracking ribbon appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StatePressed">
            <summary>
            Gets access to the pressed ribbon appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateCheckedNormal">
            <summary>
            Gets access to the tracking checked normal appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateCheckedTracking">
            <summary>
            Gets access to the tracking checked tracking appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateContextNormal">
            <summary>
            Gets access to the context normal appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateContextTracking">
            <summary>
            Gets access to the context tracking appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateContextCheckedNormal">
            <summary>
            Gets access to the checked context normal appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.StateContextCheckedTracking">
            <summary>
            Gets access to the checked context tracking appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.OverrideFocus">
            <summary>
            Gets access to the ribbon appearance when it has focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonTabs">
            <summary>
            Gets the collection of ribbon tabs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.SelectedTab">
            <summary>
            Gets and sets the currently selected tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetSelectedTab">
            <summary>
            Reset the SelectedTab to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.SelectedContext">
            <summary>
            Gets and sets the common separated list of selected context names.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetSelectedContext">
            <summary>
            Reset the SelectedContext to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonContexts">
            <summary>
            Gets the collection of ribbon context definitions.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.QATButtons">
            <summary>
            Gets the collection of ribbon quick access toolbar buttons.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonShortcuts">
            <summary>
            Gets the set of ribbon shortcuts.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonStrings">
            <summary>
            Gets the set of ribbon display strings.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonAppButton">
            <summary>
            Gets the set of ribbon application button display strings.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.RibbonStyles">
            <summary>
            Gets the styles for various ribbon elements.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.HideRibbonSize">
            <summary>
            Gets and sets the vertical and horizontal minimum sizes at which the ribbon hides itself. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetHideRibbonSize">
            <summary>
            Reset the HideRibbonSize to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.MinimizedMode">
            <summary>
            Gets and sets a value indicating if the ribbon is in minimized mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetMinimizedMode">
            <summary>
            Resets the MinimizedMode property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.QATLocation">
            <summary>
            Gets and sets the display method for the quick access toolbar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetQATLocation">
            <summary>
            Resets the QATLocation property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.QATUserChange">
            <summary>
            Gets and sets a value indicating if user is allowed to change the QAT entries.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetQATUserChange">
            <summary>
            Resets the QATUserChange property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.ShowMinimizeButton">
            <summary>
            Gets and sets a value indicating if a minimize/expand button appears on the ribbon tab ara.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ResetShowMinimizeButton">
            <summary>
            Resets the ShowMinimizeButton property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.ToolTipManager">
            <summary>
            Gets access to the ToolTipManager used for displaying tool tips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.Controls">
            <summary>
            Gets the collection of controls contained within the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.InDesignMode">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.InDesignHelperMode">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbon.KeyboardMode">
            <summary>
            Gets a value indicating if currently in keyboard mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ToggleKeyboardMode">
            <summary>
            Toggles into and out off keyboard mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.DesignerGetHitTest(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.DesignerMouseLeave">
            <summary>
            Internal design time method.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ViewRectangleToPoint(Krypton.Toolkit.ViewBase)">
            <summary>
            Internal design time method.
            </summary>
            <param name="view">ViewBase reference.</param>
            <returns>Mouse point.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.DesignerComponentFromPoint(System.Drawing.Point)">
            <summary>
            Internal design time method.
            </summary>
            <param name="pt">Mouse location.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnInitialized(System.EventArgs)">
            <summary>
            Raises the Initialized event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the HandleCreated event. 
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.CreateControlsInstance">
            <summary>
            Creates a new instance of the control collection for the control.
            </summary>
            <returns>A new instance of KryptonNavigatorControlCollection assigned to the control.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows-based messages.
            </summary>
            <param name="m">A Windows-based message.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A Message, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnButtonSpecChanged(System.Object,System.EventArgs)">
            <summary>
            Processes a notification from palette storage of a button spec change.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.PaintBackground(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Perform background painting with the provided default values.
            </summary>
            <param name="g">Graphics reference for drawing.</param>
            <param name="backBrush">Brush to use when painting.</param>
            <param name="backRect">Client area to paint.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette storage of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the Enabled event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnSelectedTabChanged(System.EventArgs)">
            <summary>
            Raises the SelectedTabChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnSelectedContextChanged(System.EventArgs)">
            <summary>
            Raises the SelectedContextChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnShowRibbonContextMenu(Krypton.Toolkit.ContextMenuArgs)">
            <summary>
            Raises the ShowRibbonContextMenu event.
            </summary>
            <param name="e">A ContextMenuArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnShowQATCustomizeMenu(Krypton.Toolkit.ContextMenuArgs)">
            <summary>
            Raises the ShowQATCustomizeMenu event.
            </summary>
            <param name="e">A ContextMenuArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnAppButtonMenuOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the AppButtonMenuOpening event.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnAppButtonMenuOpened(System.EventArgs)">
            <summary>
            Raises the AppButtonMenuOpened event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnAppButtonMenuClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the AppButtonMenuClosing event.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnAppButtonMenuClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Raises the AppButtonMenuClosed event.
            </summary>
            <param name="e">An ToolStripDropDownClosedEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbon.OnMinimizedModeChanged(System.EventArgs)">
            <summary>
            Raises the MinimizedModeChanged event.
            </summary>
            <param name="e">An EventArgs containing event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonContext">
            <summary>
            Represents a single context definition.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonContext.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonContext.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonContext class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonContext.ContextName">
            <summary>
            Gets and sets the unique name of the context.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonContext.ContextTitle">
            <summary>
            Gets and sets the display title for associated contextual tabs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonContext.ContextColor">
            <summary>
            Gets and sets the display color for associated contextual tabs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonContext.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonContext.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.RibbonContextHandler">
            <summary>
            Delegate used for hooking into a KryptonRibbonContext typed collection.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonContextCollection">
            <summary>
            Specialise the generic collection with type specific rules for context item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonContextCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon context instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroup">
            <summary>
            Represents a single ribbon group.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DialogBoxLauncherClick">
            <summary>
            Occurs when the dialog box launcher button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DesignTimeAddTriple">
            <summary>
            Occurs when the design time wants to add a triple.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DesignTimeAddLines">
            <summary>
            Occurs when the design time wants to add a lines.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DesignTimeAddSeparator">
            <summary>
            Occurs when the design time wants to add a separator.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DesignTimeAddGallery">
            <summary>
            Occurs when the design time wants to add a gallery.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroup.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonTab class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.RibbonTab">
            <summary>
            Gets access to the owning ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.TextLine1">
            <summary>
            Gets and sets the display text line 1 for the ribbon group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the ribbon group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.KeyTipGroup">
            <summary>
            Gets and sets the key tip used when group is collapsed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.KeyTipDialogLauncher">
            <summary>
            Gets and sets the key tip used for group dialog box launcher.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.Image">
            <summary>
            Gets and sets the ribbon group image when collapsed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.Visible">
            <summary>
            Gets and sets the visible state of the ribbon group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.DialogBoxLauncher">
            <summary>
            Gets and sets the display of a dialog box launcher button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.AllowCollapsed">
            <summary>
            Gets and sets a value indicating if the ribbon group is allowed to be collapsed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.MinimumWidth">
            <summary>
            Gets and sets the minimum width allowed, with -1 removing this limitation
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.MaximumWidth">
            <summary>
            Gets and sets the maximum width allowed, with -1 removing this limitation
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.Items">
            <summary>
            Gets the collection of ribbon group items.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroup.GroupView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.OnDialogBoxLauncherClick(System.EventArgs)">
            <summary>
            Raises the DialogBoxLauncherClick event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroup.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupCollection">
            <summary>
            Specialise the generic collection with type specific rules for group item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon group instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonQATButton">
            <summary>
            Represents a single ribbon quick access toolbar entry.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonQATButton.Click">
            <summary>
            Occurs when the quick access toolbar button has been clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonQATButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonQATButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Image">
            <summary>
            Gets and sets the application button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Visible">
            <summary>
            Gets and sets the visible state of the ribbon quick access toolbar entry.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.Show">
            <summary>
            Make the ribbon tab visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.Hide">
            <summary>
            Make the ribbon tab hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Enabled">
            <summary>
            Gets and sets the enabled state of the ribbon quick access toolbar entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Text">
            <summary>
            Gets and sets the display text of the quick access toolbar button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ToolTipStyle">
            <summary>
            Gets and sets the tooltip label style for the quick access button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ToolTipImage">
            <summary>
            Gets and sets the image for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ToolTipImageTransparentColor">
            <summary>
            Gets and sets the color to draw as transparent in the ToolTipImage.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ToolTipTitle">
            <summary>
            Gets and sets the title text for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.ToolTipBody">
            <summary>
            Gets and sets the body text for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButton.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.SetRibbon(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Provides a back reference to the owning ribbon control instance.
            </summary>
            <param name="ribbon">Reference to owning instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetImage">
            <summary>
            Gets the entry image.
            </summary>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetText">
            <summary>
            Gets the entry text.
            </summary>
            <returns>Text value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetEnabled">
            <summary>
            Gets the entry enabled state.
            </summary>
            <returns>Enabled value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetShortcutKeys">
            <summary>
            Gets the entry shortcut keys state.
            </summary>
            <returns>ShortcutKeys value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetVisible">
            <summary>
            Gets the entry visible state.
            </summary>
            <returns>Visible value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.SetVisible(System.Boolean)">
            <summary>
            Sets a new value for the visible state.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetToolTipStyle">
            <summary>
            Gets the tooltip label style.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetToolTipImage">
            <summary>
            Gets and sets the image for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetToolTipImageTransparentColor">
            <summary>
            Gets and sets the color to draw as transparent in the ToolTipImage.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetToolTipTitle">
            <summary>
            Gets and sets the title text for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.GetToolTipBody">
            <summary>
            Gets and sets the body text for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonQATButtonCollection">
            <summary>
            Quick access toolbar can contain any component that implements the IQuickAccessToolbarEntry
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonQATButtonCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonRecentDoc">
            <summary>
            Represents a single recent document entry in the ribbon application button menu.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonRecentDoc.Click">
            <summary>
            Occurs when the recent document item is clicked.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonRecentDoc.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonRecentDoc class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDoc.Text">
            <summary>
            Gets and sets the main text for the recent document entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDoc.ExtraText">
            <summary>
            Gets and sets the extra text for the recent document entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDoc.Image">
            <summary>
            Gets and sets the recent document image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDoc.ImageTransparentColor">
            <summary>
            Gets and sets the image color to make transparent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDoc.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonRecentDoc.PerformClick">
            <summary>
            Generates a Click event for the component.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonRecentDoc.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.RibbonRecentDocHandler">
            <summary>
            Delegate used for hooking into a KryptonRibbonContext typed collection.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonRecentDocCollection">
            <summary>
            Specialise the generic collection with type specific rules for recent document item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonRecentDocCollection.Item(System.String)">
            <summary>
            Gets the item with the provided document name.
            </summary>
            <param name="name">Name of the recent document instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonTab">
            <summary>
            Represents a single ribbon tab.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonTab.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonTab.DesignTimeAddGroup">
            <summary>
            Occurs when the design time wants to add a group.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonTab.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonTab class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.Text">
            <summary>
            Gets and sets the display text for the ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.ContextName">
            <summary>
            Gets and sets the name of the context this tab is associated with.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.ResetContextName">
            <summary>
            Reset the ContextName to the default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.Visible">
            <summary>
            Gets and sets the visible state of the ribbon tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.Show">
            <summary>
            Make the ribbon tab visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.Hide">
            <summary>
            Make the ribbon tab hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.Groups">
            <summary>
            Gets the collection of ribbon tab groups.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTab.TabView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTab.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonTabCollection">
            <summary>
            Specialise the generic collection with type specific rules for tab item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTabCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon tab instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipControl.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KeyTipInfoList,System.Boolean)">
            <summary>
            Initialize a new instance of the KeyTipControl class.
            </summary>
            <param name="ribbon">Reference to owning control instance.</param>
            <param name="keyTips">List of key tips.</param>
            <param name="showDisabled">True to show disabled entries, otherwise enabled.</param>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipControl.SetKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Define the set of key tips to display.
            </summary>
            <param name="keyTips">List of key tips.</param>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipControl.AppendKeyPress(System.Char)">
            <summary>
            Process the incoming key as being pressed.
            </summary>
            <param name="key">Key data.</param>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipControl.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the PaintBackground event.
            </summary>
            <param name="pevent">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">An PaintEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.RibbonAppButton,Krypton.Toolkit.IPalette,Krypton.Toolkit.PaletteMode,Krypton.Toolkit.PaletteRedirect,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
             Initialize a new instance of the VisualPopupAppMenu class.
            </summary>
            <param name="ribbon">Owning ribbon instance.</param>
            <param name="appButton">Originating app button instance.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="rectAppButtonTopHalf">Screen location of the upper half of the app button.</param>
            <param name="rectAppButtonBottomHalf">Screen location of the lower half of the app button.</param>
            <param name="keyboardActivated">Was the context menu activated by a keyboard action.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupAppMenu.CloseReason">
            <summary>
            Sets the reason for the context menu being closed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.Show(System.Drawing.Rectangle)">
            <summary>
            Show the context menu relative to the provided screen rectangle.
            </summary>
            <param name="screenRect">Screen rectangle.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupAppMenu.ShowHorz">
            <summary>
            Gets and sets the horizontal setting used to position the menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupAppMenu.ShowVert">
            <summary>
            Gets and sets the vertical setting used to position the menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupAppMenu.ViewContextMenuManager">
            <summary>
            Gets access to the view manager for the context menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.DoesCurrentMouseDownEndAllTracking(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause an end to popup tracking.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to end tracking; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.DoesStackedClientMouseDownBecomeCurrent(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause it to become the current tracking popup.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to become current; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.DoesMouseDownGetEaten(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse down be eaten when the tracking has been ended.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Screen coordinates point.</param>
            <returns>True to eat message; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.GetResolvedPalette">
            <summary>
            Gets the resolved palette to actually use when drawing.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupAppMenu.Redirector">
            <summary>
            Gets access to the palette redirector.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupAppMenu.OnPaletteNeedPaint(System.Object,Krypton.Toolkit.NeedLayoutEventArgs)">
            <summary>
            Processes a notification from palette of a paint and optional layout required.
            </summary>
            <param name="sender">Source of notification.</param>
            <param name="e">An NeedLayoutEventArgs containing event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the VisualPopupGroup class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGroup">Reference to ribbon group for display.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupGroup.ViewGroup">
            <summary>
            Gets the view for the popup group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupGroup.RestorePreviousFocus">
            <summary>
            Gets and sets a flag indicating if previous ribbon focus should be restored on dispose.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.SetFirstFocusItem">
            <summary>
            Set focus to the first focus item inside the popup group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.SetLastFocusItem">
            <summary>
            Set focus to the last focus item inside the popup group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.SetNextFocusItem">
            <summary>
            Set focus to the next focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.SetPreviousFocusItem">
            <summary>
            Set focus to the previous focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.ShowCalculatingSize(Krypton.Ribbon.ViewDrawRibbonGroup,System.Drawing.Rectangle)">
            <summary>
            Show the group popup relative to the parent group instance.
            </summary>
            <param name="parentGroup">Parent group instance.</param>
            <param name="parentScreenRect">Screen rectangle of the parent.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.HideFocus">
            <summary>
            Hide focus by giving it to the hidden control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupGroup.ViewPopupManager">
            <summary>
            Gets access to the popup group specific view manager.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupGroup.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupGroup.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewManager,Krypton.Ribbon.ViewDrawRibbonCaptionArea,Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the VisualPopupMinimized class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="viewManager">View manager instance for managing view display.</param>
            <param name="captionArea">View element that manages the custom chrome injection.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupMinimized.ViewRibbonManager">
            <summary>
            Gets the view for the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.SetFirstFocusItem">
            <summary>
            Sets focus to the first focus item inside the selected tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.SetLastFocusItem">
            <summary>
            Set focus to the last focus item inside the popup group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.SetNextFocusItem">
            <summary>
            Set focus to the next focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.SetPreviousFocusItem">
            <summary>
            Set focus to the previous focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.DoesCurrentMouseDownEndAllTracking(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause an end to popup tracking.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to end tracking; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.AllowMouseMove(System.Windows.Forms.Message,System.Drawing.Point)">
            <summary>
            Should the mouse move at provided screen point be allowed.
            </summary>
            <param name="m">Original message.</param>
            <param name="pt">Client coordinates point.</param>
            <returns>True to alow; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.Show(Krypton.Ribbon.ViewLayoutRibbonTabsArea,Krypton.Toolkit.ViewDrawPanel)">
            <summary>
            Show the minimized popup relative to the tabs area of the ribbon.
            </summary>
            <param name="tabsArea">Tabs area of the </param>
            <param name="drawMinimizedPanel"></param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.UpdatePosition(Krypton.Ribbon.ViewLayoutRibbonTabsArea,Krypton.Toolkit.ViewDrawPanel)">
            <summary>
            Update the displayed position to reflect a change in selected tab.
            </summary>
            <param name="tabsArea">Tabs area of the </param>
            <param name="drawMinimizedPanel"></param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupMinimized.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupMinimized.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewLayoutRibbonQATContents,Krypton.Toolkit.IRenderer)">
            <summary>
            Initialize a new instance of the VisualPopupQATOverflow class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="contents">Reference to original contents which has overflow items.</param>
            <param name="renderer">Drawing renderer.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupQATOverflow.ViewOverflowManager">
            <summary>
            Gets the qat overflow manager.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupQATOverflow.ViewQATContents">
            <summary>
            Gets access to the quick access toolbar contents view.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.SetFirstFocusItem">
            <summary>
            Set focus to the first focus item inside the popup group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.SetLastFocusItem">
            <summary>
            Set focus to the last focus item inside the popup group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.SetNextFocusItem">
            <summary>
            Set focus to the next focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.SetPreviousFocusItem">
            <summary>
            Set focus to the previous focus item inside the popup group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.ShowCalculatingSize(System.Drawing.Rectangle,System.EventHandler)">
            <summary>
            Show the quick access toolbar popup relative to the parent area.
            </summary>
            <param name="parentScreenRect">Screen rectangle of the parent.</param>
            <param name="finishDelegate">Delegate fired when popup dismissed.</param>
        </member>
        <member name="P:Krypton.Ribbon.VisualPopupQATOverflow.CreateParams">
            <summary>
            Gets the creation parameters.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the Layout event.
            </summary>
            <param name="levent">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.VisualPopupQATOverflow.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.GalleryDropMenuEventArgs">
            <summary>
            Event arguments for the drop down menu of a gallery.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GalleryDropMenuEventArgs.#ctor(Krypton.Toolkit.KryptonContextMenu)">
            <summary>
            Initialize a new instance of the GalleryDropMenuEventArgs class.
            </summary>
            <param name="contextMenu">Context menu.</param>
        </member>
        <member name="P:Krypton.Ribbon.GalleryDropMenuEventArgs.KryptonContextMenu">
            <summary>
            KryptonContextMenu for display.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.AppButtonMenuProvider">
            <summary>
            Implementation class used to provide application button context menu details to view elements.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonMenuProvider.Dispose">
            <summary>
            Raises the Dispose event.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonMenuProvider.Closing">
            <summary>
            Raises the Closing event.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.AppButtonMenuProvider.Close">
            <summary>
            Raises the Close event.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.#ctor(Krypton.Toolkit.ViewContextMenuManager,Krypton.Toolkit.KryptonContextMenuItemCollection,Krypton.Toolkit.ViewLayoutStack,Krypton.Toolkit.IPalette,Krypton.Toolkit.PaletteMode,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ContextMenuProvider class.
            </summary>
            <param name="viewManager">View manager used to organize keyboard events.</param>
            <param name="menuCollection">Top level set of menu items.</param>
            <param name="viewColumns">Stack used for adding new columns.</param>
            <param name="palette">Local palette setting to use initially.</param>
            <param name="paletteMode">Palette mode setting to use initially.</param>
            <param name="redirector">Redirector used for obtaining palette values.</param>
            <param name="needPaintDelegate">Delegate used to when paint changes occur.</param>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.FixedViewBase">
            <summary>
            Gets and sets the view to use as the fixed sub menu area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.OnDispose(System.EventArgs)">
            <summary>
            Fires the Dispose event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the Closing event.
            </summary>
            <param name="cea">An CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.OnClose(Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Fires the Close event.
            </summary>
            <param name="e">A CloseReasonEventArgs containing the event data.</param>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.HasParentProvider">
            <summary>
            Does this provider have a parent provider.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderEnabled">
            <summary>
            Is the entire context menu enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderCanCloseMenu">
            <summary>
            Is context menu capable of being closed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.ProviderShowSubMenuFixed(Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            Should the sub menu be shown at fixed screen location for this menu item.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>True if the sub menu should be a fixed size.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonMenuProvider.ProviderShowSubMenuFixedRect(Krypton.Toolkit.KryptonContextMenuItem)">
            <summary>
            The rectangle used for showing a fixed location for the sub menu.
            </summary>
            <param name="menuItem">Menu item that needs to show sub menu.</param>
            <returns>Screen rectangle to use as display rectangle.</returns>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderCloseReason">
            <summary>
            Sets the reason for the context menu being closed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderShowHorz">
            <summary>
            Gets and sets the horizontal setting used to position the menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderShowVert">
            <summary>
            Gets and sets the vertical setting used to position the menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderViewColumns">
            <summary>
            Gets access to the layout for context menu columns.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderViewManager">
            <summary>
            Gets access to the context menu specific view manager.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderStateCommon">
            <summary>
            Gets access to the context menu common state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderStateDisabled">
            <summary>
            Gets access to the context menu disabled state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderStateNormal">
            <summary>
            Gets access to the context menu normal state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderStateHighlight">
            <summary>
            Gets access to the context menu highlight state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderStateChecked">
            <summary>
            Gets access to the context menu checked state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderImages">
            <summary>
            Gets access to the context menu images.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderPalette">
            <summary>
            Gets access to the custom palette.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderPaletteMode">
            <summary>
            Gets access to the palette mode.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderRedirector">
            <summary>
            Gets access to the context menu redirector.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonMenuProvider.ProviderNeedPaintDelegate">
            <summary>
            Gets a delegate used to indicate a repaint is required.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.CalculatedValues">
            <summary>
            Set of calculated values for use when laying out view elements.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CalculatedValues.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the CalculatedValues class.
            </summary>
            <param name="ribbon">Source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.CalculatedValues.Recalculate">
            <summary>
            Recalculate all the values.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.RawFontHeight">
            <summary>
            Gets the raw height of the ribbon font.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.DrawFontHeight">
            <summary>
            Gets the drawing height of the ribbon font.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.TabHeight">
            <summary>
            Gets the drawing height of a tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupTitleHeight">
            <summary>
            Gets the drawing height of the ribbon font.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupLineContentHeight">
            <summary>
            Gets the drawing height of the content for a group line.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupLineHeight">
            <summary>
            Gets the drawing height of one of the three group lines.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupLineGapHeight">
            <summary>
            Gets the spacing height between two group lines.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupTripleHeight">
            <summary>
            Gets the height of the triple height item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupHeight">
            <summary>
            Gets the drawing height of a group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.CalculatedValues.GroupsHeight">
            <summary>
            Gets the drawing height of the entire groups area not including top pixel line.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.CalculatedValues.KeyTipRectToPoint(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Find the correct screen point for a key tip given a rectangle and its group line.
            </summary>
            <param name="viewRect">Screen rectangle of the view element.</param>
            <param name="groupLine">Group line the view is positioned on.</param>
            <returns>Screen point that is the center of the key tip.</returns>
        </member>
        <member name="T:Krypton.Ribbon.IQuickAccessToolbarButton">
            <summary>
            Information needed for a quick access toolbar entry.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.IQuickAccessToolbarButton.Click">
            <summary>
            Occurs when the quick access toolbar button has been clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.IQuickAccessToolbarButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.SetRibbon(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Provides a back reference to the owning ribbon control instance.
            </summary>
            <param name="ribbon">Reference to owning instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetImage">
            <summary>
            Gets the entry image.
            </summary>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetText">
            <summary>
            Gets the entry text.
            </summary>
            <returns>Text value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetEnabled">
            <summary>
            Gets the entry enabled state.
            </summary>
            <returns>Enabled value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetShortcutKeys">
            <summary>
            Gets the entry shortcut keys state.
            </summary>
            <returns>ShortcutKeys value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetVisible">
            <summary>
            Gets the entry visible state.
            </summary>
            <returns>Visible value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.SetVisible(System.Boolean)">
            <summary>
            Sets a new value for the visible state.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetToolTipStyle">
            <summary>
            Gets the tooltip label style.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetToolTipImage">
            <summary>
            Gets the image for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetToolTipImageTransparentColor">
            <summary>
            Gets the color to draw as transparent in the ToolTipImage.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetToolTipTitle">
            <summary>
            Gets the title text for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.GetToolTipBody">
            <summary>
            Gets the body text for the item ToolTip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IQuickAccessToolbarButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.IRibbonGroupItem">
            <summary>
            Information for a ribbon group item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.Ribbon">
            <summary>
            Gets and sets the owning ribbon control instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.RibbonTab">
            <summary>
            Gets and sets the owning ribbon tab instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.RibbonContainer">
            <summary>
            Gets and sets the owning ribbon container instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.Visible">
            <summary>
            Gets the visible state of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonGroupItem.ItemGap(Krypton.Ribbon.IRibbonGroupItem)">
            <summary>
            Return the spacing gap between the provided previous item and this item.
            </summary>
            <param name="previousItem">Previous item.</param>
            <returns>Pixel gap between previous item and this item.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonGroupItem.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.IRibbonGroupItem.ToolTipValues">
            <summary>
            Return base objects tooltip
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.IRibbonGroupContainer">
            <summary>
            Information for a ribbon group container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonGroupContainer.GetChildComponents">
            <summary>
            Gets an array of all the child components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupItemView.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets an array of the allowed possible sizes of the container.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth)">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Value for the container.</param>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.ResetSolutionSize">
            <summary>
            Reset the container back to its requested size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetLastFocusItem">
            <summary>
            Gets the last focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupContainerView.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupSize.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Get an array of available widths for the group with associated sizing values.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonViewGroupSize.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth[])">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Array of values for the group containers.</param>
        </member>
        <member name="M:Krypton.Ribbon.IRibbonKeyTipTarget.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.GroupItemSize">
            <summary>
            Specifies the size of a group item or container.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupItemSize.Small">
            <summary>
            Specifies a group item display in its smallest display state.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupItemSize.Medium">
            <summary>
            Specifies a group item display in its medium display state.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupItemSize.Large">
            <summary>
            Specifies a group item display in its largest display state.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.GroupItemSizeSM">
            <summary>
            Specifies the size of a group item or container but restricted to just small or medium.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupItemSizeSM.Small">
            <summary>
            Specifies a group item display in its smallest display state.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupItemSizeSM.Medium">
            <summary>
            Specifies a group item display in its medium display state.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.GroupButtonType">
            <summary>
            Specifies the type of operation for a group button.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupButtonType.Push">
            <summary>
            Specifies a simple push button operation.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupButtonType.Check">
            <summary>
            Specifies a check button that toggles between checked and not checked.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupButtonType.DropDown">
            <summary>
            Specifies a button that when pressed shows a drop down.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.GroupButtonType.Split">
            <summary>
            Specifies a button that is split between push area and drop down area.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.QATLocation">
            <summary>
            Specifies the location of the quick access toolbar.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.QATLocation.Above">
            <summary>
            Specifies the quick access toolbar is above the ribbon.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.QATLocation.Below">
            <summary>
            Specifies the quick access toolbar is below the ribbon.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.QATLocation.Hidden">
            <summary>
            Specifies the quick access toolbar is hidden from view.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.KeyTipMode.Root">
            <summary>
            Specifies the key tips are for root items.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.KeyTipMode.SelectedGroups">
            <summary>
            Specifies the key tips are for the selected tabs groups.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.KeyTipMode.PopupGroup">
            <summary>
            Specifies the key tips are for a popup group.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.KeyTipMode.PopupQATOverflow">
            <summary>
            Specifies the key tips are for a popup QAT overflow.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.KeyTipMode.PopupMinimized">
            <summary>
            Specifies the key tips are for a minimized mode popup.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.RibbonItemAlignment">
            <summary>
            Specifies how items are aligned within a ribbon container.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.RibbonItemAlignment.Near">
            <summary>
            Specifies all items are aligned to the near edge.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.RibbonItemAlignment.Center">
            <summary>
            Specifies all items are centered.
            </summary>
        </member>
        <member name="F:Krypton.Ribbon.RibbonItemAlignment.Far">
            <summary>
            Specifies all items are aligned to the far edge.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ClickAndFinishHandler">
            <summary>
            Signature of a click event that expects the provided finish delegate to be called when associated actions are completed.
            </summary>
            <param name="sender">Event source.</param>
            <param name="clickFinished">Delegate for finish notication.</param>
        </member>
        <member name="P:Krypton.Ribbon.DesignTimeDraw.FlapWidth">
            <summary>
            Gets the width of the design time flap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.DesignTimeDraw.SepWidth">
            <summary>
            Gets the width of the design time separation.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.DesignTimeDraw.DrawArea(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a design area with a flap on the left hand edge.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="context">Rendering context.</param>
            <param name="clientRect">Client rectangle of the source view.</param>
            <param name="state">State of element.</param>
        </member>
        <member name="M:Krypton.Ribbon.DesignTimeDraw.DrawFlapArea(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.RenderContext,System.Drawing.Rectangle,Krypton.Toolkit.PaletteState)">
            <summary>
            Draw a design area with a flap on the left hand edge.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="context">Rendering context.</param>
            <param name="clientRect">Client rectangle of the source view.</param>
            <param name="state">State of element.</param>
        </member>
        <member name="M:Krypton.Ribbon.ItemSizeWidth.#ctor(Krypton.Ribbon.GroupItemSize,System.Int32)">
            <summary>
            Initialize a new instance of the ItemSizeWidth class.
            </summary>
            <param name="itemSize">Group item size.</param>
            <param name="width">Width associated with the item size.</param>
        </member>
        <member name="M:Krypton.Ribbon.ItemSizeWidth.#ctor(Krypton.Ribbon.GroupItemSize,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of the ItemSizeWidth class.
            </summary>
            <param name="itemSize">Group item size.</param>
            <param name="width">Width associated with the item size.</param>
            <param name="tag">Source specific tag information.</param>
        </member>
        <member name="P:Krypton.Ribbon.ItemSizeWidth.GroupItemSize">
            <summary>
            Gets and sets the item size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ItemSizeWidth.Width">
            <summary>
            Gets and sets the item width.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ItemSizeWidth.Tag">
            <summary>
            Gets and sets the item tag.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.GroupSizeWidth.#ctor(System.Int32,Krypton.Ribbon.ItemSizeWidth[])">
            <summary>
            Initialize a new instance of the GroupSizeWidth class.
            </summary>
            <param name="width">Width available for sizing a group.</param>
            <param name="sizing">Sizing information for applying to group.</param>
        </member>
        <member name="P:Krypton.Ribbon.GroupSizeWidth.Width">
            <summary>
            Gets and sets the item width.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.GroupSizeWidth.Sizing">
            <summary>
            Gets and sets the array of sizing information for group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipInfo.#ctor(System.Boolean,System.String,System.Drawing.Point,System.Drawing.Rectangle,Krypton.Ribbon.IRibbonKeyTipTarget)">
            <summary>
            Initialize a new instance of the KeyTipInfo class.
            </summary>
            <param name="enabled">Enabled state of the item.</param>
            <param name="keyString">String of characters used to activate item.</param>
            <param name="screenPt">Screen coordinate for center of keytip.</param>
            <param name="clientRect">Client rectangle for keytip.</param>
            <param name="target">Target to invoke when item is selected.</param>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipInfo.Enabled">
            <summary>
            Gets the enabled state of the source item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipInfo.Visible">
            <summary>
            Gets and sets the visible state of the key tip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipInfo.KeyString">
            <summary>
            Gets the string used to select the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipInfo.ScreenPt">
            <summary>
            Gets the center screen location for showing the keytip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KeyTipInfo.ClientRect">
            <summary>
            Gets the client rectangle for showing the keytip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KeyTipInfo.KeyTipSelect(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Perform actual selection of the item.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupButton">
            <summary>
            Represents a ribbon group button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupButton.Click">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupButton.DropDown">
            <summary>
            Occurs when the drop down button type is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupButton.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ImageSmall">
            <summary>
            Gets and sets the small button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ImageLarge">
            <summary>
            Gets and sets the large button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.TextLine1">
            <summary>
            Gets and sets the display text line 1 for the button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.Visible">
            <summary>
            Gets and sets the visible state of the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.Enabled">
            <summary>
            Gets and sets the enabled state of the group entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.Checked">
            <summary>
            Gets and sets the checked state of the group entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ButtonType">
            <summary>
            Gets and sets the operation of the group button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ContextMenuStrip">
            <summary>
            Gets and sets the context strip for showing when the button is pressed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the button is pressed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.PerformDropDown">
            <summary>
            Generates a DropDown event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.PerformDropDown(System.EventHandler)">
            <summary>
            Generates a DropDown event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButton.ButtonView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.OnDropDown(System.EventHandler)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupCheckBox">
            <summary>
            Represents a ribbon group check box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Click">
            <summary>
            Occurs when the check box is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCheckBox.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCheckBox.CheckStateChanged">
            <summary>
            Occurs when the value of the CheckState property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCheckBox.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCheckBox.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupCheckBox class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.TextLine1">
            <summary>
            Gets and sets the display text line 1 for the check box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the check box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group check box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Visible">
            <summary>
            Gets and sets the visible state of the check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Enabled">
            <summary>
            Gets and sets the enabled state of the group check box entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.CheckState">
            <summary>
            Gets and sets the checked state of the group entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.Checked">
            <summary>
            Gets or sets a value indicating if the check box is in the checked state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.AutoCheck">
            <summary>
            Gets or sets a value indicating if the check box is automatically changed state when clicked. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ThreeState">
            <summary>
            Gets or sets a value indicating if the check box allows three states instead of two.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.PerformClick">
            <summary>
            Generates a Click event for a check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a check box.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBox.CheckBoxView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the CheckStateChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBox.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupCluster">
            <summary>
            Represents a ribbon group container that displays a cluster of buttons.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCluster.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCluster.DesignTimeAddButton">
            <summary>
            Occurs when the design time wants to add a button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCluster.DesignTimeAddColorButton">
            <summary>
            Occurs when the design time wants to add a color button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCluster.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupCluster class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.RibbonTab">
            <summary>
            Gets access to the owning ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.Visible">
            <summary>
            Gets and sets the visible state of the button cluster container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.ItemGap(Krypton.Ribbon.IRibbonGroupItem)">
            <summary>
            Return the spacing gap between the provided previous item and this item.
            </summary>
            <param name="previousItem">Previous item.</param>
            <returns>Pixel gap between previous item and this item.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.Items">
            <summary>
            Gets the collection of ribbon group button cluster items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.GetChildComponents">
            <summary>
            Gets an array of all the contained components.
            </summary>
            <returns>Array of child components.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCluster.ClusterView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCluster.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupClusterButton">
            <summary>
            Represents a ribbon group cluster button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Click">
            <summary>
            Occurs when the button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterButton.DropDown">
            <summary>
            Occurs when the drop down button type is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterButton.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupClusterButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.TextLine">
            <summary>
            Gets and sets the display text line for the button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group cluster button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ImageSmall">
            <summary>
            Gets and sets the small button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Visible">
            <summary>
            Gets and sets the visible state of the cluster button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Enabled">
            <summary>
            Gets and sets the enabled state of the group entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.Checked">
            <summary>
            Gets and sets the checked state of the group entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ButtonType">
            <summary>
            Gets and sets the operation of the group button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ContextMenuStrip">
            <summary>
            Gets and sets the context strip for showing when the button is pressed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the button is pressed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.PerformDropDown">
            <summary>
            Generates a DropDown event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.PerformDropDown(System.EventHandler)">
            <summary>
            Generates a DropDown event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButton.ClusterButtonView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.OnDropDown(System.EventHandler)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupClusterCollection">
            <summary>
            Manage the items that can be added to a ribbon group button cluster container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton">
            <summary>
            Represents a ribbon group cluster color button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Click">
            <summary>
            Occurs when the color button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.DropDown">
            <summary>
            Occurs when the drop down color button type is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.SelectedColorChanged">
            <summary>
            Occurs when the SelectedColor property changes value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.TrackingColor">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.MoreColors">
            <summary>
            Occurs when the user selects the more colors option.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupClusterColorButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.SelectedColor">
            <summary>
            Gets and sets the selected color.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.EmptyBorderColor">
            <summary>
            Gets and sets the selected color block when selected color is empty.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.SelectedRect">
            <summary>
            Gets and sets the selected color drawing rectangle.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.TextLine">
            <summary>
            Gets and sets the display text line for the color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group cluster color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ImageSmall">
            <summary>
            Gets and sets the small color button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.MaxRecentColors">
            <summary>
            Gets and sets the maximum number of recent colors to store and display.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.VisibleThemes">
            <summary>
            Gets and sets the visible state of the themes color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.VisibleStandard">
            <summary>
            Gets and sets the visible state of the standard color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.VisibleRecent">
            <summary>
            Gets and sets the visible state of the recent color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.VisibleNoColor">
            <summary>
            Gets and sets the visible state of the no color menu item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.VisibleMoreColors">
            <summary>
            Gets and sets the visible state of the more colors menu item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.AutoRecentColors">
            <summary>
            Gets and sets if the recent colors should be automatically updated.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.SchemeThemes">
            <summary>
            Gets and sets the color scheme for the themes color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.SchemeStandard">
            <summary>
            Gets and sets the color scheme for the standard color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Visible">
            <summary>
            Gets and sets the visible state of the cluster color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Show">
            <summary>
            Make the ribbon color button visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Hide">
            <summary>
            Make the ribbon color button hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Enabled">
            <summary>
            Gets and sets the enabled state of the group color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.Checked">
            <summary>
            Gets and sets the checked state of the group color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ButtonType">
            <summary>
            Gets and sets the operation of the group color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.RecentColors">
            <summary>
            Gets and sets the set of recent colors.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ClearRecentColors">
            <summary>
            Clear the recent colors setting.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.PerformDropDown">
            <summary>
            Generates a DropDown event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.PerformDropDown(System.EventHandler)">
            <summary>
            Generates a DropDown event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.ClusterColorButtonView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnDropDown(System.EventHandler)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnSelectedColorChanged(System.Drawing.Color)">
            <summary>
            Raises the SelectedColorChanged event.
            </summary>
            <param name="selectedColor">New selected color.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnTrackingColor(Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the TrackingColor event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnMoreColors(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the MoreColors event.
            </summary>
            <param name="e">An CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupColorButton">
            <summary>
            Represents a ribbon group color button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.Click">
            <summary>
            Occurs when the color button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.DropDown">
            <summary>
            Occurs when the drop down color button type is pressed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.SelectedColorChanged">
            <summary>
            Occurs when the SelectedColor property changes value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.TrackingColor">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.MoreColors">
            <summary>
            Occurs when the user selects the more colors option.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupColorButton.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupColorButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.SelectedColor">
            <summary>
            Gets and sets the selected color.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.EmptyBorderColor">
            <summary>
            Gets and sets the selected color block when selected color is empty.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.SelectedRectSmall">
            <summary>
            Gets and sets the selected color drawing rectangle when small.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.SelectedRectLarge">
            <summary>
            Gets and sets the selected color drawing rectangle when large.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ImageSmall">
            <summary>
            Gets and sets the small color button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ImageLarge">
            <summary>
            Gets and sets the large color button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.TextLine1">
            <summary>
            Gets and sets the display text line 1 for color  button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.MaxRecentColors">
            <summary>
            Gets and sets the maximum number of recent colors to store and display.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.VisibleThemes">
            <summary>
            Gets and sets the visible state of the themes color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.VisibleStandard">
            <summary>
            Gets and sets the visible state of the standard color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.VisibleRecent">
            <summary>
            Gets and sets the visible state of the recent color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.VisibleNoColor">
            <summary>
            Gets and sets the visible state of the no color menu item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.VisibleMoreColors">
            <summary>
            Gets and sets the visible state of the more colors menu item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.AutoRecentColors">
            <summary>
            Gets and sets if the recent colors should be automatically updated.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.SchemeThemes">
            <summary>
            Gets and sets the color scheme for the themes color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.SchemeStandard">
            <summary>
            Gets and sets the color scheme for the standard color set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.Visible">
            <summary>
            Gets and sets the visible state of the color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.Show">
            <summary>
            Make the ribbon color button visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.Hide">
            <summary>
            Make the ribbon color button hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.Enabled">
            <summary>
            Gets and sets the enabled state of the color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.Checked">
            <summary>
            Gets and sets the checked state of the group button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ButtonType">
            <summary>
            Gets and sets the operation of the group color button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.RecentColors">
            <summary>
            Gets and sets the set of recent colors.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.ClearRecentColors">
            <summary>
            Clear the recent colors setting.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.PerformDropDown">
            <summary>
            Generates a DropDown event for a button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.PerformDropDown(System.EventHandler)">
            <summary>
            Generates a DropDown event for a button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButton.ColorButtonView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnDropDown(System.EventHandler)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnSelectedColorChanged(System.Drawing.Color)">
            <summary>
            Raises the SelectedColorChanged event.
            </summary>
            <param name="selectedColor">New selected color.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnTrackingColor(Krypton.Toolkit.ColorEventArgs)">
            <summary>
            Raises the TrackingColor event.
            </summary>
            <param name="e">An ColorEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnMoreColors(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the MoreColors event.
            </summary>
            <param name="e">An CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupComboBox">
            <summary>
            Represents a ribbon group combo box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDown">
            <summary>
            Occurs when the drop-down portion of the KryptonComboBox is shown.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDownClosed">
            <summary>
            Indicates that the drop-down portion of the KryptonComboBox has closed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDownStyleChanged">
            <summary>
            Occurs when the value of the DropDownStyle property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectionChangeCommitted">
            <summary>
            Occurs when an item is chosen from the drop-down list and the drop-down list is closed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DataSourceChanged">
            <summary>
            Occurs when the value of the DataSource property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DisplayMemberChanged">
            <summary>
            Occurs when the value of the DisplayMember property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.Format">
            <summary>
            Occurs when the list format has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormatInfoChanged">
            <summary>
            Occurs when the value of the FormatInfo property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormatStringChanged">
            <summary>
            Occurs when the value of the FormatString property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormattingEnabledChanged">
            <summary>
            Occurs when the value of the FormattingEnabled property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedValueChanged">
            <summary>
            Occurs when the value of the SelectedValue property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.ValueMemberChanged">
            <summary>
            Occurs when the value of the ValueMember property changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.TextUpdate">
            <summary>
            Occurs when the KryptonComboBox text has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupComboBox.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupComboBox class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ComboBox">
            <summary>
            Access to the actual embedded KryptonComboBox instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Visible">
            <summary>
            Gets and sets the visible state of the rich text.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Enabled">
            <summary>
            Gets and sets the enabled state of the group combo box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the combobox is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ValueMember">
            <summary>
            Gets and sets the value member.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DataSource">
            <summary>
            Gets and sets the list that this control will use to gets its items.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DisplayMember">
            <summary>
            Gets and sets the property to display for the items in this control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDownStyle">
            <summary>
            Gets and sets the appearance and functionality of the KryptonComboBox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDownHeight">
            <summary>
            Gets and sets the height, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DropDownWidth">
            <summary>
            Gets and sets the width, in pixels, of the drop down box in a KryptonComboBox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ItemHeight">
            <summary>
            Gets and sets the height, in pixels, of items in an owner-draw KryptomComboBox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.MaxDropDownItems">
            <summary>
            Gets and sets the maximum number of entries to display in the drop-down list.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Sorted">
            <summary>
            Gets or sets whether the items in the list portion of the KryptonComboBox are sorted.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.Items">
            <summary>
            Gets or sets the items in the KryptonComboBox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the StringCollection to use when the AutoCompleteSource property is set to CustomSource.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.AutoCompleteMode">
            <summary>
            Gets or sets the text completion behavior of the combobox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.AutoCompleteSource">
            <summary>
            Gets or sets the autocomplete source, which can be one of the values from AutoCompleteSource enumeration.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormatString">
            <summary>
            Gets or sets the format specifier characters that indicate how a value is to be Displayed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormattingEnabled">
            <summary>
            Gets or sets if this property is true, the value of FormatString is used to convert the value of DisplayMember into a value that can be Displayed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.FormatInfo">
            <summary>
            Gets and sets the formatting provider.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectionLength">
            <summary>
            Gets and sets the number of characters selected in the editable portion of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectionStart">
            <summary>
            Gets and sets the starting index of selected text in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedItem">
            <summary>
            Gets and sets the selected item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedText">
            <summary>
            Gets and sets the text that is selected in the editable portion of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedIndex">
            <summary>
            Gets and sets the selected index.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectedValue">
            <summary>
            Gets and sets the selected value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.DroppedDown">
            <summary>
            Gets and sets a value indicating whether the control is displaying its drop-down portion.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.FindString(System.String)">
            <summary>
            Finds the first item in the combo box that starts with the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item after the given index which starts with the given string. The search is not case sensitive.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.FindStringExact(System.String)">
            <summary>
            Finds the first item in the combo box that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.FindStringExact(System.String,System.Int32)">
            <summary>
            Finds the first item after the specified index that matches the specified string.
            </summary>
            <param name="str">The String to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found, or 0 if the s parameter specifies Empty.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.GetItemHeight(System.Int32)">
            <summary>
            Returns the height of an item in the ComboBox.
            </summary>
            <param name="index">The index of the item to return the height of.</param>
            <returns>The height, in pixels, of the item at the specified index.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.GetItemText(System.Object)">
            <summary>
            Returns the text representation of the specified item.
            </summary>
            <param name="item">The object from which to get the contents to display.</param>
            <returns>If the DisplayMember property is not specified, the value returned by GetItemText is the value of the item's ToString method. Otherwise, the method returns the string value of the member specified in the DisplayMember property for the object specified in the item parameter.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ComboBoxDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBox.ComboBoxView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnTextUpdate(System.EventArgs)">
            <summary>
            Raises the TextUpdate event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnSelectionChangeCommitted(System.EventArgs)">
            <summary>
            Raises the SelectionChangeCommitted event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnDropDownStyleChanged(System.EventArgs)">
            <summary>
            Raises the DropDownStyleChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the DataSourceChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnDisplayMemberChanged(System.EventArgs)">
            <summary>
            Raises the DisplayMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnFormat(System.EventArgs)">
            <summary>
            Raises the Format event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnFormatInfoChanged(System.EventArgs)">
            <summary>
            Raises the FormatInfoChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnFormatStringChanged(System.EventArgs)">
            <summary>
            Raises the FormatStringChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnFormattingEnabledChanged(System.EventArgs)">
            <summary>
            Raises the FormattingEnabledChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnValueMemberChanged(System.EventArgs)">
            <summary>
            Raises the ValueMemberChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnDropDownClosed(System.EventArgs)">
            <summary>
            Raises the DropDownClosed event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBox.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupContainer">
            <summary>
            Represents the base class for all ribbon group containers.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupContainer.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupContainer class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupContainer.RibbonGroup">
            <summary>
            Gets access to the parent group instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupContainer.GetChildComponents">
            <summary>
            Gets an array of all the contained components.
            </summary>
            <returns>Array of child components.</returns>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupContainerCollection">
            <summary>
            Manage the items that can be added to the top level of a ribbon group instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupContainerCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupCustomControl">
            <summary>
            Represents a ribbon group custom control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCustomControl.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupCustomControl.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupCustom class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group custom control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.CustomControl">
            <summary>
            Gets and sets the custom control for display inside ribbon element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.Enabled">
            <summary>
            Gets and sets the enabled state of the custom control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.Visible">
            <summary>
            Gets and sets the visible state of the custom control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.CustomControlDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControl.CustomControlView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControl.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker">
            <summary>
            Represents a ribbon group date time picker.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ValueChanged">
            <summary>
            Occurs when the Value property has changed value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ValueNullableChanged">
            <summary>
            Occurs when the ValueNullable property has changed value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DropDown">
            <summary>
            Occurs when the drop down is shown.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CloseUp">
            <summary>
            Occurs when the drop down has been closed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CheckedChanged">
            <summary>
            Occurs when the Checked property has changed value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.FormatChanged">
            <summary>
            Occurs when the Format property has changed value.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupDateTimePicker class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DateTimePicker">
            <summary>
            Access to the actual embedded KryptonDateTimePicker instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group date time picker.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Visible">
            <summary>
            Gets and sets the visible state of the date time picker.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Show">
            <summary>
            Make the ribbon group date time picker visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Hide">
            <summary>
            Make the ribbon group date time picker hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Enabled">
            <summary>
            Gets and sets the enabled state of the group date time picker.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the date time picker is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months Displayed. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarTodayText">
            <summary>
            Gets or sets the label text for todays text. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarFirstDayOfWeek">
            <summary>
            First day of the week.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarCloseOnTodayClick">
            <summary>
            Gets and sets if clicking the Today button closes the drop down menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarShowToday">
            <summary>
            Gets and sets if the control will display todays date.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarShowTodayCircle">
            <summary>
            Gets and sets if the control will circle the today date.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarShowWeekNumbers">
            <summary>
            Gets and sets if week numbers to the left of each row.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarTodayDate">
            <summary>
            Gets or sets today's date.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarAnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual days are Displayed in bold.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarMonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring dates are Displayed in bold.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DropDownAlign">
            <summary>
            Gets or sets the alignment of the drop-down calendar on the DateTimePicker control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ValueNullable">
            <summary>
            Gets or sets the date/time value assigned to the control that can be null.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control..
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Format">
            <summary>
            Gets or sets the format of the date and time Displayed in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether a spin button control (also known as an up-down control) is used to adjust the date/time value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ShowCheckBox">
            <summary>
            Specifies whether to show the check box in the exception message box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.UseMnemonic">
            <summary>
            Gets or sets a value indicating whether mnemonics will fire button spec buttons.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.MaxDate">
            <summary>
            Gets or sets the maximum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.MinDate">
            <summary>
            Gets or sets the minimum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.Checked">
            <summary>
            Gets or sets a value indicating if the check box is checked and if the ValueNullable is DBNull or a DateTime value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CustomNullText">
            <summary>
            Gets or sets the custom text to show when control is not checked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarTodayFormat">
            <summary>
            Gets or sets the today date format string.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarHeaderStyle">
            <summary>
            Gets and sets the header style for the month calendar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarDayStyle">
            <summary>
            Gets and sets the content style for the day entries.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CalendarDayOfWeekStyle">
            <summary>
            Gets and sets the content style for the day of week labels.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DateTimePickerDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.DateTimePickerView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnFormatChanged(System.EventArgs)">
            <summary>
            Raises the FormatChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnCloseUp(Krypton.Toolkit.DateTimePickerCloseArgs)">
            <summary>
            Raises the CloseUp event.
            </summary>
            <param name="e">An DateTimePickerCloseArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnDropDown(Krypton.Toolkit.DateTimePickerDropArgs)">
            <summary>
            Raises the DropDown event.
            </summary>
            <param name="e">An DateTimePickerDropArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnValueNullableChanged(System.EventArgs)">
            <summary>
            Raises the ValueNullableChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePicker.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown">
            <summary>
            Represents a ribbon group domain up-down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.SelectedItemChanged">
            <summary>
            Occurs when the value of the SelectedItem property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Scroll">
            <summary>
            Occurs when the user scrolls the scroll box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.TextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupDomainUpDown class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.SelectedIndex">
            <summary>
            Gets or sets the index value of the selected item. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.SelectedItem">
            <summary>
            Gets or sets the selected item based on the index value of the selected item in the collection.  
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Items">
            <summary>
            Gets or the collection of allowable items of the domain up down.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.DomainUpDown">
            <summary>
            Access to the actual embedded KryptonDomainUpDown instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Sorted">
            <summary>
            Gets or sets a value indicating whether the item collection is sorted.   
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group domain up-down.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.UpDownAlign">
            <summary>
            Gets or sets how the up-down control will position the up down buttons relative to its text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.InterceptArrowKeys">
            <summary>
            Gets or sets whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW are used.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Visible">
            <summary>
            Gets and sets the visible state of the domain up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Show">
            <summary>
            Make the ribbon group domain up-down visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Hide">
            <summary>
            Make the ribbon group domain up-down hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Enabled">
            <summary>
            Gets and sets the enabled state of the group domain up-down.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the domain up down is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.DomainUpDownDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.DomainUpDownView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnSelectedItemChanged(System.EventArgs)">
            <summary>
            Raises the SelectedItemChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the SelectedItemChanged event.
            </summary>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDown.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupGallery">
            <summary>
            Represents a ribbon group separator.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.ImageListChanged">
            <summary>
            Occurs when the value of the ImageList property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.SelectedIndexChanged">
            <summary>
            Occurs when the value of the SelectedIndex property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.TrackingImage">
            <summary>
            Occurs when the user is tracking over a color.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.GalleryDropMenu">
            <summary>
            Occurs when the user invokes the drop down menu.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupGallery.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupGallery class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.Gallery">
            <summary>
            Access to the actual embedded KryptonGallery instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.DropButtonRanges">
            <summary>
            Gets the collection of drop down ranges.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.SmoothScrolling">
            <summary>
            Gets and sets if scrolling is animated or a jump straight to target..
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ImageList">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.SelectedIndex">
            <summary>
            Gets access to the collection of images for display and selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.LargeItemCount">
            <summary>
            Gets and sets the number of horizontal items when in large setting.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.MediumItemCount">
            <summary>
            Gets and sets the number of horizontal items when in medium setting.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.DropButtonItemWidth">
            <summary>
            Gets and sets the number of horizontal Displayed items when showing drop menu from the large button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.DropMaxItemWidth">
            <summary>
            Gets and sets the maximum number of lines items for the drop down menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.DropMinItemWidth">
            <summary>
            Gets and sets the minimum number of lines items for the drop down menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the gallery is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group gallery.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ImageLarge">
            <summary>
            Gets and sets the large button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.TextLine1">
            <summary>
            Gets and sets the display gallery text line 1 for the button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.TextLine2">
            <summary>
            Gets and sets the display gallery text line 2 for the button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.Visible">
            <summary>
            Gets and sets the visible state of the group gallery.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.Show">
            <summary>
            Make the ribbon group gallery visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.Hide">
            <summary>
            Make the ribbon group gallery hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.Enabled">
            <summary>
            Gets and sets the enabled state of the group gallery.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.MaximumSize">
            <summary>
            Gets and sets the maximum allowed size of the gallery.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.MinimumSize">
            <summary>
            Gets and sets the minimum allowed size of the gallery.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.GalleryDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGallery.GalleryView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnImageListChanged(System.EventArgs)">
            <summary>
            Raises the ImageListChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnTrackingImage(Krypton.Toolkit.ImageSelectEventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An ImageSelectEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnGalleryDropMenu(Krypton.Ribbon.GalleryDropMenuEventArgs)">
            <summary>
            Raises the GalleryDropMenu event.
            </summary>
            <param name="e">An GalleryDropMenuEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGallery.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupItem">
            <summary>
            Represents the base class for all ribbon group items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupItem.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupItem class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.RibbonTab">
            <summary>
            Gets access to the owning ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.RibbonContainer">
            <summary>
            Gets and sets the owning ribbon container instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.Visible">
            <summary>
            Gets the visible state of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupItem.ItemGap(Krypton.Ribbon.IRibbonGroupItem)">
            <summary>
            Return the spacing gap between the provided previous item and this item.
            </summary>
            <param name="previousItem">Previous item.</param>
            <returns>Pixel gap between previous item and this item.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupItem.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.Tag">
            <summary>
            Gets and sets user-defined data associated with the object.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupItem.ResetToolTipValues">
            <summary>
            Resets the ToolTipValues property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.ChainVisible">
            <summary>
            Get a value indicating if all parent containers are visible.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.BindingContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupItem.DataBindings">
            <summary>
                Retrieves the bindings for this control.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupLabel">
            <summary>
            Represents a ribbon group label.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLabel.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLabel.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupLabel class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ImageSmall">
            <summary>
            Gets and sets the small label image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ImageLarge">
            <summary>
            Gets and sets the large label image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.TextLine1">
            <summary>
            Gets and sets the display text line 1 for the label.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the label.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.Visible">
            <summary>
            Gets and sets the visible state of the label.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.Enabled">
            <summary>
            Gets and sets the enabled state of the group label.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.StateNormal">
            <summary>
            Gets access to the label text normal appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.StateDisabled">
            <summary>
            Gets access to the label text disabled appearance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.KryptonCommand">
            <summary>
            Gets and sets the associated KryptonCommand.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabel.LabelView">
            <summary>
            Internal design time property.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.OnCommandPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a change in the property of an attached command.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">A PropertyChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabel.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupLines">
            <summary>
            Represents a ribbon group container that displays as lines of items.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddButton">
            <summary>
            Occurs when the design time wants to add a button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddColorButton">
            <summary>
            Occurs when the design time wants to add a color button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddCheckBox">
            <summary>
            Occurs when the design time wants to add a check box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddRadioButton">
            <summary>
            Occurs when the design time wants to add a radoi button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddLabel">
            <summary>
            Occurs when the design time wants to add a label.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddCustomControl">
            <summary>
            Occurs when the design time wants to add a custom control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddCluster">
            <summary>
            Occurs when the design time wants to add a cluster.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddTextBox">
            <summary>
            Occurs when the design time wants to add a text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddMaskedTextBox">
            <summary>
            Occurs when the design time wants to add a masked text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddRichTextBox">
            <summary>
            Occurs when the design time wants to add a rich text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddComboBox">
            <summary>
            Occurs when the design time wants to add a combobox.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddNumericUpDown">
            <summary>
            Occurs when the design time wants to add a numeric up down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddDomainUpDown">
            <summary>
            Occurs when the design time wants to add a domain up down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddDateTimePicker">
            <summary>
            Occurs when the design time wants to add a date time picker.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeAddTrackBar">
            <summary>
            Occurs when the design time wants to add a track bar.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupLines.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupLines class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.RibbonTab">
            <summary>
            Gets access to the owning ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.Visible">
            <summary>
            Gets and sets the visible state of the lines group container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.MaximumSize">
            <summary>
            Gets and sets the maximum allowed size of the container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.MinimumSize">
            <summary>
            Gets and sets the minimum allowed size of the container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.Items">
            <summary>
            Gets the collection of ribbon group line items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.GetChildComponents">
            <summary>
            Gets an array of all the contained components.
            </summary>
            <returns>Array of child components.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLines.LinesView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLines.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupLinesCollection">
            <summary>
            Manage the items that can be added to a ribbon group lines container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLinesCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox">
            <summary>
            Represents a ribbon group masked text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TextAlignChanged">
            <summary>
            Occurs when the value of the TextAlign property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskChanged">
            <summary>
            Occurs when the value of the Mask property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.IsOverwriteModeChanged">
            <summary>
            Occurs when the value of the IsOverwriteMode property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskInputRejected">
            <summary>
            Occurs when the input character or text does not comply with the mask specification.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TypeValidationCompleted">
            <summary>
            Occurs when the validating type object has completed parsing the input text.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupMaskedTextBox class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskedTextBox">
            <summary>
            Access to the actual embedded KryptonMaskedTextBox instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group masked text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Visible">
            <summary>
            Gets and sets the visible state of the masked text box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Show">
            <summary>
            Make the ribbon group masked text box visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Hide">
            <summary>
            Make the ribbon group masked text box hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Enabled">
            <summary>
            Gets and sets the enabled state of the group masked text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.IsOverwriteMode">
            <summary>
            Gets a value that specifies whether new user input overwrites existing input.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskCompleted">
            <summary>
            Gets a value indicating whether all required inputs have been entered into the input mask.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskedTextProvider">
            <summary>
            Gets a clone of the mask provider associated with this instance of the masked text box control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskFull">
            <summary>
            Gets a value indicating whether all required and optional inputs have been entered into the input mask.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ValidatingType">
            <summary>
            Gets or sets the data type used to verify the data input by the user.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.PromptChar">
            <summary>
            Indicates the character used as the placeholder.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.AllowPromptAsInput">
            <summary>
            Gets or sets a value indicating whether PromptChar can be entered as valid data by the user.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.AsciiOnly">
            <summary>
            Gets or sets a value indicating whether the MaskedTextBox control accepts characters outside of the ASCII character set.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.BeepOnError">
            <summary>
            Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Culture">
            <summary>
            Gets or sets the culture information associated with the masked text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.CutCopyMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.HidePromptOnLeave">
            <summary>
            Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.InsertKeyMode">
            <summary>
            Gets or sets the text insertion mode of the masked text box control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.Mask">
            <summary>
            Gets or sets the input mask to use at run time. 
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.RejectInputOnFirstFailure">
            <summary>
            Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ResetOnPrompt">
            <summary>
            Gets or sets a value that determines how an input character that matches the prompt character should be handled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ResetOnSpace">
            <summary>
            Gets or sets a value that determines how a space input character should be handled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.SkipLiterals">
            <summary>
            Gets or sets a value indicating whether the user is allowed to reenter literal values.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.TextMaskFormat">
            <summary>
            Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.PasswordChar">
            <summary>
            Gets or sets a the character to display for password input for single-line edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating if the text in the edit control should appear as the default password character.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the masked textbox is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskedTextBoxDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.MaskedTextBoxView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnMaskChanged(System.EventArgs)">
            <summary>
            Raises the MaskChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Raises the TextAlignChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)">
            <summary>
            Raises the IsOverwriteModeChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnMaskInputRejected(System.Windows.Forms.MaskInputRejectedEventArgs)">
            <summary>
            Raises the MaskInputRejected event.
            </summary>
            <param name="e">An MaskInputRejectedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnTypeValidationCompleted(System.Windows.Forms.TypeValidationEventArgs)">
            <summary>
            Raises the TypeValidationCompleted event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown">
            <summary>
            Represents a ribbon group numeric up-down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupNumericUpDown class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.NumericUpDown">
            <summary>
            Access to the actual embedded KryptonNumericUpDown instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group numeric up-down.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places to display.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Increment">
            <summary>
            Gets or sets the amount to increment or decrement one each button click.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Maximum">
            <summary>
            Gets or sets the maximum value for the numeric up-down control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Minimum">
            <summary>
            Gets or sets the minimum value for the numeric up-down control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ThousandsSeparator">
            <summary>
            Gets or sets whether the thousands separator wil be inserted between each three decimal digits.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Value">
            <summary>
            Gets or sets the current value of the numeric up-down control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Hexadecimal">
            <summary>
            Gets or sets wheather the numeric up-down should display its value in hexadecimal.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.UpDownAlign">
            <summary>
            Gets or sets how the up-down control will position the up down buttons relative to its text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.InterceptArrowKeys">
            <summary>
            Gets or sets whether the up-down control will increment and decrement the value when the UP ARROW and DOWN ARROW are used.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Visible">
            <summary>
            Gets and sets the visible state of the numeric up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Show">
            <summary>
            Make the ribbon group numeric up-down visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Hide">
            <summary>
            Make the ribbon group numeric up-down hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Enabled">
            <summary>
            Gets and sets the enabled state of the group numeric up-down.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the numeric up down is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.NumericUpDownDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.NumericUpDownView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the ValueChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDown.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupRadioButton">
            <summary>
            Represents a ribbon group radio button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Click">
            <summary>
            Occurs when the radio button is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRadioButton.CheckedChanged">
            <summary>
            Occurs when the value of the Checked property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRadioButton.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRadioButton.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupRadioButton class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.TextLine1">
            <summary>
            Gets and sets the display text line 1 for the radio button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.TextLine2">
            <summary>
            Gets and sets the display text line 2 for the radio button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group radio button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Visible">
            <summary>
            Gets and sets the visible state of the radio button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Show">
            <summary>
            Make the ribbon group radio button visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Hide">
            <summary>
            Make the ribbon group radio button hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Enabled">
            <summary>
            Gets and sets the enabled state of the group radio button entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.Checked">
            <summary>
            Gets or sets a value indicating if the radio button is in the checked state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.AutoCheck">
            <summary>
            Gets or sets a value indicating if checking this radio button should unheck others in the same group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.PerformClick">
            <summary>
            Generates a Click event for a check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.PerformClick(System.EventHandler)">
            <summary>
            Generates a Click event for a radio button.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButton.RadioButtonView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.OnClick(System.EventHandler)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="finishDelegate">Delegate fired during event processing.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the CheckedChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButton.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupRichTextBox">
            <summary>
            Represents a ribbon group rich text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.TextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the value of the AcceptsTab property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.MultilineChanged">
            <summary>
            Occurs when the value of the Multiline property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionChanged">
            <summary>
            Occurs when the current selection has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Protected">
            <summary>
            Occurs when the user takes an action that would change a protected range of text.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LinkClicked">
            <summary>
            Occurs when a hyperlink in the text is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.HScroll">
            <summary>
            Occurs when the horizontal scroll bar is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.VScroll">
            <summary>
            Occurs when the vertical scroll bar is clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupRichTextBox class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RichTextBox">
            <summary>
            Access to the actual embedded KryptonRichTextBox instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group rich text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Visible">
            <summary>
            Gets and sets the visible state of the rich text box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Enabled">
            <summary>
            Gets and sets the enabled state of the group rich text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the rich text box is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Lines">
            <summary>
            Gets or sets the lines of text in a multiline edit, as an array of String values.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ScrollBars">
            <summary>
            Gets or sets, for multiline edit controls, which scroll bars will be shown for this control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.WordWrap">
            <summary>
            Indicates if lines are automatically word-wrapped for multiline edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RightMargin">
            <summary>
            Defines the right margin dimensions.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ShowSelectionMargin">
            <summary>
            Turns on/off the selection margin.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ZoomFactor">
            <summary>
            Defines the current scaling factor of the KryptonRichTextBox display; 1.0 is normal viewing.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Multiline">
            <summary>
            Gets and sets whether the text in the control can span more than one line.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AcceptsTab">
            <summary>
            Gets or sets a value indicating if tab characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AutoWordSelection">
            <summary>
            Turns on/off automatic word selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.BulletIndent">
            <summary>
            Defines the indent for bullets in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.DetectUrls">
            <summary>
            Indicates whether URLs are automatically formatted as links.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.EnableAutoDragDrop">
            <summary>
            Enable drag/drop of text, pictures and other data.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ShortcutsEnabled">
            <summary>
            Gets or sets a value indicating whether shortcuts defined for the control are enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.CanRedo">
            <summary>
            Gets and sets if the control can redo a previously undo operation.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in a rich text box control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LanguageOption">
            <summary>
            Gets and sets the language option.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RedoActionName">
            <summary>
            Gets and sets the name of the action to be redone.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.UndoActionName">
            <summary>
            Gets and sets the name of the action to be undone.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RichTextShortcutsEnabled">
            <summary>
            Gets and sets if keyboard shortcuts are enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Rtf">
            <summary>
            Gets and sets the text in rich text format.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectedRtf">
            <summary>
            Gets and sets the selection portion of the rich text format.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionAlignment">
            <summary>
            Gets and sets the alignment of the selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionBackColor">
            <summary>
            Gets and sets the background color of the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionBullet">
            <summary>
            Gets and sets the bullet indentation of the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionCharOffset">
            <summary>
            Gets and sets the character offset of the selection.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionColor">
            <summary>
            Gets and sets the text color of the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionFont">
            <summary>
            Gets and sets the text font for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionHangingIndent">
            <summary>
            Gets and sets the hanging indent for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionIndent">
            <summary>
            Gets and sets the indent for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionProtected">
            <summary>
            Gets and sets the protected setting for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionRightIndent">
            <summary>
            Gets and sets the right indent for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionTabs">
            <summary>
            Gets and sets the tab settings for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectionType">
            <summary>
            Gets and sets the type of selection.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a rich text box.
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ClearUndo">
            <summary>
            Clears information about the most recent operation from the undo buffer of the rich text box. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.DeselectAll">
            <summary>
            Specifies that the value of the SelectionLength property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Determines whether you can paste information from the Clipboard in the specified data format.
            </summary>
            <param name="clipFormat">One of the System.Windows.Forms.DataFormats.Format values.</param>
            <returns>true if you can paste data from the Clipboard in the specified data format; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.String)">
            <summary>
            Searches the text in a RichTextBox control for a string.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <returns>The location within the control where the search text was found or -1 if the search string is not found or an empty search string is specified in the str parameter.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.Char[])">
            <summary>
            Searches the text of a RichTextBox control for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <returns>The location within the control where the search characters were found or -1 if the search characters are not found or an empty search character set is specified in the char parameter.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.Char[],System.Int32)">
            <summary>
            Searches the text of a RichTextBox control, at a specific starting point, for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <returns>The location within the control where the search characters are found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.Char[],System.Int32,System.Int32)">
            <summary>
            Searches a range of text in a RichTextBox control for the first instance of a character from a list of characters.
            </summary>
            <param name="characterSet">The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="end">The location within the control's text at which to end searching.</param>
            <returns>The location within the control where the search characters are found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string at a specific location within the control and with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a RichTextBox control for a string within a range of text within the control and with specific options applied to the search.
            </summary>
            <param name="str">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="end">The location within the control's text at which to end searching. This value must be equal to negative one (-1) or greater than or equal to the start parameter.</param>
            <param name="options">A bitwise combination of the RichTextBoxFinds values.</param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>The zero-based character index at the specified location.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Retrieves the index of the first character of a given line.
            </summary>
            <param name="lineNumber">The line for which to get the index of its first character.</param>
            <returns>The zero-based character index in the specified line.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetFirstCharIndexOfCurrentLine">
            <summary>
            Retrieves the index of the first character of the current line.
            </summary>
            <returns>The zero-based character index in the current line.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Retrieves the line number from the specified character position within the text of the RichTextBox control.
            </summary>
            <param name="index">The character index position to search.</param>
            <returns>The zero-based line number in which the character index is located.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control at the specified character index.
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LoadFile(System.String)">
            <summary>
            Loads a rich text format (RTF) or standard ASCII text file into the RichTextBox control.
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads the contents of an existing data stream into the RichTextBox control.
            </summary>
            <param name="data">A stream of data to load into the RichTextBox control.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads a specific type of file into the RichTextBox control.
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Paste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Pastes the contents of the Clipboard in the specified Clipboard format.
            </summary>
            <param name="clipFormat">The Clipboard format in which the data should be obtained from the Clipboard.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Redo">
            <summary>
            Reapplies the last operation that was undone in the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SaveFile(System.String)">
            <summary>
            Saves the contents of the RichTextBox to a rich text format (RTF) file.
            </summary>
            <param name="path">The name and location of the file to save.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of a RichTextBox control to an open data stream.
            </summary>
            <param name="data">The data stream that contains the file to save to.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of the KryptonRichTextBox to a specific type of file.
            </summary>
            <param name="path">The name and location of the file to save.</param>
            <param name="fileType">One of the RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control to the current caret position.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RichTextBoxDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.RichTextBoxView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnAcceptsTabChanged(System.EventArgs)">
            <summary>
            Raises the AcceptsTabChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnMultilineChanged(System.EventArgs)">
            <summary>
            Raises the MultilineChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnVScroll(System.EventArgs)">
            <summary>
            Raises the VScroll event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnHScroll(System.EventArgs)">
            <summary>
            Raises the HScroll event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the SelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnProtected(System.EventArgs)">
            <summary>
            Raises the Protected event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)">
            <summary>
            Raises the LinkClicked event.
            </summary>
            <param name="e">A LinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBox.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupSeparator">
            <summary>
            Represents a ribbon group separator.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupSeparator.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupSeparator.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparator.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupSeparator class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.Visible">
            <summary>
            Gets and sets the visible state of the group separator.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparator.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparator.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparator.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparator.SeparatorView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparator.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupTextBox">
            <summary>
            Represents a ribbon group text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextChanged">
            <summary>
            Occurs when the value of the Text property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.KeyPress">
            <summary>
            Occurs when a key is pressed while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.KeyUp">
            <summary>
            Occurs when a key is released while the control has focus. 
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.KeyDown">
            <summary>
            Occurs when a key is pressed while the control has focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.PreviewKeyDown">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the value of the AcceptsTab property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the HideSelection property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextAlignChanged">
            <summary>
            Occurs when the value of the TextAlign property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the Modified property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.MultilineChanged">
            <summary>
            Occurs when the value of the Multiline property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTextBox.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupTextBox class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ShortcutKeys">
            <summary>
            Gets and sets the shortcut key combination.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.ResetShortcutKeys">
            <summary>
            Resets the ShortcutKeys property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextBox">
            <summary>
            Access to the actual embedded KryptonTextBox instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Visible">
            <summary>
            Gets and sets the visible state of the text box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Show">
            <summary>
            Make the ribbon group textbox visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Hide">
            <summary>
            Make the ribbon group textbox hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Enabled">
            <summary>
            Gets and sets the enabled state of the group text box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.MinimumSize">
            <summary>
            Gets or sets the minimum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.MaximumSize">
            <summary>
            Gets or sets the maximum size of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Text">
            <summary>
            Gets and sets the text associated with the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Lines">
            <summary>
            Gets or sets the lines of text in a multiline edit, as an array of String values.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ScrollBars">
            <summary>
            Gets or sets, for multiline edit controls, which scroll bars will be shown for this control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextAlign">
            <summary>
            Gets or sets how the text should be aligned for edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the text box is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.WordWrap">
            <summary>
            Indicates if lines are automatically word-wrapped for multiline edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Multiline">
            <summary>
            Gets and sets whether the text in the control can span more than one line.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AcceptsReturn">
            <summary>
            Gets or sets a value indicating if return characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AcceptsTab">
            <summary>
            Gets or sets a value indicating if tab characters are accepted as input for multiline edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.CharacterCasing">
            <summary>
            Gets or sets a value indicating if all the characters should be left alone or converted to uppercase or lowercase.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating that the selection should be hidden when the edit control loses focus.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters that can be entered into the edit control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the text in the edit control can be changed or not.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ShortcutsEnabled">
            <summary>
            Gets or sets a value indicating whether shortcuts defined for the control are enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.PasswordChar">
            <summary>
            Gets or sets a the character to display for password input for single-line edit controls.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.UseSystemPasswordChar">
            <summary>
            Gets or sets a value indicating if the text in the edit control should appear as the default password character.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the StringCollection to use when the AutoCompleteSource property is set to CustomSource.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AutoCompleteMode">
            <summary>
            Gets or sets the text completion behavior of the textbox.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AutoCompleteSource">
            <summary>
            Gets or sets the autocomplete source, which can be one of the values from AutoCompleteSource enumeration.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AllowButtonSpecToolTips">
            <summary>
            Gets and sets a value indicating if tooltips should be Displayed for button specs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.AllowButtonSpecToolTipPriority">
            <summary>
            Gets and sets a value indicating if button spec tooltips should remove the parent tooltip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in a rich text box control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.Modified">
            <summary>
            Gets a value indicating whether the contents have changed since last last.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.SelectedText">
            <summary>
            Gets and sets the selected text within the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.SelectionLength">
            <summary>
            Gets and sets the selection length for the selected area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.SelectionStart">
            <summary>
            Gets and sets the starting point of text selected in the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextLength">
            <summary>
            Gets the length of text in the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a rich text box.
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.ClearUndo">
            <summary>
            Clears information about the most recent operation from the undo buffer of the rich text box. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control to the current caret position.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the control.
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.SelectAll">
            <summary>
            Selects all text in the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.DeselectAll">
            <summary>
            Specifies that the value of the SelectionLength property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>The zero-based character index at the specified location.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Retrieves the index of the first character of a given line.
            </summary>
            <param name="lineNumber">The line for which to get the index of its first character.</param>
            <returns>The zero-based character index in the specified line.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetFirstCharIndexOfCurrentLine">
            <summary>
            Retrieves the index of the first character of the current line.
            </summary>
            <returns>The zero-based character index in the current line.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Retrieves the line number from the specified character position within the text of the RichTextBox control.
            </summary>
            <param name="index">The character index position to search.</param>
            <returns>The zero-based line number in which the character index is located.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control at the specified character index.
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextBoxDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBox.TextBoxView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyUp event.
            </summary>
            <param name="e">An KeyEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the KeyPress event.
            </summary>
            <param name="e">An KeyPressEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Raises the PreviewKeyDown event.
            </summary>
            <param name="e">An PreviewKeyDownEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnAcceptsTabChanged(System.EventArgs)">
            <summary>
            Raises the AcceptsTabChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Raises the TextAlignChanged event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnHideSelectionChanged(System.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnModifiedChanged(System.EventArgs)">
            <summary>
            Raises the ModifiedChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnMultilineChanged(System.EventArgs)">
            <summary>
            Raises the MultilineChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBox.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupThemeSelector">
            <summary>
            Represents a ribbon group combo box.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupTrackBar">
            <summary>
            Represents a ribbon group track bar.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTrackBar.GotFocus">
            <summary>
            Occurs when the control receives focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTrackBar.LostFocus">
            <summary>
            Occurs when the control loses focus.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ValueChanged">
            <summary>
            Occurs when the value of the Value property changes.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTrackBar.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTrackBar.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupTrackBar class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TrackBar">
            <summary>
            Access to the actual embedded KryptonTrackBar instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.KeyTip">
            <summary>
            Gets and sets the key tip for the ribbon group track bar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Visible">
            <summary>
            Gets and sets the visible state of the track bar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Show">
            <summary>
            Make the ribbon group track bar visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Hide">
            <summary>
            Make the ribbon group track bar hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Enabled">
            <summary>
            Gets and sets the enabled state of the group track bar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.MinimumLength">
            <summary>
            Gets or sets the minimum length of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.MaximumLength">
            <summary>
            Gets or sets the maximum length of the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ContextMenuStrip">
            <summary>
            Gets and sets the associated context menu strip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.KryptonContextMenu">
            <summary>
            Gets and sets the KryptonContextMenu for showing when the text box is right clicked.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TrackBarSize">
            <summary>
            Gets and sets the size of the track bar elements.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TickStyle">
            <summary>
            Gets or sets a value indicating how to display the tick marks on the track bar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TickFrequency">
            <summary>
            Gets or sets a value that specifies the delta between ticks drawn on the control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.VolumeControl">
            <summary>
            Gets and sets if the control displays like a volume control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of the track bar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Maximum">
            <summary>
            Gets or sets the upper limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Minimum">
            <summary>
            Gets or sets the lower limit of the range this trackbar is working with.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the track bar.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.SmallChange">
            <summary>
            Gets or sets the value added to or subtracted from the Value property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.SetRange(System.Int32,System.Int32)">
            <summary>
            Sets the minimum and maximum values for a TrackBar.
            </summary>
            <param name="minValue">The lower limit of the range of the track bar.</param>
            <param name="maxValue">The upper limit of the range of the track bar.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TrackBarDesigner">
            <summary>
            Gets and sets the associated designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBar.TrackBarView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event.
            </summary>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBar.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupTriple">
            <summary>
            Represents a ribbon group triple container.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.PropertyChanged">
            <summary>
            Occurs after the value of a property has changed.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddButton">
            <summary>
            Occurs when the design time wants to add a button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddColorButton">
            <summary>
            Occurs when the design time wants to add a color button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddCheckBox">
            <summary>
            Occurs when the design time wants to add a checkbox.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddRadioButton">
            <summary>
            Occurs when the design time wants to add a radio button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddLabel">
            <summary>
            Occurs when the design time wants to add a label.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddCustomControl">
            <summary>
            Occurs when the design time wants to add a custom control.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddTextBox">
            <summary>
            Occurs when the design time wants to add a text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddMaskedTextBox">
            <summary>
            Occurs when the design time wants to add a masked text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddRichTextBox">
            <summary>
            Occurs when the design time wants to add a rich text box.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddComboBox">
            <summary>
            Occurs when the design time wants to add a combobox.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddNumericUpDown">
            <summary>
            Occurs when the design time wants to add a numeric up down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddDomainUpDown">
            <summary>
            Occurs when the design time wants to add a domain up down.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddDateTimePicker">
            <summary>
            Occurs when the design time wants to add a date time picker.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeAddTrackBar">
            <summary>
            Occurs when the design time wants to add a track bar.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.KryptonRibbonGroupTriple.DesignTimeContextMenu">
            <summary>
            Occurs when the design time context menu is requested.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.#ctor">
            <summary>
            Initialise a new instance of the KryptonRibbonGroupTriple class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.RibbonTab">
            <summary>
            Gets access to the owning ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.ItemAlignment">
            <summary>
            Gets and sets how to align items in the medium and small item sizes.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.Visible">
            <summary>
            Gets and sets the visible state of the triple group container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.Show">
            <summary>
            Make the ribbon group visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.Hide">
            <summary>
            Make the ribbon group hidden.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.MaximumSize">
            <summary>
            Gets and sets the maximum allowed size of the container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.MinimumSize">
            <summary>
            Gets and sets the minimum allowed size of the container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.ItemSizeMaximum">
            <summary>
            Gets and sets the maximum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.ItemSizeMinimum">
            <summary>
            Gets and sets the minimum allowed size of the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.ItemSizeCurrent">
            <summary>
            Gets and sets the current item size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.ToolTipValues">
            <summary>
            Gets access to the Wrapped Controls Tooltips.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.CreateView(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Creates an appropriate view element for this item.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying changes in display.</param>
            <returns>ViewBase derived instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.Items">
            <summary>
            Gets the collection of ribbon group triple items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.GetChildComponents">
            <summary>
            Gets an array of all the contained components.
            </summary>
            <returns>Array of child components.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTriple.TripleView">
            <summary>
            Internal design time properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTriple.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of property that has changed.</param>
        </member>
        <member name="T:Krypton.Ribbon.KryptonRibbonGroupTripleCollection">
            <summary>
            Manage the items that can be added to a ribbon group triple container.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTripleCollection.RestrictTypes">
            <summary>
            Gets an array of types that the collection is restricted to contain.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollection.Add(System.Object)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="value">Object reference.</param>
            <returns>The position into which the new item was inserted.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="value">Object reference.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollection.Insert(System.Int32,Krypton.Ribbon.KryptonRibbonGroupItem)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">Insert index.</param>
            <param name="item">Item reference.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollection.Add(Krypton.Ribbon.KryptonRibbonGroupItem)">
            <summary>
            Append an item to the collection.
            </summary>
            <param name="item">Item reference.</param>
        </member>
        <member name="T:Krypton.Ribbon.AppButtonToolTipToContent">
            <summary>
            Map application button tooltip values to content values.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonToolTipToContent.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the AppButtonToolTipToContent class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.AppButtonToolTipToContent.HasContent">
            <summary>
            Gets a value indicating if the mapping produces any content.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonToolTipToContent.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonToolTipToContent.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonToolTipToContent.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.AppButtonToolTipToContent.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ApplicationTabToContent.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the ApplicationTabToContent class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control..</param>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.ApplicationTabToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ApplicationTabToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ApplicationTabToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ApplicationTabToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ContextTabSet">
            <summary>
            Stores information needed to draw the display text for a context set
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.#ctor(Krypton.Ribbon.ViewDrawRibbonTab,Krypton.Ribbon.KryptonRibbonContext)">
            <summary>
            Initialize a new instance of the ContextTabSet class.
            </summary>
            <param name="tab">Reference to first tab of the set.</param>
            <param name="context">Reference to owning context details.</param>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSet.FirstTab">
            <summary>
            Gets access to the first tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.IsFirstTab(Krypton.Ribbon.ViewDrawRibbonTab)">
            <summary>
            Gets a value indicating if the tab is the first in set.
            </summary>
            <param name="tab">Tab to test.</param>
            <returns>True if first; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.IsLastTab(Krypton.Ribbon.ViewDrawRibbonTab)">
            <summary>
            Gets a value indicating if the tab is the last in set.
            </summary>
            <param name="tab">Tab to test.</param>
            <returns>True if last; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.IsFirstOrLastTab(Krypton.Ribbon.ViewDrawRibbonTab)">
            <summary>
            Gets a value indicating if the tab is the first or last in set.
            </summary>
            <param name="tab">Tab to test.</param>
            <returns>True if first or last; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.UpdateLastTab(Krypton.Ribbon.ViewDrawRibbonTab)">
            <summary>
            Update the last tab in the set with new refernece.
            </summary>
            <param name="tab">Reference to new last tab.</param>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.GetLeftScreenPosition">
            <summary>
            Gets the left position needed to show the context tab in screen coordinates.
            </summary>
            <returns>Screen position.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextTabSet.GetRightScreenPosition">
            <summary>
            Gets the right position needed to show the context tab in screen coordinates.
            </summary>
            <returns>Screen position.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSet.Context">
            <summary>
            Gets the context component.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSet.ContextName">
            <summary>
            Gets the name of the context.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSet.ContextColor">
            <summary>
            Gets the name of the context.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSet.ContextTitle">
            <summary>
            Gets the title of the context.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ContextTabSetCollection">
            <summary>
            Specialise the generic collection with type specific rules for item accessor.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ContextTabSetCollection.Item(System.String)">
            <summary>
            Gets the item with the provided unique name.
            </summary>
            <param name="name">Name of the ribbon context instance.</param>
            <returns>Item at specified index.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the ContextToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
        </member>
        <member name="P:Krypton.Ribbon.ContextToContent.OverrideTextColor">
            <summary>
            Gets and sets the text color override.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ContextToContent.OverrideTextHint">
            <summary>
            Gets and sets the text hint.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ContextToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the DesignTextToContent class.
            </summary>
            <param name="ribbon">Reference to the owning ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.DesignTextToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.PaletteCaptionRedirect">
            <summary>
            Override the redirection to force the borders for the caption to only show the bottom border as a maximum.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteCaptionRedirect.#ctor(Krypton.Toolkit.IPalette)">
            <summary>
            Initialize a new instance of the PaletteCaptionRedirect class.
            </summary>
            <param name="target">Initial palette target for redirection.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteCaptionRedirect.GetBorderDrawBorders(Krypton.Toolkit.PaletteBorderStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="style">Border style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.#ctor(Krypton.Ribbon.PaletteGalleryState)">
            <summary>
            Initialize a new instance of the PaletteGalleryBackBorder class.
            </summary>
            <param name="state">Initial state for background/border.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.SetState(Krypton.Ribbon.PaletteGalleryState)">
            <summary>
            Define the new state to use for sourcing values.
            </summary>
            <param name="state">New state for background/border.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background draw value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackGraphicsHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the actual background graphics hint value.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBackImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if border should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderDrawBorders(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating which borders to draw.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteDrawBorders value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderGraphicsHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the graphics drawing hint.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteGraphicsHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second border color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color border angle.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderWidth(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border width.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border width.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderRounding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border rounding.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Border rounding.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a border image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the border image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryBackBorder.GetBorderImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="T:Krypton.Ribbon.PaletteGalleryRedirect">
            <summary>
            Implement storage for a gallery palette redirect. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteGalleryRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Paint delegate.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryRedirect.SetRedirector(Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryRedirect.RibbonGalleryBack">
            <summary>
            Gets access to the gallery background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryRedirect.RibbonGalleryBorder">
            <summary>
            Gets access to the gallery border palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteGalleryState">
            <summary>
            Implement storage for a gallery palette state. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryState.#ctor(Krypton.Ribbon.PaletteGalleryRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteGalleryState class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryState.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryState.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteGalleryState.SetInherit(Krypton.Ribbon.PaletteGalleryRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryState.RibbonGalleryBack">
            <summary>
            Gets access to the gallery background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteGalleryState.RibbonGalleryBorder">
            <summary>
            Gets access to the gallery border palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride">
            <summary>
            Override the text colors for button specs that are drawn on aero glass.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Initialize a new instance of the PaletteRedirectRibbonAeroOverride class.
            </summary>
            <param name="ribbon">Reference to owning Ribbon instance.</param>
            <param name="redirect">Source for inheriting values.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride.GetContentShortTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride.GetContentShortTextColor2(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride.GetContentLongTextColor1(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRedirectRibbonAeroOverride.GetContentLongTextColor2(Krypton.Toolkit.PaletteContentStyle,Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="style">Content style.</param>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonAppButton">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppButton.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonAppButton class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppButton.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppButton.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonAppButton">
            <summary>
            Gets access to the application button palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonGroupCollapsedBorder">
            <summary>
            Gets access to the ribbon group collapsed border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonGroupCollapsedBack">
            <summary>
            Gets access to the ribbon group collapsed background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonGroupCollapsedFrameBorder">
            <summary>
            Gets access to the ribbon group collapsed frame border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonGroupCollapsedFrameBack">
            <summary>
            Gets access to the ribbon group collapsed frame background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppButton.RibbonGroupCollapsedText">
            <summary>
            Gets access to the ribbon group collapsed text palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonAppGroupTab">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppGroupTab.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonAppGroupTab class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppGroupTab.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonAppGroupTab.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonAppButton">
            <summary>
            Gets access to the application button palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupArea">
            <summary>
            Gets access to the ribbon group area palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupNormalBorder">
            <summary>
            Gets access to the ribbon group normal border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupNormalTitle">
            <summary>
            Gets access to the ribbon group normal title palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupCollapsedBorder">
            <summary>
            Gets access to the ribbon group collapsed border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupCollapsedBack">
            <summary>
            Gets access to the ribbon group collapsed background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupCollapsedFrameBorder">
            <summary>
            Gets access to the ribbon group collapsed frame border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupCollapsedFrameBack">
            <summary>
            Gets access to the ribbon group collapsed frame background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonAppGroupTab.RibbonGroupCollapsedText">
            <summary>
            Gets access to the ribbon group collapsed text palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonContextBack">
            <summary>
            Return inherited values unless empty in which case return the context color.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the PaletteRibbonContextBack class.
            </summary>
            <param name="ribbon">Reference to ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.SetInherit(Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColor3(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColor4(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextBack.GetRibbonBackColor5(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonContextDouble">
            <summary>
            Return inherited values unless empty in which case return the context color.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the PaletteRibbonContextDouble class.
            </summary>
            <param name="ribbon">Reference to ribbon control.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonContextDouble.RibbonTab">
            <summary>
            Gets and sets the associated ribbon tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonContextDouble.LightBackground">
            <summary>
            Gets and sets a value indicating if the text is being drawn on a light coloured background.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.SetInherit(Krypton.Toolkit.PaletteRibbonDoubleInheritOverride)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColor3(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColor4(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonBackColor5(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonContextDouble.GetRibbonTextColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the tab color for the item text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonDisabled">
            <summary>
            Implement storage for a ribbon disabled state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonDisabled.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonDisabled class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonDisabled.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonDisabled.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonDisabled.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonDisabled.RibbonGroupCheckBoxText">
            <summary>
            Gets access to the ribbon group check box label palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonDisabled.RibbonGroupButtonText">
            <summary>
            Gets access to the ribbon group button text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonDisabled.RibbonGroupLabelText">
            <summary>
            Gets access to the ribbon group label label palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonDisabled.RibbonGroupRadioButtonText">
            <summary>
            Gets access to the ribbon group radio button label palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonDisabled.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonFocus">
            <summary>
            Implement storage for a ribbon focus palette. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonFocus.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonFocus class.
            </summary>
            <param name="redirect">Inheritence redirection instance.</param>
            <param name="needPaint">Paint delegate.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonFocus.SetRedirector(Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonFocus.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonFocus.RibbonTab">
            <summary>
            Gets access to the ribbon tab palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonFocus.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonGroupAreaTab">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupAreaTab.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonGroupAreaTab class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupAreaTab.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupAreaTab.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupAreaTab.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupAreaTab.RibbonGroupArea">
            <summary>
            Gets access to the ribbon group area palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonGroupTab">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupTab.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonGroupTab class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupTab.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonGroupTab.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupArea">
            <summary>
            Gets access to the ribbon group area palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupNormalBorder">
            <summary>
            Gets access to the ribbon group normal border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupNormalTitle">
            <summary>
            Gets access to the ribbon group normal title palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupCollapsedBorder">
            <summary>
            Gets access to the ribbon group collapsed border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupCollapsedBack">
            <summary>
            Gets access to the ribbon group collapsed background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupCollapsedFrameBorder">
            <summary>
            Gets access to the ribbon group collapsed frame border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupCollapsedFrameBack">
            <summary>
            Gets access to the ribbon group collapsed frame background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonGroupTab.RibbonGroupCollapsedText">
            <summary>
            Gets access to the ribbon group collapsed text palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonImages">
            <summary>
            Storage for application button related properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonImages.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonImages class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="needPaint">Paint delegate.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonImages.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonImages.CheckBox">
            <summary>
            Gets and sets the ribbon check box images.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonImages.RadioButton">
            <summary>
            Gets and sets the ribbon radio button images.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonJustGroup">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustGroup.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonJustGroup class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustGroup.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustGroup.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupArea">
            <summary>
            Gets access to the ribbon group area palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupNormalBorder">
            <summary>
            Gets access to the ribbon group normal border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupNormalTitle">
            <summary>
            Gets access to the ribbon group normal title palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupCollapsedBorder">
            <summary>
            Gets access to the ribbon group collapsed border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupCollapsedBack">
            <summary>
            Gets access to the ribbon group collapsed background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupCollapsedFrameBorder">
            <summary>
            Gets access to the ribbon group collapsed frame border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupCollapsedFrameBack">
            <summary>
            Gets access to the ribbon group collapsed frame background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustGroup.RibbonGroupCollapsedText">
            <summary>
            Gets access to the ribbon group collapsed text palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustGroup.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonJustTab">
            <summary>
            Implement storage for a ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustTab.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonJustTab class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustTab.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustTab.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustTab.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonJustTab.RibbonTab">
            <summary>
            Gets access to the ribbon tab palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonJustTab.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonNormal">
            <summary>
            Implement storage for the normal ribbon state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonNormal.#ctor(Krypton.Ribbon.PaletteRibbonRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonNormal class.
            </summary>
            <param name="inherit">Source for inheriting values.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonNormal.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonNormal.PopulateFromBase(Krypton.Toolkit.PaletteState)">
            <summary>
            Populate values from the base palette.
            </summary>
            <param name="state">The palette state to populate with.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonNormal.SetInherit(Krypton.Ribbon.PaletteRibbonRedirect)">
            <summary>
            Sets the inheritance parent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonNormal.RibbonGroupCheckBoxText">
            <summary>
            Gets access to the ribbon group check box label palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonNormal.RibbonGroupButtonText">
            <summary>
            Gets access to the ribbon group button text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonNormal.RibbonGroupLabelText">
            <summary>
            Gets access to the ribbon group label text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonNormal.RibbonGroupRadioButtonText">
            <summary>
            Gets access to the ribbon group radio button label palette details.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonRedirect">
            <summary>
            Implement storage for a ribbon palette. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonRedirect.#ctor(Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.PaletteBackStyle,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteDoubleRedirect class.
            </summary>
            <param name="redirect">inheritance redirection instance.</param>
            <param name="panelBackStyle">Initial background style.</param>
            <param name="needPaint">Paint delegate.</param>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonRedirect.SetRedirector(Krypton.Toolkit.PaletteRedirect)">
            <summary>
            Update the redirector with new reference.
            </summary>
            <param name="redirect">Target redirector.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppButton">
            <summary>
            Gets access to the application button palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppMenuOuter">
            <summary>
            Gets access to the application button menu outer palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppMenuInner">
            <summary>
            Gets access to the application button menu inner palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppMenuDocs">
            <summary>
            Gets access to the application button menu recent docs palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppMenuDocsTitle">
            <summary>
            Gets access to the application button menu recent documents title.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonAppMenuDocsEntry">
            <summary>
            Gets access to the application button menu recent documents entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGeneral">
            <summary>
            Gets access to the ribbon general palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupBackArea">
            <summary>
            Gets access to the ribbon group area palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCheckBoxText">
            <summary>
            Gets access to the ribbon group check box label palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupButtonText">
            <summary>
            Gets access to the ribbon group button text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCollapsedBorder">
            <summary>
            Gets access to the ribbon group collapsed border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCollapsedBack">
            <summary>
            Gets access to the ribbon group collapsed background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCollapsedFrameBorder">
            <summary>
            Gets access to the ribbon group collapsed frame border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCollapsedFrameBack">
            <summary>
            Gets access to the ribbon group collapsed frame background palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupCollapsedText">
            <summary>
            Gets access to the ribbon group collapsed text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupNormalBorder">
            <summary>
            Gets access to the ribbon group normal border palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupNormalTitle">
            <summary>
            Gets access to the ribbon group normal title palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupRadioButtonText">
            <summary>
            Gets access to the ribbon group radio button label palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonGroupLabelText">
            <summary>
            Gets access to the ribbon group label text palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonImages">
            <summary>
            Gets access to the ribbon images overrides.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonTab">
            <summary>
            Gets access to the ribbon tab palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonQATFullbar">
            <summary>
            Gets access to the ribbon quick access toolbar in full mode palette details.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonQATMinibarActive">
            <summary>
            Gets access to the ribbon quick access toolbar in mini mode palette details when form active.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonQATMinibarInactive">
            <summary>
            Gets access to the ribbon quick access toolbar in mini mode palette details when form inactive.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonRedirect.RibbonQATOverflow">
            <summary>
            Gets access to the ribbon quick access toolbar overflow palette details.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonRedirect.OnNeedPaint(System.Object,System.Boolean)">
            <summary>
            Handle a change event from palette source.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="needLayout">True if a layout is also needed.</param>
        </member>
        <member name="T:Krypton.Ribbon.PaletteRibbonStyles">
            <summary>
            Implement storage for a ribbon style values.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.PaletteRibbonStyles.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the PaletteRibbonStyles class.
            </summary>
            <param name="ribbon">Source ribbon control instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.BackStyle">
            <summary>
            Gets and sets the ribbon background style.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.BackInactiveStyle">
            <summary>
            Gets and sets the ribbon background style when owning window is inactive.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.GroupButtonStyle">
            <summary>
            Gets and sets the style for buttons insides groups.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.GroupClusterButtonStyle">
            <summary>
            Gets and sets the style for cluster buttons insides groups.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.GroupCollapsedButtonStyle">
            <summary>
            Gets and sets the collapsed group button style.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.GroupDialogButtonStyle">
            <summary>
            Gets and sets the dialog box launcher button style inside groups.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.QATButtonStyle">
            <summary>
            Gets and sets the quick access toolbar button style.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.PaletteRibbonStyles.ScrollerStyle">
            <summary>
            Gets and sets the scroller style.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.#ctor(Krypton.Ribbon.IQuickAccessToolbarButton)">
            <summary>
            Initialize a new instance of the RibbonTabToContent class.
            </summary>
            <param name="qatButton">Source for button values.</param>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentDrawFocus(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentImageH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentImageV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentImageEffect(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentImageColorMap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentImageColorTo(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentAdjacentGap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:Krypton.Ribbon.QATButtonToolTipToContent">
            <summary>
            Map quick access toolbar tooltip values to content values.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToolTipToContent.#ctor(Krypton.Ribbon.IQuickAccessToolbarButton)">
            <summary>
            Initialize a new instance of the QATButtonToolTipToContent class.
            </summary>
            <param name="qatButton">Source quick access toolbar button.</param>
        </member>
        <member name="P:Krypton.Ribbon.QATButtonToolTipToContent.HasContent">
            <summary>
            Gets a value indicating if the mapping produces any content.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToolTipToContent.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToolTipToContent.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToolTipToContent.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.QATButtonToolTipToContent.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.RibbonAppButton">
            <summary>
            Storage for application button related properties.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.RibbonAppButton.AppMenuButtonSpecCollection">
            <summary>
            Collection for managing ButtonSpecAppMenu instances.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonAppButton.AppMenuButtonSpecCollection.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the AppMenuButtonSpecCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonAppButton.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the RibbonAppButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonImage">
            <summary>
            Gets and sets the application button image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonBaseColorDark">
            <summary>
            Gets and sets the darker base color used for drawing an Office 2010 style application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonBaseColorLight">
            <summary>
            Gets and sets the lighter base color used for drawing an Office 2010 style application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonTextColor">
            <summary>
            Gets and sets the text color used for drawing an Office 2010 style application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonText">
            <summary>
            Gets and sets the text used for drawing an Office 2010 style application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonMenuItems">
            <summary>
            Gets and sets the context menu items for the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonRecentDocs">
            <summary>
            Gets and sets the recent document entries for the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonMinRecentSize">
            <summary>
            Gets and sets the minimum size of the recent documents area of the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonMaxRecentSize">
            <summary>
            Gets and sets the maximum size of the recent documents area of the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonSpecs">
            <summary>
            Gets the collection of button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonShowRecentDocs">
            <summary>
            Gets and sets if the recent documents area should be shown in the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonToolTipStyle">
            <summary>
            Gets and sets the tooltip label style for the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonToolTipImage">
            <summary>
            Gets and sets the image for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonToolTipImageTransparentColor">
            <summary>
            Gets and sets the color to draw as transparent in the ToolTipImage.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonToolTipTitle">
            <summary>
            Gets and sets the title text for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonToolTipBody">
            <summary>
            Gets and sets the body text for the item ToolTip.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.AppButtonVisible">
            <summary>
            Gets and sets if the application button is shown.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonAppButton.IgnoreDoubleClickClose">
            <summary>
            Does the application button perform "default theme Close" on double Click
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupLabelTextToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonGroupLabelTextToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonGroupTextNormal">Source for ribbon group button normal settings.</param>
            <param name="ribbonGroupTextDisabled">Source for ribbon group button disabled settings.</param>
            <param name="ribbonLabelTextNormal">Source for ribbon group label normal settings.</param>
            <param name="ribbonLabelTextDisabled">Source for ribbon group label disabled settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupLabelTextToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupLabelTextToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupLabelTextToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupLabelTextToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupNormalDisabledTextToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonGroupNormalDisabledTextToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonGroupTextNormal">Source for ribbon group button normal settings.</param>
            <param name="ribbonGroupTextDisabled">Source for ribbon group button disabled settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupNormalDisabledTextToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupNormalDisabledTextToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupNormalDisabledTextToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupNormalDisabledTextToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupTextToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonGroupTextToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonGroupText">Source for ribbon group settings.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonGroupTextToContent.PaletteRibbonGroup">
            <summary>
            Gets and sets the ribbon group palette to use.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupTextToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupTextToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupTextToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonGroupTextToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonRecentDocsEntryToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonRecentDocEntryText">Source for ribbon recent document entry settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsEntryToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsShortcutToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonRecentDocsShortcutToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonRecentDocEntryText">Source for ribbon recent document entry settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsShortcutToContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonRecentDocsToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonRecentTitleText">Source for ribbon recent document title settings.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.Dispose">
            <summary>
            Remove any cached resources.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonRecentDocsTitleToContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.RibbonShortcuts">
            <summary>
            Storage for shortcut related properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonShortcuts.#ctor">
            <summary>
            Initialize a new instance of the RibbonShortcuts class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonShortcuts.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonShortcuts.ToggleMinimizeMode">
            <summary>
            Gets and sets the shortcut to toggle the ribbon minimized mode..
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonShortcuts.ResetToggleMinimizeMode">
            <summary>
            Resets the ToggleMinimizeMode property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonShortcuts.ToggleKeyboardAccess1">
            <summary>
            Gets and sets the shortcut to toggle keyboard access to the ribbon.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonShortcuts.ResetToggleKeyboardAccess1">
            <summary>
            Resets the ToggleKeyboardAccess1 property to its default value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonShortcuts.ToggleKeyboardAccess2">
            <summary>
            Gets and sets the shortcut to toggle keyboard access to the ribbon.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonShortcuts.ResetToggleKeyboardAccess2">
            <summary>
            Resets the ToggleKeyboardAccess2 property to its default value.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.RibbonStrings">
            <summary>
            Storage for string related properties.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonStrings.#ctor">
            <summary>
            Initialize a new instance of the RibbonStrings class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.IsDefault">
            <summary>
            Gets a value indicating if all values are default.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.AppButtonKeyTip">
            <summary>
            Gets and sets the application button key tip string.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.CustomizeQuickAccessToolbar">
            <summary>
            Gets and sets the heading for the quick access toolbar menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.Minimize">
            <summary>
            Gets and sets the menu string for minimizing the ribbon option.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.MoreColors">
            <summary>
            Gets and sets the menu string for a 'more colors' entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.NoColor">
            <summary>
            Gets and sets the menu string for a 'no color' entry.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.RecentDocuments">
            <summary>
            Gets and sets the title for the recent documents section of the application menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.RecentColors">
            <summary>
            Gets and sets the title for the recent colors section of the color button menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.ShowAboveRibbon">
            <summary>
            Gets and sets the menu string for showing above the ribbon.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.ShowBelowRibbon">
            <summary>
            Gets and sets the menu string for showing below the ribbon.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.ShowQATAboveRibbon">
            <summary>
            Gets and sets the menu string for showing QAT above the ribbon.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.ShowQATBelowRibbon">
            <summary>
            Gets and sets the menu string for showing QAT below the ribbon.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.StandardColors">
            <summary>
            Gets and sets the title for the standard colors section of the application menu.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.RibbonStrings.ThemeColors">
            <summary>
            Gets and sets the title for the theme colors section of the application menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral,Krypton.Toolkit.IPaletteRibbonText)">
            <summary>
            Initialize a new instance of the RibbonTabToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
            <param name="ribbonTabText">Source for ribbon tab settings.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonTabToContent.PaletteRibbonText">
            <summary>
            Gets and sets the ribbon tab palette to use.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonTabToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.RibbonThemeManager">
            <summary>
            Allows the developer to easily access the entire array of supported themes for ribbon controls.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.PropagateThemeSelector(Krypton.Ribbon.KryptonRibbonGroupComboBox)">
            <summary>
            Propagates the theme selector.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.PropagateThemeSelector(Krypton.Ribbon.KryptonRibbonGroupDomainUpDown)">
            <summary>
            Propagates the theme selector.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyTheme(Krypton.Toolkit.PaletteModeManager,Krypton.Toolkit.KryptonManager)">
            <summary>
            Applies the theme.
            </summary>
            <param name="paletteMode">The palette mode.</param>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyTheme(System.String,Krypton.Toolkit.KryptonManager)">
            <summary>
            Applies the theme.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <param name="manager">The manager.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.GetCurrentPaletteMode(Krypton.Toolkit.KryptonManager)">
            <summary>
            Gets the current palette mode.
            </summary>
            <param name="manager">The manager.</param>
            <returns>The current <see cref="T:Krypton.Toolkit.PaletteModeManager"/>.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.SetTheme(System.String,Krypton.Toolkit.KryptonManager)">
            <summary>
            Sets the theme.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ReturnPaletteModeManagerAsString(Krypton.Toolkit.PaletteModeManager,Krypton.Toolkit.KryptonManager)">
            <summary>
            Returns the palette mode manager as string.
            </summary>
            <param name="paletteModeManager">The palette mode manager.</param>
            <param name="manager">The manager.</param>
            <returns>The current <see cref="T:Krypton.Toolkit.PaletteModeManager"/> as a string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ReturnPaletteModeAsString(Krypton.Toolkit.PaletteMode)">
            <summary>
            Returns the palette mode as string.
            </summary>
            <param name="paletteMode">The palette mode.</param>
            <returns>The current <see cref="T:Krypton.Toolkit.PaletteMode"/> as a string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyGlobalTheme(Krypton.Toolkit.KryptonManager,Krypton.Toolkit.PaletteModeManager)">
            <summary>
            Applies the global theme.
            </summary>
            <param name="manager">The manager.</param>
            <param name="paletteModeManager">The palette mode manager.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyGlobalTheme(Krypton.Toolkit.KryptonManager,Krypton.Toolkit.PaletteMode)">
            <summary>
            Applies the global theme.
            </summary>
            <param name="manager">The manager.</param>
            <param name="mode">The theme mode.</param>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyThemeMode(System.String)">
            <summary>
            Applies the theme mode.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <returns>The <see cref="T:Krypton.Toolkit.PaletteMode"/> equivalent.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonThemeManager.ApplyThemeManagerMode(System.String)">
            <summary>
            Applies the theme manager mode.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <returns>The <see cref="T:Krypton.Toolkit.PaletteModeManager"/> equivalent.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.#ctor(Krypton.Toolkit.PaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the RibbonToContent class.
            </summary>
            <param name="ribbonGeneral">Source for general ribbon settings.</param>
        </member>
        <member name="P:Krypton.Ribbon.RibbonToContent.RibbonGeneral">
            <summary>
            Gets access to the ribbon general instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentDraw(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentDrawFocus(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a value indicating if content should be drawn with focus indication.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentImageH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentImageV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentImageEffect(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the effect applied to drawing of the image.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteImageEffect value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentImageColorMap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color to remap into another color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentImageColorTo(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color to use in place of the image map color.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentShortTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the short text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextNewFont(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the font for the long text by generating a new font instance.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Font value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextHint(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the rendering hint for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextHint value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextMultiLine(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the flag indicating if multiline text is allowed for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>InheritBool value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextTrim(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the text trimming to use for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextTrim value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextPrefix(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the prefix drawing setting for long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>PaletteTextPrefix value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextV(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the vertical relative alignment of the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextMultiLineH(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the horizontal relative alignment of multiline long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>RelativeAlignment value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second back color for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color drawing style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color drawing style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextColorAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextColorAngle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the color background angle for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Angle used for color drawing.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets a background image for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextImageStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background image style for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image style value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentLongTextImageAlign(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image alignment for the long text.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Image alignment style.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentPadding(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between the border and content drawing.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Padding value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentAdjacentGap(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the padding between adjacent content items.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.RibbonToContent.GetContentStyle">
            <summary>
            Gets the style appropriate for this content.
            </summary>
            <returns>Content style.</returns>
        </member>
        <member name="T:Krypton.Ribbon.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.AppButtonDefault">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ButtonColorImageLarge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ButtonColorImageSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ButtonImageLarge">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ButtonImageSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.ButtonNoColor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.CF_logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.check2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.delete2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.GroupImageDefault">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.help2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonGallery">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroup">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupCheckBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupCluster">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupClusterButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupClusterColorButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupColorButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupComboBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupCustomControl">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupDateTimePicker">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupDomainUpDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupLabel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupLines">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupMaskedTextBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupNumericUpDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupRadioButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupRichTextBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupSeparator">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupTextBox">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupTrackBar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonGroupTriple">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.KryptonRibbonRecentDoc">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.MoveFirst">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.MoveLast">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.MoveNext">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.MovePrevious">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.Properties.Resources.QATButtonDefault">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryActionList.#ctor(Krypton.Ribbon.KryptonGalleryDesigner)">
            <summary>
            Initialize a new instance of the KryptonGalleryActionList class.
            </summary>
            <param name="owner">Designer that owns this action list instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryActionList.PaletteMode">
            <summary>
            Gets and sets the palette mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list.
            </summary>
            <returns>A DesignerActionItem array that contains the items in this list.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonGalleryDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Indicates whether the specified control can be a child of the control managed by a designer.
            </summary>
            <param name="control">The Control to test.</param>
            <returns>true if the specified control can be a child of the control managed by this designer; otherwise, false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonGalleryDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonGalleryDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonActionList.#ctor(Krypton.Ribbon.KryptonRibbonDesigner)">
            <summary>
            Initialize a new instance of the KryptonRibbonActionList class.
            </summary>
            <param name="owner">Designer that owns this action list instance.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonActionList.InDesignHelperMode">
            <summary>
            Gets and sets use of design time helpers.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonActionList.PaletteMode">
            <summary>
            Gets and sets the palette mode.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list.
            </summary>
            <returns>A DesignerActionItem array that contains the items in this list.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Indicates whether the specified control can be a child of the control managed by a designer.
            </summary>
            <param name="control">The Control to test.</param>
            <returns>true if the specified control can be a child of the control managed by this designer; otherwise, false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonDesigner.ActionLists">
            <summary>
             Gets the design-time action lists supported by the component associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.GetHitTest(System.Drawing.Point)">
            <summary>
            Indicates whether a mouse click at the specified point should be handled by the control.
            </summary>
            <param name="point">A Point indicating the position at which the mouse was clicked, in screen coordinates.</param>
            <returns>true if a click at the specified point is to be handled by the control; otherwise, false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.OnMouseLeave">
            <summary>
            Receives a call when the mouse leaves the control. 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop operation enters the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop object is dragged over the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when a drag-and-drop object is dropped onto the control designer view.
            </summary>
            <param name="de">A DragEventArgs that provides data for the event.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupButtonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupButtonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBoxDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupCheckBoxDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCheckBoxDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCheckBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupClusterButtonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterButtonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupClusterCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupClusterColorButtonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterColorButtonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterColorButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupClusterDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupClusterDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupClusterDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupColorButtonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupColorButtonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupColorButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupComboBoxDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupComboBoxDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupContainerCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupTopCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupContainerCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupCustomControlDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupCustomControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupDateTimePickerDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDateTimePickerDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupDomainUpDownDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupDomainUpDownDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupGalleryDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupGalleryDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabelDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupLabelDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabelDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLabelDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLabelDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLinesCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupLineCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLinesCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLinesDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupLinesDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLinesDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLinesDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupLinesDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupLinesDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupMaskedTextBoxDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupMaskedTextBoxDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupNumericUpDownDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupNumericUpDownDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButtonDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupRadioButtonDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButtonDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRadioButtonDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRadioButtonDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupRichTextBoxDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupRichTextBoxDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparatorDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupSeparatorDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparatorDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupSeparatorDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupSeparatorDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupTextBoxDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTextBoxDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupTrackBarDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.DesignEnabled">
            <summary>
            Gets and sets if the object is enabled.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.DesignVisible">
            <summary>
            Gets and sets if the object is visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTrackBarDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Adjusts the set of properties the component exposes through a TypeDescriptor.
            </summary>
            <param name="properties">An IDictionary containing the properties for the class of the component.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupTripleCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonGroupTripleDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTripleDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonGroupTripleDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonGroupTripleDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButtonCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonQATButtonCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButtonCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonQATButtonCollectionEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Sets the specified array as the items of the collection.
            </summary>
            <param name="editValue">The collection to edit.</param>
            <param name="value">An array of objects to set as the collection items.</param>
            <returns>The newly created collection object.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonRecentDocCollectionEditor.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonRecentDocCollectionEditor class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonRecentDocCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain. 
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTabDesigner.#ctor">
            <summary>
            Initialize a new instance of the KryptonRibbonTabDesigner class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTabDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes the designer with the specified component.
            </summary>
            <param name="component">The IComponent to associate the designer with.</param>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTabDesigner.AssociatedComponents">
            <summary>
            Gets the collection of components associated with the component managed by the designer.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.KryptonRibbonTabDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.KryptonRibbonTabDesigner.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the component. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch,Krypton.Toolkit.ViewBase,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewRibbonManager class.
            </summary>
            <param name="control">Owning control.</param>
            <param name="viewGroups">Group view elements.</param>
            <param name="root">Root of the view hierarchy.</param>
            <param name="minimizedMode">Is this manager for handling the minimized mode popup.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.Active">
            <summary>
            Application we are inside has become active.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.Inactive">
            <summary>
            Application we are inside has become inactive.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.GetPreferredSize(Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Discover the preferred size of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="context">View context for layout operation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse movement handling.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.MouseLeave(System.EventArgs)">
            <summary>
            Perform mouse leave processing.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonManager.UpdateViewFromPoint(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Update the active view based on the mouse position.
            </summary>
            <param name="control">Source control.</param>
            <param name="pt">Point within the source control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch,Krypton.Toolkit.ViewBase,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewRibbonManager class.
            </summary>
            <param name="control">Owning control.</param>
            <param name="viewGroups">Group view elements.</param>
            <param name="root">Root of the view hierarchy.</param>
            <param name="minimizedMode">Is this manager for handling the minimized mode popup.</param>
            <param name="needPaintDelegate">Delegate for requesting paint changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.Active">
            <summary>
            Application we are inside has become active.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.Inactive">
            <summary>
            Application we are inside has become inactive.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.GetPreferredSize(Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Discover the preferred size of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="context">View context for layout operation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse movement handling.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.MouseLeave(System.EventArgs)">
            <summary>
            Perform mouse leave processing.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key down handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Perform key press handling.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key up handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonMinimizedManager.UpdateViewFromPoint(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Update the active view based on the mouse position.
            </summary>
            <param name="control">Source control.</param>
            <param name="pt">Point within the source control.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewRibbonMinimizedManager.FocusView">
            <summary>
            Gets and sets the view that has the focus.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.#ctor(System.Windows.Forms.Control,Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.ViewBase,Krypton.Ribbon.ViewDrawRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewRibbonPopupGroupManager class.
            </summary>
            <param name="control">Owning control.</param>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="root">View for group we are tracking.</param>
            <param name="viewGroup">Group to track.</param>
            <param name="needPaintDelegate">Delegate for performing painting.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.GetPreferredSize(Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Discover the preferred size of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="context">View context for layout operation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.Point)">
            <summary>
            Perform mouse movement handling.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
            <param name="rawPt">The actual point provided from the windows message.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.MouseLeave(System.EventArgs)">
            <summary>
            Perform mouse leave processing.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key down handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Perform key press handling.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonPopupGroupManager.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key up handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewRibbonPopupGroupManager.FocusView">
            <summary>
            Gets and sets the view that has the focus.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.#ctor(Krypton.Ribbon.KryptonRibbon,System.Windows.Forms.Control,Krypton.Ribbon.ViewLayoutRibbonQATContents,Krypton.Toolkit.ViewBase)">
            <summary>
            Initialize a new instance of the ViewRibbonPopupGroupManager class.
            </summary>
            <param name="ribbon">Reference to original ribbon instance.</param>
            <param name="control">Owning control.</param>
            <param name="qatContents">View that will handle focus requests.</param>
            <param name="root">View for group we are tracking.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewRibbonQATOverflowManager.QATContents">
            <summary>
            Gets a the view that handles the overflow items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.GetPreferredSize(Krypton.Toolkit.IRenderer,System.Drawing.Size)">
            <summary>
            Discover the preferred size of the view.
            </summary>
            <param name="renderer">Renderer provider.</param>
            <param name="proposedSize">The custom-sized area for a control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the view.
            </summary>
            <param name="context">View context for layout operation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.KeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key down handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.KeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Perform key press handling.
            </summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewRibbonQATOverflowManager.KeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Perform key up handling.
            </summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewRibbonQATOverflowManager.FocusView">
            <summary>
            Gets and sets the view that has the focus.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppButton">
            <summary>
            Draws half of an application button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.#ctor(Krypton.Ribbon.KryptonRibbon,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppButton class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
            <param name="bottomHalf">Scroller orientation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonAppButton.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppMenu">
            <summary>
            Extends the ViewDrawDocker by drawing the ribbon app menu area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenu.#ctor(Krypton.Toolkit.IPaletteBack,Krypton.Toolkit.IPaletteBorder,Krypton.Toolkit.ViewBase,System.Drawing.Rectangle)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppMenu class.
            </summary>
            <param name="paletteBack">Palette source for the background.</param>        
            <param name="paletteBorder">Palette source for the border.</param>
            <param name="fixedElement">Element to display at provided screen rect.</param>
            <param name="fixedScreenRect">Screen rectangle for showing the element at.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenu.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenu.RenderAfter(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="renderContext">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppMenuDocs">
            <summary>
            Extends the ViewLayoutDocker by drawing the ribbon application button recent docs background.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuDocs.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppMenuDocs class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuDocs.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuDocs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuDocs.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppMenuInner">
            <summary>
            Extends the ViewLayoutDocker by drawing the ribbon application button inner background.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuInner.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppMenuInner class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuInner.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuInner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuInner.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppMenuOuter">
            <summary>
            Extends the ViewLayoutDocker by drawing the ribbon application button outer background.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuOuter.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppMenuOuter class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuOuter.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuOuter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuOuter.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec">
            <summary>
            Draw the image/text of a recent document in the application menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.IContextMenuProvider,Krypton.Ribbon.KryptonRibbonRecentDoc,System.Int32,Krypton.Toolkit.NeedPaintHandler,System.Int32)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppMenuRecentDec class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="provider">Provider of context menu information.</param>
            <param name="recentDoc">Source recent document instance.</param>
            <param name="maxWidth">Maximum width allowed for the item.</param>
            <param name="needPaintDelegate">Delegate for requesting paint updates.</param>
            <param name="index">Recent document index.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.RecentDoc">
            <summary>
            Gets access to the originating recent doc definition.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.ShortcutText">
            <summary>
            Gets access to the items shortcut text.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.CanCloseMenu">
            <summary>
            Gets a value indicating if the menu is capable of being closed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.Closing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Closing event on the provider.
            </summary>
            <param name="cea">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.Close(Krypton.Toolkit.CloseReasonEventArgs)">
            <summary>
            Raises the Close event on the provider.
            </summary>
            <param name="e">A CancelEventArgs containing the event data.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonAppMenuRecentDec.Provider">
            <summary>
            Gets direct access to the context menu provider.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonAppTab">
            <summary>
            Draws half of an application tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonAppTab class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonAppTab.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonCaptionArea">
            <summary>
            Ribbon area that contains the context titles, minibar and top half of application button.
            
            Includes fixes by Cocotteseb
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRedirect,Krypton.Ribbon.ViewDrawRibbonComposition,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonCaptionArea class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="redirect">Reference to redirector for palette settings.</param>
            <param name="compositionArea">Reference to the composition element.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.AppButtonController">
            <summary>
            Gets the single reference to the application button controller.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.AppTabController">
            <summary>
            Gets the single reference to the application tab controller.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.HookToolTipHandling">
            <summary>
            Perform steps to generate a tooltip event when mouse is over the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.PreventIntegration">
            <summary>
            Gets and sets the integration override value.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.DrawBorderLast">
            <summary>
            Gets the drawing of the border before or after children.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.AppButtonChanged">
            <summary>
            Notify a change in the application button image.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.UpdateVisible">
            <summary>
            Update the visible state of the caption area based on integration, app button, contexts and qat location.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.VisibleQAT">
            <summary>
            Get the quick access toolbar view that is currently visible
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.UpdateQAT">
            <summary>
            Update display elements to reflect latest QAT setting.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.AppButtonVisibleChanged">
            <summary>
            A change in the app button visibility needs to be processed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.QATButtonsChanged">
            <summary>
            Notification that the collection of QAT buttons has changed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.UsingCustomChrome">
            <summary>
            Gets a value indicating if the ribbon is integrated into the custom chrome.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.RedrawCustomChrome(System.Boolean)">
            <summary>
            Causes the custom chrome to be repainted.
            </summary>
            <param name="layout">Is a layout required.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.DrawCaptionOnComposition">
            <summary>
            Gets a value indicating if drawing on the composition element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.KryptonForm">
            <summary>
            Gets access to the integration form.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.RealWindowBorders">
            <summary>
            Gets the window borders of the krypton form.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.ContextTitles">
            <summary>
            Gets access to the layout view used for the context titles.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.PerformFormChromeCheck">
            <summary>
            Redecide if the custom chrome and integration can occur.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.DoesCurrentMouseDownEndAllTracking(System.Drawing.Point)">
            <summary>
            Should a mouse down at the provided point cause an end to popup tracking.
            </summary>
            <param name="pt">Client coordinates point.</param>
            <returns>True to end tracking; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCaptionArea.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCaptionArea.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires a request to have painting/layout performed.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder">
            <summary>
            Allocate a spacer for the right side of a window that prevents layout over the min/max/close buttons.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder.#ctor">
            <summary>
            Initialize a new instance of the ViewDrawRibbonCompoRightBorder class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder.CompOwnerForm">
            <summary>
            Gets and sets the owner form to use when compositing.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonCompoRightBorder.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonComposition">
            <summary>
            Allocate space for the location of the composition caption area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonComposition class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
            <param name="needPaint">Delegate for requested a paint.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonComposition.CompHeight">
            <summary>
            Gets the pixel height of the composition extension into the client area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonComposition.CompRightBorder">
            <summary>
            Gets and sets the associated right border for composition layout.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonComposition.CompHandle">
            <summary>
            Gets the handle of the composition element control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonComposition.CompVisible">
            <summary>
            Gets and sets the visible state.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonComposition.CompOwnerForm">
            <summary>
            Gets and sets the owner form to use when compositing.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.CompNeedPaint(System.Boolean)">
            <summary>
            Request a repaint and optional layout.
            </summary>
            <param name="needLayout">Is a layout required.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonComposition.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonContextTitle">
            <summary>
            Draws a context title.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.IPaletteRibbonBack)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonContextTitle class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="inherit">Source for inheriting the ribbon bacgkground colors.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonContextTitle.ContextTabSet">
            <summary>
            Gets and sets the context to display.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonContextTitle.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColor3(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColor4(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetRibbonBackColor5(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonContextTitle.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignBase">
            <summary>
            Draws a design time item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignBase class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignBase.Ribbon">
            <summary>
            Gets access to the ribbon control instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignBase.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignBase.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignBase.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignBase.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignCluster">
            <summary>
            Draws an design time only for adding a new button to a cluster.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignCluster.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCluster,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignCluster class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonCluster">Reference to cluster definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignCluster.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignCluster.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignCluster.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignCluster.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignCluster.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignCluster.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignGroup">
            <summary>
            Draws an design time only for adding a new group to the selected tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroup.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignGroup class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroup.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroup.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroup.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroup.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroup.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroup.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer">
            <summary>
            Draws an design time only for adding a new container to a group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignGroup class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGroup">Associated ribbon group.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupContainer.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines">
            <summary>
            Draws an design time only for adding a new item to a lines container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupLines,Krypton.Ribbon.GroupItemSize,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignGroupLines class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonLines">Associated ribbon group lines.</param>
            <param name="currentSize">Size the view should use.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.CurrentSize">
            <summary>
            Gets and sets the size the view should use.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupLines.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple">
            <summary>
            Draws an design time only for adding a new item to a triple container.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTriple,Krypton.Ribbon.GroupItemSize,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignGroupTriple class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonTriple">Associated ribbon group triple.</param>
            <param name="currentSize">Size the view should use.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.CurrentSize">
            <summary>
            Gets and sets the size the view should use.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignGroupTriple.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDesignTab">
            <summary>
            Draws an design time only for adding a new tab to the ribbon.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignTab.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDesignTab class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignTab.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignTab.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignTab.PreferredPadding">
            <summary>
            Gets the padding to use when calculating the preferred size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignTab.LayoutPadding">
            <summary>
            Gets the padding to use when laying out the view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonDesignTab.OuterPadding">
            <summary>
            Gets the padding to shrink the client area by when laying out.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDesignTab.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="sender">Source of the event.</param>
            <param name="e">An EventArgs containing the event data.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonDropArrow">
            <summary>
            Draws a drop arrow used in various ribbon controls.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDropArrow.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonDropArrow class.
            </summary>
            <param name="ribbon">Reference to owning control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDropArrow.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDropArrow.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDropArrow.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonDropArrow.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGalleryButton">
            <summary>
            Draws a gallery button with specified image.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewDrawRibbonGalleryButton.Click">
            <summary>
            Occurs when the mouse is used to left click the target.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.#ctor(Krypton.Toolkit.IPalette,Krypton.Toolkit.PaletteRelativeAlign,Krypton.Toolkit.PaletteRibbonGalleryButton,Krypton.Toolkit.GalleryImages,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGalleryButton class.
            </summary>
            <param name="palette">Reference to inherited palette.</param>
            <param name="alignment">Button alignment within gallery.</param>
            <param name="button">Button content to display.</param>
            <param name="images">Button images.</param>
            <param name="needPaint">Paint event delegate.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.ForceLeave">
            <summary>
            Force the mouse to leave the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryButton.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGalleryItem">
            <summary>
            View element that represents a single gallery item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.#ctor(Krypton.Ribbon.KryptonGallery,Krypton.Toolkit.IPaletteTriple,Krypton.Ribbon.ViewLayoutRibbonGalleryItems,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawButton class.
            </summary>
            <param name="gallery">Owning gallery instance.</param>
            <param name="palette">Palette used to recover values.</param>
            <param name="layout">Reference to item layout.</param>
            <param name="needPaint">Delegate for requesting paints.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.Track">
            <summary>
            Item is becoming tracked by the mouse.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.Untrack">
            <summary>
            Item is no longer tracked by the mouse.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGalleryItem.ImageList">
            <summary>
            Sets the image list to use for the source of the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGalleryItem.ImageIndex">
            <summary>
            Sets the index of the image to show.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGalleryItem.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroup">
            <summary>
            Draws an individual RibbonGroup.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroup class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGroup">Reference to ribbon group this represents.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroup.Collapsed">
            <summary>
            Gets and sets the collapsed setting of the group.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroup.Tracking">
            <summary>
            Gets and sets a value indicating if the group is tracking.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroup.Pressed">
            <summary>
            Gets and sets a value indicating if the group is tracking.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetLastFocusItem">
            <summary>
            Gets the last focus item from the group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.PerformNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Fires the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Get an array of available widths for the group with associated sizing values.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth[])">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Solution size.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroup.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupButton">
            <summary>
            Draws a ribbon group button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonButton">Reference to source button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButton.GroupButton">
            <summary>
            Gets access to the connected button definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButton.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder">
            <summary>
            Draws the background and border for a group button.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.Click">
            <summary>
            Occurs when the button is left clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.ContextClick">
            <summary>
            Occurs when the button is right clicked.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.DropDown">
            <summary>
            Occurs when the drop down button is clicked.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupItem,Krypton.Toolkit.IPaletteBack,Krypton.Toolkit.IPaletteBorder,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupButtonBackBorder class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="groupItem">Reference to owning group item.</param>
            <param name="paletteBack">Palette to use for the background.</param>
            <param name="paletteBorder">Palette to use for the border.</param>
            <param name="constantBorder">Should the border be a constant normal state.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.GroupItem">
            <summary>
            Gets access to the associated ribbon group item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.Controller">
            <summary>
            Gets access to the associated controller.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.SplitVertical">
            <summary>
            Gets and sets if the split button is vertical or horizontal.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.SplitRectangle">
            <summary>
            Gets and sets the rectangle for the split area.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.ButtonType">
            <summary>
            Gets and sets the type of button the view represents.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.Checked">
            <summary>
            Gets and sets the checked state of the button background/border.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.ConstantBorder">
            <summary>
            Gets and sets the drawing of a constant border.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.DrawNonTrackingAreas">
            <summary>
            Gets and sets if the non tracking areas are drawn.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.FinishDelegate">
            <summary>
            Gets access to the associated finish delegate.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonBackBorder.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupButtonImage">
            <summary>
            Draws either a large or small image from a group button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupButtonImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonButton">Reference to ribbon group button definition.</param>
            <param name="large">Show the large image.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupButtonImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupButtonText">
            <summary>
            Draws the text string for a group button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupButtonText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonButton">Group button to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupButtonText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox">
            <summary>
            Draws a ribbon group check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCheckBox,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupCheckBox class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonCheckBox">Reference to source check box definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GroupCheckBox">
            <summary>
            Gets access to the connected check box definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetShortText">
            <summary>
            Gets the short text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBox.GetLongText">
            <summary>
            Gets the long text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage">
            <summary>
            Draws a check box centered in the correct location.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCheckBox,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupCheckBoxImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonCheckBox">Reference to ribbon group check box definition.</param>
            <param name="large">Show the large image.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.CheckState">
            <summary>
            Gets and sets the check state of the check box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.Tracking">
            <summary>
            Gets and sets the tracking state of the check box.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.Pressed">
            <summary>
            Gets and sets the pressed state of the check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxImage.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText">
            <summary>
            Draws the text string for a group check box.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCheckBox,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupCheckBoxText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonCheckBox">Group check box to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCheckBoxText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton">
            <summary>
            Draws a ribbon group cluster button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonButton">Reference to source button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GroupClusterButton">
            <summary>
            Gets access to the connected button definition.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.BorderIgnoreNormal">
            <summary>
            ets and sets the ignoring of normal borders.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.ConstantBorder">
            <summary>
            Gets and sets the drawing of a constant border.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.DrawNonTrackingAreas">
            <summary>
            Gets and sets if the non tracking areas are drawn.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButton.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonImage">
            <summary>
            Draws a small image from a group cluster button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterButton)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterButtonImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonButton">Reference to ribbon group button definition.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText">
            <summary>
            Draws the text string for a group cluster button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterButton)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupButtonText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonButton">Group cluster button to display title for.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterButtonText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton">
            <summary>
            Draws a ribbon group cluster color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterColorButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterColorButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonButton">Reference to source button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GroupClusterColorButton">
            <summary>
            Gets access to the connected button definition.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.MaxBorderEdges">
            <summary>
            Gets and sets the maximum edges allowed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.BorderIgnoreNormal">
            <summary>
            Gets and sets the ignoring of normal borders.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.ConstantBorder">
            <summary>
            Gets and sets the drawing of a constant border.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.DrawNonTrackingAreas">
            <summary>
            Gets and sets if the non tracking areas are drawn.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButton.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage">
            <summary>
            Draws a small image from a group cluster color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterColorButton)">
            <summary>
            Initialize a new instance of the ViewDrawRibViewDrawRibbonGroupClusterColorButtonImagebonGroupClusterButtonImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonColorButton">Reference to ribbon group color button definition.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.SelectedColorRectChanged">
            <summary>
            Notification that the selected color has changed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText">
            <summary>
            Draws the text string for a group color cluster button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupClusterColorButton)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterColorButtonText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonColorButton">Group cluster color button to display title for.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterColorButtonText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterEdge">
            <summary>
            Draws a border edge but with a lighter inside area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterEdge.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteBorderEdge)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterEdge class.
            </summary>
            <param name="ribbon">Reference to owning ribbon..</param>
            <param name="palette">Palette source for drawing details.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterEdge.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator">
            <summary>
            Draws a short vertical cluster separator.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator.#ctor(Krypton.Ribbon.KryptonRibbon,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupClusterSeparator class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="start">Is this is cluster start separator.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupClusterSeparator.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupColorButton">
            <summary>
            Draws a ribbon group color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupColorButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupColorButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonColorButton">Reference to source color button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GroupColorButton">
            <summary>
            Gets access to the connected color button definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButton.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage">
            <summary>
            Draws either a large or small image from a group color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupColorButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupColorButtonImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonColorButton">Reference to ribbon group color button definition.</param>
            <param name="large">Show the large image.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage.SelectedColorRectChanged">
            <summary>
            Notification that the selected color has changed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText">
            <summary>
            Draws the text string for a group color button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupColorButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupColorButtonText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonColorButton">Group color button to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupColorButtonText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupComboBox">
            <summary>
            Draws a ribbon group combobox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupComboBox,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupComboBox class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonComboBox">Reference to source combobox.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GroupComboBox">
            <summary>
            Gets access to the owning group combobox instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupComboBox.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl">
            <summary>
            Draws a ribbon group custom control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCustomControl,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupCustom class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonCustom">Reference to source custom definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GroupCustomControl">
            <summary>
            Gets access to the owning group custom instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupCustomControl.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker">
            <summary>
            Draws a ribbon group date time picker.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupDateTimePicker,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupDateTimePicker class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonDateTimePicker">Reference to source date time picker.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GroupDateTimePicker">
            <summary>
            Gets access to the owning group date time picker instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDateTimePicker.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton">
            <summary>
            Draws a dialog box launcher button for a group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupDialogButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGroup">Reference to ribbon group this represents.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.DialogButtonController">
            <summary>
            Gets access to the controller used for the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDialogButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown">
            <summary>
            Draws a ribbon group domain up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupDomainUpDown,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupDomainUpDown class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonDomainUpDown">Reference to source domain up-down.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GroupDomainUpDown">
            <summary>
            Gets access to the owning group domain up-down instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupDomainUpDown.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupGallery">
            <summary>
            Draws a ribbon group gallery.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupGallery,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupGallery class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGallery">Reference to source gallery.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.KeyTipSelect">
            <summary>
            Perform action expected when a key tip is used to select the item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GroupGallery">
            <summary>
            Gets access to the owning group gallery instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets an array of the allowed possible sizes of the container.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth)">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Value for the container.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.ResetSolutionSize">
            <summary>
            Reset the container back to its requested size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGallery.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupGalleryImage">
            <summary>
            Draws a large image from a gallery.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupGallery)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupGalleryImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGallery">Reference to ribbon group gallery definition.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupGalleryImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupGalleryImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText">
            <summary>
            Draws the text string for a group gallery.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupGallery,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupGalleryText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonGallery">Group gallery button to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupGalleryText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupImage">
            <summary>
            Draws the group image for a collapsed group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Ribbon.ViewDrawRibbonGroup)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonGroup">Reference to ribbon group definition.</param>
            <param name="viewGroup">Reference to top level group element.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImage.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupImageBase">
            <summary>
            Base class for drawing an image in the specified size and state.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupImageBase class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.Ribbon">
            <summary>
            Gets access to the owning ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupImageBase.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupLabel">
            <summary>
            Draws a ribbon group label.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupLabel,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupLabel class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonLabel">Reference to source label definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GroupLabel">
            <summary>
            Gets access to the owning group label instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabel.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupLabelImage">
            <summary>
            Draws either a large or small image from a group label.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupLabel,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupLabelImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonLabel">Reference to ribbon group label definition.</param>
            <param name="large">Show the large image.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupLabelImage.DrawSize">
            <summary>
            Gets the size to draw the image.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupLabelImage.DrawImage">
            <summary>
            Gets the image to be drawn.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupLabelText">
            <summary>
            Draws the text string for a group label.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupLabel,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupLabelText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonLabel">Group label to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupLabelText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox">
            <summary>
            Draws a ribbon group masked textbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupMaskedTextBox,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupMaskedTextBox class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonMaskedTextBox">Reference to source masked textbox.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GroupMaskedTextBox">
            <summary>
            Gets access to the owning group masked textbox instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupMaskedTextBox.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown">
            <summary>
            Draws a ribbon group numeric up-down.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupNumericUpDown,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupNumericUpDown class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonNumericUpDown">Reference to source numeric up-down.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GroupNumericUpDown">
            <summary>
            Gets access to the owning group numeric up-down instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupNumericUpDown.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton">
            <summary>
            Draws a ribbon group radio button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupRadioButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupRadioButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonRadioButton">Reference to source radio button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GroupRadioButton">
            <summary>
            Gets access to the connected radio button definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image transparent color.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetShortText">
            <summary>
            Gets the short text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButton.GetLongText">
            <summary>
            Gets the long text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage">
            <summary>
            Draws a radio button centered in the correct location.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupRadioButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupRadioButtonImage class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonRadioButton">Reference to ribbon group radio button definition.</param>
            <param name="large">Show the large image.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.Checked">
            <summary>
            Gets and sets the checked state of the radio button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.Tracking">
            <summary>
            Gets and sets the tracking state of the radio button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.Pressed">
            <summary>
            Gets and sets the pressed state of the radio button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonImage.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText">
            <summary>
            Draws the text string for a group radio button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupRadioButton,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupRadioButtonText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonRadioButton">Group radio button to display title for.</param>
            <param name="firstText">Should show the first button text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRadioButtonText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox">
            <summary>
            Draws a ribbon group richtextbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupRichTextBox,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupRichTextBox class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonRichTextBox">Reference to source richtextbox.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GroupRichTextBox">
            <summary>
            Gets access to the owning group richtextbox instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupRichTextBox.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupsBorder">
            <summary>
            Draws the border around the groups inside the groups area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.#ctor(Krypton.Ribbon.KryptonRibbon,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupsBorder class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="borderOutside">Should border be placed outside the contents.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.BorderPadding">
            <summary>
            Gets the border padding applied to the view element.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColorStyle(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the background drawing style for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColor1(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the first background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColor2(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the second background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColor3(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the third background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColor4(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fourth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.GetRibbonBackColor5(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the fifth background color for the ribbon item.
            </summary>
            <param name="state">Palette value should be applicable to this state.</param>
            <returns>Color value.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.Ribbon">
            <summary>
            Gets access the source ribbon control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupsBorder.NeedPaintDelegate">
            <summary>
            Gets access the paint delegate.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch">
            <summary>
            Draws the border around the groups inside the groups area and manages per tab scrollers as well.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupsBorderSynch class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.ViewGroupFromPoint(System.Drawing.Point)">
            <summary>
            Gets the view element group that the provided point is inside.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>Reference if inside a group; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetGroupKeyTips(Krypton.Ribbon.KryptonRibbonTab)">
            <summary>
            Gets the array of group level key tips for the selected tab.
            </summary>
            <param name="tab">Ribbon tab reference.</param>
            <returns>Array of KeyTipInfo; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetFirstFocusItem">
            <summary>
            Gets the first focus item within the currently selected tab.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetLastFocusItem">
            <summary>
            Gets the last focus item within the currently selected tab.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetNextFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetPreviousFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupsBorderSynch.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupSeparator">
            <summary>
            Draws a long vertical group separator.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupSeparator,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupSeparator class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonSeparator">Reference to group separator definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets an array of the allowed possible sizes of the container.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth)">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Value for the container.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.ResetSolutionSize">
            <summary>
            Reset the container back to its requested size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupSeparator.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupText">
            <summary>
            Draws the text string for a group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupText class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonGroup">Ribbon group to display title for.</param>
            <param name="firstText">Should show the first group text.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupText.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupTextBox">
            <summary>
            Draws a ribbon group textbox.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTextBox,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupTextBox class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonTextBox">Reference to source textbox.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GroupTextBox">
            <summary>
            Gets access to the owning group textbox instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTextBox.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupTitle">
            <summary>
            Draws the title string for a group.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupTitle class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
            <param name="ribbonGroup">Ribbon group to display title for.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupTitle.PaletteRibbonGroup">
            <summary>
            Gets and sets the ribbon group palette to use.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupTitle.Height">
            <summary>
            Gets and sets the height of the title string.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTitle.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar">
            <summary>
            Draws a ribbon group track bar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTrackBar,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonGroupTrackBar class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="ribbonTrackBar">Reference to source track bar.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GroupTrackBar">
            <summary>
            Gets access to the owning group track bar instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.LostFocus(System.Windows.Forms.Control)">
            <summary>
            Source control has lost the focus.
            </summary>
            <param name="c">Reference to the source control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetLastFocusItem">
            <summary>
            Gets the last focus item from the item.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonGroupTrackBar.OnNeedPaint(System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
            <param name="invalidRect">Rectangle to invalidate.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonKeyTip">
            <summary>
            View for drawing an individual key tip.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonKeyTip.#ctor(Krypton.Ribbon.KeyTipInfo,Krypton.Toolkit.IPaletteBack,Krypton.Toolkit.IPaletteBorder,Krypton.Toolkit.IPaletteContent)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonKeyTip class.
            </summary>
            <param name="keyTipInfo">Key tip information to display.</param>
            <param name="paletteBack">Background palette for appearance.</param>
            <param name="paletteBorder">Border palette for appearance.</param>
            <param name="paletteContent">Content palette for appearance.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonKeyTip.KeyTipInfo">
            <summary>
            Gets the associated key tip info.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonKeyTip.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the content image.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Image value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonKeyTip.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be transparent.
            </summary>
            <param name="state">The state for which the image is needed.</param>
            <returns>Color value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonKeyTip.GetShortText">
            <summary>
            Gets the content short text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonKeyTip.GetLongText">
            <summary>
            Gets the content long text.
            </summary>
            <returns>String value.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonMinimizeBar">
            <summary>
            Draws a separator at the bottom of the tabs when ribbon minimized.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonMinimizeBar.#ctor(Krypton.Toolkit.IPaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonMinimizeBar class.
            </summary>
            <param name="palette">Source for palette values.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonMinimizeBar.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonMinimizeBar.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonPanel">
            <summary>
            Draws the ribbon background panel.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonPanel.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.IPaletteBack,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonPanel class.
            </summary>
            <param name="ribbon">Reference to owning ribbon instance.</param>
            <param name="paletteBack">Reference to palette for obtaining background colors.</param>
            <param name="paintDelegate">Delegate for generating repaints.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonPanel.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonPanel.PaintRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.Control)">
            <summary>
            Paint the provided rectangle.
            </summary>
            <param name="g">Graphics to use for drawing.</param>
            <param name="rect">Rectangle to be drawn.</param>
            <param name="edges">True if the edges needs to be drawn.</param>
            <param name="sender">Sender of the message..</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonQATBorder">
            <summary>
            Draws the border around the quick access toolbar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonQATBorder class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
            <param name="minibar">Minibar or full bar drawing.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATBorder.OwnerForm">
            <summary>
            Gets and sets the associated form instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATBorder.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATBorder.OverlapAppButton">
            <summary>
            Should the element overlap the app button to the left.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATBorder.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonQATButton">
            <summary>
            Draws a quick access toolbar button based on a IQuickAccessToolbarButton source.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.IQuickAccessToolbarButton,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonQATButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="qatButton">Reference to button definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATButton.KeyTipTarget">
            <summary>
            Gets the key tip target for this view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATButton.QATButton">
            <summary>
            Gets access to the source button this view represents.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATButton.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATButton.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonQATExtraButton">
            <summary>
            Draws the extra quick access button used for customization or overflowing.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.ClickAndFinish">
            <summary>
            Occurs when the quick access toolbar button has been clicked.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonQATExtraButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.KeyTipTarget">
            <summary>
            Gets the key tip target for this view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.Overflow">
            <summary>
            Gets and sets a value indicating if the button should be drawn as an overflow or context arrow.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonQATExtraButtonMini">
            <summary>
            Positions the quick access toolbar extra button for the minibar in the caption.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButtonMini.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonQATExtraButtonMini class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButtonMini.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATExtraButtonMini.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonQATOverflow">
            <summary>
            Draws the border around the overflow popup of the quick access toolbar.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonQATOverflow class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonQATOverflow.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonRecentDocs">
            <summary>
            Draws the recent documents title string.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonRecentDocs class.
            </summary>
            <param name="ribbon">Source ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentDocs.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonRecentShortcut">
            <summary>
            Draw the shortcut associated with a recent document entry in an application menu.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentShortcut.#ctor(Krypton.Toolkit.IPaletteContent,Krypton.Toolkit.IContentValues)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonRecentShortcut class.
            </summary>
            <param name="paletteContent">Palette source for the content.</param>
            <param name="values">Reference to actual content values.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentShortcut.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonRecentShortcut.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonScrollButton">
            <summary>
            Draws a scrolling button with given orientation.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.VisualOrientation)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonScrollButton class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="orientation">Scroller orientation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonScrollButton.Orientation">
            <summary>
            Gets and sets the visual orientation of the scroller button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonScrollButton.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonTab">
            <summary>
            Draws an individual RibbonTab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewLayoutRibbonTabs,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonTab class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="layoutTabs">Reference to view used for layout out tabs.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.KeyTipTarget">
            <summary>
            Gets access to the key tip target.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.ViewLayoutRibbonTabs">
            <summary>
            Gets access to the 
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.MakeDirty">
            <summary>
            Make dirty so cached values are not used.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.HasFocus">
            <summary>
            Gets and sets if the view has the focus and needs to draw appropriately.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.Ribbon">
            <summary>
            Gets access to the owning ribbon control instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.RibbonTab">
            <summary>
            Gets and sets the ribbon tab this is responsible for drawing.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.Checked">
            <summary>
            Gets and sets the checked state of the tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.PreferredBorder">
            <summary>
            Gets the preferred border size.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTab.LayoutBorder">
            <summary>
            Gets the layout border size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.RenderAfter(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering after child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.GetImage(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image used for the ribbon tab.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.GetImageTransparentColor(Krypton.Toolkit.PaletteState)">
            <summary>
            Gets the image color that should be interpreted as transparent.
            </summary>
            <param name="state">Tab state.</param>
            <returns>Transparent Color.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.GetShortText">
            <summary>
            Gets the short text used as the main ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTab.GetLongText">
            <summary>
            Gets the long text used as the secondary ribbon title.
            </summary>
            <returns>Title string.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewDrawRibbonTabSep">
            <summary>
            Draws a separator between ribbon tabs.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTabSep.#ctor(Krypton.Toolkit.IPaletteRibbonGeneral)">
            <summary>
            Initialize a new instance of the ViewDrawRibbonTabSep class.
            </summary>
            <param name="palette">Source for palette values.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTabSep.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewDrawRibbonTabSep.Draw">
            <summary>
            Gets and sets a value indicating if the tab separator should draw.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewDrawRibbonTabSep.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonAppButton">
            <summary>
            Layout area for the application button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppButton.#ctor(Krypton.Ribbon.KryptonRibbon,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonAppButton class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
            <param name="bottomHalf">Scroller orientation.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonAppButton.OwnerForm">
            <summary>
            Gets and sets the owning form instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonAppButton.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonAppButton.AppButton">
            <summary>
            Gets the view element that represents the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppButton.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppButton.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonAppTab">
            <summary>
            Layout area for the application tab.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppTab.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonAppTab class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonAppTab.ToString">
            <summary>
            Obtains t+he String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonAppTab.AppTab">
            <summary>
            Gets the view element that represents the button.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonCenter">
            <summary>
            View element that draws nothing and will center all children within itself.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenter.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonCenterButton class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenter.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenter.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonCenterPadding">
            <summary>
            View element adds padding to the contained elements and positions all elements centered.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenterPadding.#ctor(System.Windows.Forms.Padding)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupImage class.
            </summary>
            <param name="preferredPadding">Padding to use when calculating space.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenterPadding.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonCenterPadding.PreferredPadding">
            <summary>
            Gets and sets the preferred padding.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenterPadding.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonCenterPadding.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonCheckBox">
            <summary>
            Position the contenst of the ribbon check box.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonContextTitles">
            <summary>
            Ribbon layout that creates and positions context title drawing elements.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.ViewDrawRibbonCaptionArea)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonContextTitles class.
            </summary>
            <param name="ribbon">Reference to source ribbon control.</param>
            <param name="captionArea">Reference to view element that tracks the top level form.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonContextTitles.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGalleryButtons">
            <summary>
            View element that positions the gallery buttons.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryButtons.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGalleryButtons class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryButtons.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryButtons.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryButtons.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGalleryItems">
            <summary>
            View element that creates and lays out the gallery items.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.#ctor(Krypton.Toolkit.IPalette,Krypton.Ribbon.KryptonGallery,Krypton.Toolkit.NeedPaintHandler,Krypton.Ribbon.ViewDrawRibbonGalleryButton,Krypton.Ribbon.ViewDrawRibbonGalleryButton,Krypton.Ribbon.ViewDrawRibbonGalleryButton)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGalleryItems class.
            </summary>
            <param name="palette">Reference to palette for display values.</param>
            <param name="gallery">Reference to owning gallery.</param>
            <param name="needPaint">Delegate for requesting paints.</param>
            <param name="buttonUp">Reference to the up button.</param>
            <param name="buttonDown">Reference to the down button.</param>
            <param name="buttonContext">Reference to the context button.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.ScrollIntoView">
            <summary>
            Gets and sets the scrolling into view setting.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.ActualLineItems">
            <summary>
            Gets the number of items currently displayed on a line.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveHome">
            <summary>
            Move tracking to the first item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveEnd">
            <summary>
            Move tracking to the last item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMovePageUp">
            <summary>
            Move tracking upwards by a whole page.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMovePageDown">
            <summary>
            Move tracking downwards by a whole page.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveUp">
            <summary>
            Move tracking up one line.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveDown">
            <summary>
            Move tracking down one line.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveLeft">
            <summary>
            Move tracking down left one item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.TrackMoveRight">
            <summary>
            Move tracking down right one item.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.CanNextLine">
            <summary>
            Is there a next line that can be displayed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.CanPrevLine">
            <summary>
            Is there a previous line that can be displayed.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.NextLine">
            <summary>
            Scroll to make the next line visible.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.PrevLine">
            <summary>
            Scroll to make the previous line visible.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.ButtonStyle">
            <summary>
            Gets and sets the button style used for each image item.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.BringIntoView(System.Int32)">
            <summary>
            Bring the specified image index into view.
            </summary>
            <param name="index">Index to bring into view.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGalleryItems.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupButton">
            <summary>
            Layout area for the group button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupButton.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupButton class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
            <param name="ribbonGroup">Reference to ribbon group this represents.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupButton.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupButton.DialogButtonController">
            <summary>
            Gets access to the controller used for the button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupButton.GetFocusView">
            <summary>
            Gets the view to use for the group dialog button.
            </summary>
            <returns>ViewBase if valid as a focus item; otherwise false.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupCluster">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent a ribbon group button cluster.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupCluster,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupCluster class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="ribbonCluster">Reference to cluster definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetLastFocusItem">
            <summary>
            Gets the last focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList,System.Int32)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
            <param name="lineHint">Provide hint to item about its location.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.StartSeparator">
            <summary>
            Informs cluster if it needs a separator at the start.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.EndSeparator">
            <summary>
            Informs cluster if it needs a separator at the end.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.SetGroupItemSize(Krypton.Ribbon.GroupItemSize)">
            <summary>
            Override the group item size if possible.
            </summary>
            <param name="size">New size to use.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.ResetGroupItemSize">
            <summary>
            Reset the group item size to the item definition.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupCluster.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupContent">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent ribbon group content.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroup,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupContent class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="ribbonGroup">The ribbon group this layout is used to display.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupContent.DialogView">
            <summary>
            Gets and sets the dialog view reference.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the group content.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetLastFocusItem">
            <summary>
            Gets the last focus item from the group.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Get an array of available widths for the group with associated sizing values.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth[])">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Solution size.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupContent.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupLines">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent ribbon group lines.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupLines,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupLines class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="ribbonLines">Reference to lines definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupLines.CurrentSize">
            <summary>
            Let other views discover our current size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetLastFocusItem">
            <summary>
            Gets the last focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets an array of the allowed possible sizes of the container.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth)">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Value for the container.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.ResetSolutionSize">
            <summary>
            Reset the container back to its requested size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupLines.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroups">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent ribbon groups.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonTab,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroups class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="ribbonTab">RibbonTab to organize groups.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroups.NeedPaintDelegate">
            <summary>
            Set the new paint delegate to use for painting requests.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.ViewGroupFromPoint(System.Drawing.Point)">
            <summary>
            Gets the view element group that the provided point is inside.
            </summary>
            <param name="pt">Mouse point.</param>
            <returns>Reference if inside a group; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetGroupKeyTips">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <returns>Array of KeyTipInfo; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the groups.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetLastFocusItem">
            <summary>
            Gets the last focus item from the groups.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetNextFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetPreviousFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroups.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupsArea">
            <summary>
            Contains all the layout of the groups area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRedirect,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupsArea class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="redirect">Reference to redirector for palette settings.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.ViewGroups">
            <summary>
            Gets access to the groups border view.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.BackStyle">
            <summary>
            Gets and sets the background style.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupsArea.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonGroupTriple">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent ribbon group triple.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Ribbon.KryptonRibbonGroupTriple,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonGroupTriple class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="ribbonTriple">Reference to triple definition.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetFirstFocusItem">
            <summary>
            Gets the first focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetLastFocusItem">
            <summary>
            Gets the last focus item from the container.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetNextFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetPreviousFocusItem(Krypton.Toolkit.ViewBase,System.Boolean@)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <param name="matched">Has the current focus item been matched yet.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetGroupKeyTips(Krypton.Ribbon.KeyTipInfoList)">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <param name="keyTipList">List to add new entries into.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetPossibleSizes(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Gets an array of the allowed possible sizes of the container.
            </summary>
            <param name="context">Context used to calculate the sizes.</param>
            <returns>Array of size values.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.SetSolutionSize(Krypton.Ribbon.ItemSizeWidth)">
            <summary>
            Update the group with the provided sizing solution.
            </summary>
            <param name="size">Value for the container.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.ResetSolutionSize">
            <summary>
            Reset the container back to its requested size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.RenderBefore(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform rendering before child elements are rendered.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonGroupTriple.OnNeedPaint(System.Boolean)">
            <summary>
            Raises the NeedPaint event.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonPadding">
            <summary>
            View element adds padding to the provided drawing area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonPadding.#ctor(System.Windows.Forms.Padding)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonPadding class.
            </summary>
            <param name="preferredPadding">Padding to use when calculating space.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonPadding.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonPadding.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonPadding.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonQATContents">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent individual QAT entries.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonQATContents class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="showExtraButton">Should the extra button be shown.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATContents.Ribbon">
            <summary>
            Gets access to the ribbon control instance.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetQATKeyTips(Krypton.Toolkit.KryptonForm)">
            <summary>
            Generate a key tip info for each visible tab.
            </summary>
            <param name="ownerForm">KryptonForm instance that owns this view.</param>
            <returns>Array of KeyTipInfo instances.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATContents.Overflow">
            <summary>
            Gets a value indicating if overflowing is occuring.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATContents.QATButtons">
            <summary>
            Returns a collection of all the quick access toolbar definitions.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.ViewForButton(Krypton.Ribbon.IQuickAccessToolbarButton)">
            <summary>
            Gets access to the view used to display the provided button definition.
            </summary>
            <param name="qatButton"></param>
            <returns>Element that matches button; otherwise null</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetFirstQATView">
            <summary>
            Gets the view element for the first visible and enabled quick access toolbar button.
            </summary>
            <returns>ViewBase if found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetLastQATView">
            <summary>
            Gets the view element for the first visible and enabled quick access toolbar button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetNextQATView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the view element the button after the one provided.
            </summary>
            <param name="qatButton">Search for entry after this view.</param>
            <returns>ViewBase if found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATContents.GetPreviousQATView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the view element for the button before the one provided.
            </summary>
            <param name="qatButton">Search for entry after this view.</param>
            <returns>ViewBase if found; otherwise false.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATContents.ParentControl">
            <summary>
            Gets a reference to the owning control of this element.
            </summary>
            <returns>Control reference.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonQATFromOverflow">
            <summary>
            Extends the ViewLayoutRibbonQATContents by providing the definitions that are overflowing the original source.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATFromOverflow.#ctor(System.Windows.Forms.Control,Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler,System.Boolean,Krypton.Ribbon.ViewLayoutRibbonQATContents)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonQATFromOverflow class.
            </summary>
            <param name="parentControl">Owning control used to find screen positions.</param>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="showExtraButton">Should the extra button be shown.</param>
            <param name="contents">Source for finding buttons that are overflowing.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATFromOverflow.QATButtons">
            <summary>
            Returns a collection of all the quick access toolbar definitions.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATFromOverflow.ParentControl">
            <summary>
            Gets a reference to the owning control of this element.
            </summary>
            <returns>Control reference.</returns>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonQATFromRibbon">
            <summary>
            Extends the ViewLayoutRibbonQATContents by providing the definitions from the ribbon control itself.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATFromRibbon.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonQATFromRibbon class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
            <param name="showExtraButton">Should the extra button be shown.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATFromRibbon.QATButtons">
            <summary>
            Returns a collection of all the quick access toolbar definitions.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonQATMini">
            <summary>
            Layout area containing a quick access toolbar border and extra button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonQATMini class.
            </summary>
            <param name="ribbon">Owning control instance.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATMini.OwnerForm">
            <summary>
            Gets and sets the associated form instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATMini.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonQATMini.OverlapAppButton">
            <summary>
            Should the element overlap the app button to the left.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetQATKeyTips">
            <summary>
            Generate a key tip info for each visible tab.
            </summary>
            <returns>Array of KeyTipInfo instances.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetFirstQATView">
            <summary>
            Gets the view element for the first visible and enabled quick access toolbar button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetLastQATView">
            <summary>
            Gets the view element for the first visible and enabled quick access toolbar button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetNextQATView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the view element the button after the one provided.
            </summary>
            <param name="qatButton">Search for entry after this view.</param>
            <returns>ViewBase if found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetPreviousQATView(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the view element for the button before the one provided.
            </summary>
            <param name="qatButton">Search for entry after this view.</param>
            <returns>ViewBase if found; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonQATMini.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonRadioButton">
            <summary>
            Position the contenst of the ribbon radio button.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonRowCenter">
            <summary>
            View element that positions the elements in a row centered in total area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonRowCenter.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonRowCenter class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonRowCenter.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonRowCenter.CurrentSize">
            <summary>
            Gets and sets the current group item size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonRowCenter.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonRowCenter.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonScroller">
            <summary>
            Layout a scroller button with appropriate separator space around it.
            </summary>
        </member>
        <member name="E:Krypton.Ribbon.ViewLayoutRibbonScroller.Click">
            <summary>
            Occurs when the button has been clicked.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScroller.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.VisualOrientation,System.Boolean,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonScroller class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="orientation">Scroller orientation.</param>
            <param name="insetForTabs">Should scoller be inset for use in tabs area.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScroller.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScroller.Orientation">
            <summary>
            Gets and sets the visual orientation of the scroller button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScroller.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScroller.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonScrollPort">
            <summary>
            Sizes and positions a provided view but provides scrolling if too big for area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.RibbonViewControl.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the ViewControl class.
            </summary>
            <param name="ribbon">Top level ribbon control.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.RibbonViewControl.HideFocus">
            <summary>
            Hide focus by giving it to the hidden control.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.RibbonViewControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
            <returns>True is handled; otherwise false.</returns>
        </member>
        <member name="E:Krypton.Ribbon.ViewLayoutRibbonScrollPort.PaintBackground">
            <summary>
            Occurs when the background needs painting.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.#ctor(Krypton.Ribbon.KryptonRibbon,System.Windows.Forms.Orientation,Krypton.Toolkit.ViewBase,System.Boolean,System.Int32,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonScrollPort class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="orientation">Viewport orientation.</param>
            <param name="viewFiller">View to size and position.</param>
            <param name="insetForTabs">Should scoller be inset for use in tabs area.</param>
            <param name="scrollSpeed">Scrolling speed.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.ViewControlPaintDelegate">
            <summary>
            Gets access to the paint delegate to redraw the owning control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.TransparentBackground">
            <summary>
            Gets and sets if the background is transparent.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.ViewLayoutControl">
            <summary>
            Gets access to the actual control instance.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.Visible">
            <summary>
            Gets and sets the visible state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.Enabled">
            <summary>
            Gets and sets the enabled state of the element.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonScrollPort.Orientation">
            <summary>
            Gets and sets the orientation of the scroller viewport.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetGroupKeyTips">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <returns>Array of KeyTipInfo; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetFirstFocusItem">
            <summary>
            Gets the first focus item within the scroll port.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetLastFocusItem">
            <summary>
            Gets the last focus item within the scroll port.
            </summary>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetNextFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the next focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetPreviousFocusItem(Krypton.Toolkit.ViewBase)">
            <summary>
            Gets the previous focus item based on the current item as provided.
            </summary>
            <param name="current">The view that is currently focused.</param>
            <returns>ViewBase of item; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonScrollPort.Render(Krypton.Toolkit.RenderContext)">
            <summary>
            Perform a render of the elements.
            </summary>
            <param name="context">Rendering context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonSeparator">
            <summary>
            Positions a separator to take up space without drawing.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonSeparator.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonSeparator class.
            </summary>
            <param name="length">Length of the separator.</param>
            <param name="ignoreMouse">Should mouse messages be ignored.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonSeparator.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonSeparator class.
            </summary>
            <param name="width">Width of the separator.</param>
            <param name="height">Height of the separator.</param>
            <param name="ignoreMouse">Should mouse messages be ignored.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonSeparator.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonSeparator.SeparatorSize">
            <summary>
            Gets and sets the size of the separator.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonSeparator.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonSeparator.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonTabs">
            <summary>
            Extends the ViewComposite by creating and laying out elements to represent ribbon tabs.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonTabs class.
            </summary>
            <param name="ribbon">Owning ribbon control instance.</param>
            <param name="needPaint">Delegate for notifying paint requests.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabs.NeedPaintDelegate">
            <summary>
            Set the new paint delegate to use for painting requests.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabs.ParentControl">
            <summary>
            Gets and sets the parent control.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForSpare">
            <summary>
            Gets access to the tabs spare area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForRibbonTab(Krypton.Ribbon.KryptonRibbonTab)">
            <summary>
            Gets the view element for drawing the provided ribbon tab.
            </summary>
            <param name="ribbonTab">Tab for which view element is needed.</param>
            <returns>View element for tab; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForFirstRibbonTab">
            <summary>
            Gets the view element for drawing the first visible ribbon tab.
            </summary>
            <returns>View element for a tab; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForNextRibbonTab(Krypton.Ribbon.KryptonRibbonTab)">
            <summary>
            Gets the view element for drawing the next tab after the provided one.
            </summary>
            <param name="ribbonTab">Current ribbon tab to use when searching.</param>
            <returns>View element for a tab; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForPreviousRibbonTab(Krypton.Ribbon.KryptonRibbonTab)">
            <summary>
            Gets the view element for drawing the previous tab from the provided one.
            </summary>
            <param name="ribbonTab">Current ribbon tab to use when searching.</param>
            <returns>View element for a tab; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetViewForLastRibbonTab">
            <summary>
            Gets the view element for drawing the last visible ribbon tab.
            </summary>
            <returns>View element for a tab; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetTabKeyTips">
            <summary>
            Generate a key tip info for each visible tab.
            </summary>
            <returns>Array of KeyTipInfo instances.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabs.ContextTabSets">
            <summary>
            Gets access to the collection of tab sets shown in the tabs area.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.ProcessMouseWheel(System.Boolean)">
            <summary>
            Process the mouse wheel change of selection.
            </summary>
            <param name="next">True if movement to next tab required; otherwise previous.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabs.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonTabsArea">
            <summary>
            Ribbon area that contains the tabs and pendant.
            </summary>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonTabsArea.RibbonButtonSpecFixedCollection">
            <summary>
            Collection for managing ButtonSpec fixed instances.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.RibbonButtonSpecFixedCollection.#ctor(Krypton.Ribbon.KryptonRibbon)">
            <summary>
            Initialize a new instance of the RibbonButtonSpecFixedCollection class.
            </summary>
            <param name="owner">Reference to owning object.</param>
        </member>
        <member name="E:Krypton.Ribbon.ViewLayoutRibbonTabsArea.PaintBackground">
            <summary>
            Occurs when the background needs painting.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.#ctor(Krypton.Ribbon.KryptonRibbon,Krypton.Toolkit.PaletteRedirect,Krypton.Ribbon.ViewDrawRibbonCaptionArea,Krypton.Ribbon.ViewLayoutRibbonContextTitles,Krypton.Toolkit.NeedPaintHandler)">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonTabsArea class.
            </summary>
            <param name="ribbon">Reference to owning ribbon control.</param>
            <param name="redirect">Reference to redirector for palette settings.</param>
            <param name="captionArea">Reference to the caption area.</param>
            <param name="layoutContexts">Reference to layout of the context area.</param>
            <param name="needPaintDelegate">Delegate for notifying paint/layout changes.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.HookToolTipHandling">
            <summary>
            Perform steps to generate a tooltip event when mouse is over the application button.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.CheckRibbonSize">
            <summary>
            Check if the ribbon should be visible or hidden at its current size.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.AppButtonVisibleChanged">
            <summary>
            A change in the app button visibility needs to be processed.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.LayoutTabs">
            <summary>
            Gets access to the view layout used for the individual ribbon tabs.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.LayoutAppButton">
            <summary>
            Gets access to the view layout used for the application button.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.LayoutAppTab">
            <summary>
            Gets access to the view layout used for the application tab.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.TabsContainerControl">
            <summary>
            Gets access to the control that contains the tabs.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.GetTabKeyTips">
            <summary>
            Gets the array of group level key tips.
            </summary>
            <returns>Array of KeyTipInfo; otherwise null.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.TestForAppButtonDoubleClick">
            <summary>
            Test if there has been a double click of the app button.
            </summary>
            <returns>True if a double click was detected and pressed.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.ToolTipManager">
            <summary>
            Gets access to the tool tip manager.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.ButtonSpecManager">
            <summary>
            Gets the button specification manager.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.RecreateButtons">
            <summary>
            Recreate the button specifications.
            </summary>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTabsArea.NeedPaintDelegate">
            <summary>
            Gets access to the need paint delegate.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsArea.PerformNeedPaint(System.Boolean)">
            <summary>
            Fires a request to have painting/layout performed.
            </summary>
            <param name="needLayout">Does the palette change require a layout.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonTabsSpare">
            <summary>
            View element that draws nothing and takes up all given space.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsSpare.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonTabsSpare class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsSpare.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsSpare.GetPreferredSize(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Discover the preferred size of the element.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTabsSpare.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="T:Krypton.Ribbon.ViewLayoutRibbonTitle">
            <summary>
            View element that draws nothing and will center all children within itself.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTitle.#ctor">
            <summary>
            Initialize a new instance of the ViewLayoutRibbonTitle class.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTitle.ToString">
            <summary>
            Obtains the String representation of this instance.
            </summary>
            <returns>User readable name of the instance.</returns>
        </member>
        <member name="P:Krypton.Ribbon.ViewLayoutRibbonTitle.VertOffset">
            <summary>
            Gets and sets the vertial offset for bottom docked elements.
            </summary>
        </member>
        <member name="M:Krypton.Ribbon.ViewLayoutRibbonTitle.Layout(Krypton.Toolkit.ViewLayoutContext)">
            <summary>
            Perform a layout of the elements.
            </summary>
            <param name="context">Layout context.</param>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_TOPMOST">
            <summary>
                Places the window above all non-topmost windows. The window maintains its topmost position even when it is deactivated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_NOTOPMOST">
            <summary>
                Places the window above all non-topmost windows (that is, behind all topmost windows). This flag has no effect if the window is already a non-topmost window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_TOP">
            <summary>
                Places the window at the top of the Z order.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HWND_BOTTOM">
            <summary>
                Places the window at the bottom of the Z order. If the hWnd parameter identifies a topmost window, the window loses its topmost status and is placed at the bottom of all other windows.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SHADEBLENDCAPS">
            <summary>
            Shading and Blending caps
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.VREFRESH">
            <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DESKTOPVERTRES">
            <summary>
            Vertical height of entire desktop in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.DESKTOPHORZRES">
            <summary>
            Horizontal width of entire desktop in pixels
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.DeviceCap.BLTALIGNMENT">
            <summary>
            Preferred blt alignment
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.BOOL">
            <summary>
             Blittable version of Windows BOOL type. It is convenient in situations where
             manual marshalling is required, or to avoid overhead of regular bool marshalling.
            </summary>
            <remarks>
             Some Windows APIs return arbitrary integer values although the return type is defined
             as BOOL. It is best to never compare BOOL to TRUE. Always use bResult != BOOL.FALSE
             or bResult == BOOL.FALSE .
            </remarks>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOSIZE">
            <summary>Retains the current size (ignores the cx and cy parameters).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOMOVE">
            <summary>Retains the current position (ignores X and Y parameters).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOZORDER">
            <summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOREDRAW">
            <summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to
            the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent
            window uncovered as a result of the window being moved. When this flag is set, the application must
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOACTIVATE">
            <summary>Does not activate the window. If this flag is not set, the window is activated and moved to the
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter
            parameter).</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DRAWFRAME">
            <summary>Draws a frame (defined in the window's class description) around the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.FRAMECHANGED">
            <summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to
            the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.SHOWWINDOW">
            <summary>Displays the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.HIDEWINDOW">
            <summary>Hides the window.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOCOPYBITS">
            <summary>Discards the entire contents of the client area. If this flag is not specified, the valid
            contents of the client area are saved and copied back into the client area after the window is sized or
            repositioned.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOOWNERZORDER">
            <summary>Does not change the owner window's position in the Z order.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.NOREPOSITION">
            <summary>Same as the SWP_NOOWNERZORDER flag.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DONOTSENDCHANGINGEVENT">
            <summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.DEFERERASE">
            <summary>Prevents generation of the WM_SYNCPAINT message.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SWP_.ASYNCWINDOWPOS">
            <summary>If the calling thread and the thread that owns the window are attached to different input queues,
            the system posts the request to the thread that owns the window. This prevents the calling thread from
            blocking its execution while other threads process the request.</summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.SimpleBeep">
            <summary>
            A simple windows beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.OK">
            <summary>
            A standard windows OK beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Question">
            <summary>
            A standard windows Question beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Exclamation">
            <summary>
            A standard windows Exclamation beep
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BeepType.Asterisk">
            <summary>
            A standard windows Asterisk beep
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.SM_">
            <summary>
            Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
              
            This Enum and declaration signature was written by Gabriel T. Sharp
            ai_productions@verizon.net or osirisgothra@hotmail.com
            Obtained on pinvoke.net, please contribute your code to support the wiki!
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.ARRANGE">
            <summary>
            The flags that specify how the system arranged minimized windows. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CLEANBOOT">
            <summary>
            The value that specifies how the system is started: 
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CMONITORS">
            <summary>
            The number of display monitors on a desktop. For more information, see the Remarks section in this topic.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CMOUSEBUTTONS">
            <summary>
            The number of buttons on a mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXBORDER">
            <summary>
            The width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXCURSOR">
            <summary>
            The width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDLGFRAME">
            <summary>
            This value is the same as SM_CXFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDOUBLECLK">
            <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels. ,
            The second click must occur within the rectangle that is defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKWIDTH.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXDRAG">
            <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXEDGE">
            <summary>
            The width of a 3-D border, in pixels. This metric is the 3-D counterpart of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border.
            This value is the same as SM_CXDLGFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFOCUSBORDER">
            <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFRAME">
            <summary>
            This value is the same as SM_CXSIZEFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXFULLSCREEN">
            <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars, 
            call the SystemParametersInfofunction with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXHSCROLL">
            <summary>
            The width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXHTHUMB">
            <summary>
            The width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXICON">
            <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions 
            that SM_CXICON and SM_CYICON specifies.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXICONSPACING">
            <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMAXIMIZED">
            <summary>
            The default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMAXTRACK">
            <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels. 
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMENUCHECK">
            <summary>
            The width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMENUSIZE">
            <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMIN">
            <summary>
            The minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINIMIZED">
            <summary>
            The width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINSPACING">
            <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXMINTRACK">
            <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXPADDEDBORDER">
            <summary>
            The amount of border padding for captioned windows, in pixels. Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSCREEN">
            <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSIZE">
            <summary>
            The width of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CXFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSMICON">
            <summary>
            The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXSMSIZE">
            <summary>
            The width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXVIRTUALSCREEN">
            <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_XVIRTUALSCREEN metric is the coordinates for the left side of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CXVSCROLL">
            <summary>
            The width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYBORDER">
            <summary>
            The height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYCAPTION">
            <summary>
            The height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYCURSOR">
            <summary>
            The height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDLGFRAME">
            <summary>
            This value is the same as SM_CYFIXEDFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDOUBLECLK">
            <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider 
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click 
            rectangle, call SystemParametersInfo with SPI_SETDOUBLECLKHEIGHT.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYDRAG">
            <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins. 
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation. 
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYEDGE">
            <summary>
            The height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. 
            SM_CXFIXEDFRAME is the height of the horizontal border, and SM_CYFIXEDFRAME is the width of the vertical border. 
            This value is the same as SM_CYDLGFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFOCUSBORDER">
            <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect. 
            This value is in pixels. 
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFRAME">
            <summary>
            This value is the same as SM_CYSIZEFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYFULLSCREEN">
            <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels. 
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYHSCROLL">
            <summary>
            The height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYICON">
            <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYICONSPACING">
            <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size 
            SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMAXIMIZED">
            <summary>
            The default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMAXTRACK">
            <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. 
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing 
            the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENU">
            <summary>
            The height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENUCHECK">
            <summary>
            The height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMENUSIZE">
            <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMIN">
            <summary>
            The minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINIMIZED">
            <summary>
            The height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINSPACING">
            <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYMINTRACK">
            <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSCREEN">
            <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling 
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSIZE">
            <summary>
            The height of a button in a window caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border. 
            This value is the same as SM_CYFRAME.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMCAPTION">
            <summary>
            The height of a small caption, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMICON">
            <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYSMSIZE">
            <summary>
            The height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVIRTUALSCREEN">
            <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_YVIRTUALSCREEN metric is the coordinates for the top of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVSCROLL">
            <summary>
            The height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.CYVTHUMB">
            <summary>
            The height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.DIGITIZER">
            <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input 
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device. 
            For more information, see Remarks. 
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.IMMENABLED">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0. 
            SM_IMMENABLED indicates whether the system is ready to use a Unicode-based IME on a Unicode application. 
            To ensure that a language-dependent IME works, check SM_DBCSENABLED and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MAXIMUMTOUCHES">
            <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. SM_MAXIMUMTOUCHES returns the aggregate maximum of the 
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers, 
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts 
            the hardware can provide. Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because 
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEHORIZONTALWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.NETWORK">
            <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.REMOTECONTROL">
            <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is 
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0. 
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to 
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session 
            and potentially interact with it.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.REMOTESESSION">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services 
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session, 
            the return value is 0. 
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console. 
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SAMEDISPLAYFORMAT">
            <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth, 
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, 
            or those bits can be located in different places in a pixel color value.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SECURE">
            <summary>
            This system metric should be ignored; it always returns 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SERVERR2">
            <summary>
            The build number if the system is Windows Server 2003 R2; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present 
            the information only in audible form; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SHUTTINGDOWN">
            <summary>
            Nonzero if the current session is shutting down; otherwise, 0. Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.STARTER">
            <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.SWAPBUTTON">
            <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The SM_DIGITIZER setting indicates the type of digitizer 
            input supported by a device running Windows 7 or Windows Server 2008 R2. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.XVIRTUALSCREEN">
            <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CXVIRTUALSCREEN metric is the width of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SM_.YVIRTUALSCREEN">
            <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            The SM_CYVIRTUALSCREEN metric is the height of the virtual screen.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_HIDE">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>      
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position. This value
            is similar to <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_NORMAL"/>, except
            the window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_MINIMIZE">
            <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window. This value is similar to
            <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWMINIMIZED"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWNA">
            <summary>
            Displays the window in its current size and position. This value is
            similar to <see cref="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOW"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_RESTORE">
            <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.ShowWindowCommands.SW_FORCEMINIMIZE">
            <summary>
             <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WM_">
            <summary>
            I needed some "Generic" magic to get from an enum to an int for switch and boolean operands
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.CS_">
            <summary>
            CS_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDFIRST">
            <summary>
            The retrieved handle identifies the window of the same type that is highest in the Z order.
            <para/>
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDLAST">
            <summary>
            The retrieved handle identifies the window of the same type that is lowest in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDNEXT">
            <summary>
            The retrieved handle identifies the window below the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_HWNDPREV">
            <summary>
            The retrieved handle identifies the window above the specified window in the Z order.
            <para />
            If the specified window is a topmost window, the handle identifies a topmost window.
            If the specified window is a top-level window, the handle identifies a top-level window.
            If the specified window is a child window, the handle identifies a sibling window.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_OWNER">
            <summary>
            The retrieved handle identifies the specified window's owner window, if any.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_CHILD">
            <summary>
            The retrieved handle identifies the child window at the top of the Z order,
            if the specified window is a parent window; otherwise, the retrieved handle is NULL.
            The function examines only child windows of the specified window. It does not examine descendant windows.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.GetWindowType.GW_ENABLEDPOPUP">
            <summary>
            The retrieved handle identifies the enabled popup window owned by the specified window (the
            search uses the first such window found using GW_HWNDNEXT); otherwise, if there are no enabled
            popup windows, the retrieved handle is that of the specified window.
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WS_">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            https://www.autohotkey.com/docs/misc/Styles.htm
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.BS_">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            https://www.autohotkey.com/docs/misc/Styles.htm
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.WS_EX_">
            <summary>
            Window style extended values, WS_EX_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.SC_.F_ISSECURE">
            <summary>
            SCF_ISSECURE
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.HT">
            <summary>
            Non-client hit test values, HT*
            </summary>
        </member>
        <member name="T:Krypton.Toolkit.PI.GWL_">
            <summary>
            GetWindowLongPtr values, GWL_*
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.HSHELL_REDRAW">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/ms644991(v=vs.85).aspx 
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.PI.IsKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Is the specified key currently pressed down.
            </summary>
            <param name="key">Key to test.</param>
            <returns>True if pressed; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Toolkit.PI.IsKeyToggled(System.Windows.Forms.Keys)">
            <summary>
            Is the specified key currently toggled.
            </summary>
            <param name="key">Key to test.</param>
            <returns>True if toggled; otherwise false.</returns>
        </member>
        <member name="M:Krypton.Toolkit.PI.GetWindow(System.IntPtr,Krypton.Toolkit.PI.GetWindowType)">
            <summary>
            Retrieves a handle to a window that has the specified relationship (Z-Order or owner) to the specified window.
            </summary>
            <remarks>The EnumChildWindows function is more reliable than calling GetWindow in a loop. An application that
            calls GetWindow to perform this task risks being caught in an infinite loop or referencing a handle to a window
            that has been destroyed.</remarks>
            <param name="hWnd">A handle to a window. The window handle retrieved is relative to this window, based on the
            value of the uCmd parameter.</param>
            <param name="uCmd">The relationship between the specified window and the window whose handle is to be
            retrieved.</param>
            <returns>
            If the function succeeds, the return value is a window handle. If no window exists with the specified relationship
            to the specified window, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="T:Krypton.Toolkit.PI.BlurParams">
            <summary>
            Contains members that specify the nature of a Gaussian blur.
            </summary>
            <remarks>Cannot be pinned with GCHandle due to bool value.</remarks>
        </member>
        <member name="F:Krypton.Toolkit.PI.BlurParams.Radius">
            <summary>
            Real number that specifies the blur radius (the radius of the Gaussian convolution kernel) in
            pixels. The radius must be in the range 0 through 255. As the radius increases, the resulting
            bitmap becomes more blurry.
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.BlurParams.ExpandEdges">
            <summary>
            Boolean value that specifies whether the bitmap expands by an amount equal to the blur radius.
            If TRUE, the bitmap expands by an amount equal to the radius so that it can have soft edges.
            If FALSE, the bitmap remains the same size and the soft edges are clipped.
            </summary>
        </member>
        <member name="M:Krypton.Toolkit.PI.GetNativeImage(System.Drawing.Bitmap)">
            <summary>
            Get the nativeImage field from the bitmap
            </summary>
            <param name="bitmap"></param>
            <returns>IntPtr</returns>
        </member>
        <member name="T:Krypton.Toolkit.PI.MONITORINFO">
            <summary>
            </summary>
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Krypton.Toolkit.PI.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
    </members>
</doc>
